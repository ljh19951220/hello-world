// Code generated by protoc-gen-go. DO NOT EDIT.
// source: finance.proto

package types

import (
	context "context"
	fmt "fmt"
	types "github.com/33cn/chain33/types"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FinanceAction struct {
	// Types that are valid to be assigned to Value:
	//	*FinanceAction_AddCreditToken
	//	*FinanceAction_DepositAsset
	//	*FinanceAction_WithdrawlAsset
	//	*FinanceAction_TransferCoins
	//	*FinanceAction_CreateBill
	//	*FinanceAction_ReleaseBill
	//	*FinanceAction_UnReleaseBill
	//	*FinanceAction_ApplyForFinancing
	//	*FinanceAction_UnApplyForFinancing
	//	*FinanceAction_ConfirmFinancing
	//	*FinanceAction_CashBill
	//	*FinanceAction_RepayBill
	//	*FinanceAction_ReportBroken
	//	*FinanceAction_SplitBill
	//	*FinanceAction_UnSplitBill
	//	*FinanceAction_ConfirmSplitBill
	//	*FinanceAction_DeliverBill
	//	*FinanceAction_UnDeliverBill
	//	*FinanceAction_ConfirmDeliverBill
	Value                isFinanceAction_Value `protobuf_oneof:"value"`
	Ty                   int32                 `protobuf:"varint,20,opt,name=ty,proto3" json:"ty,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *FinanceAction) Reset()         { *m = FinanceAction{} }
func (m *FinanceAction) String() string { return proto.CompactTextString(m) }
func (*FinanceAction) ProtoMessage()    {}
func (*FinanceAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{0}
}

func (m *FinanceAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FinanceAction.Unmarshal(m, b)
}
func (m *FinanceAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FinanceAction.Marshal(b, m, deterministic)
}
func (m *FinanceAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FinanceAction.Merge(m, src)
}
func (m *FinanceAction) XXX_Size() int {
	return xxx_messageInfo_FinanceAction.Size(m)
}
func (m *FinanceAction) XXX_DiscardUnknown() {
	xxx_messageInfo_FinanceAction.DiscardUnknown(m)
}

var xxx_messageInfo_FinanceAction proto.InternalMessageInfo

type isFinanceAction_Value interface {
	isFinanceAction_Value()
}

type FinanceAction_AddCreditToken struct {
	AddCreditToken *AddCreditToken `protobuf:"bytes,1,opt,name=addCreditToken,proto3,oneof"`
}

type FinanceAction_DepositAsset struct {
	DepositAsset *DepositAsset `protobuf:"bytes,2,opt,name=depositAsset,proto3,oneof"`
}

type FinanceAction_WithdrawlAsset struct {
	WithdrawlAsset *WithdrawlAsset `protobuf:"bytes,3,opt,name=withdrawlAsset,proto3,oneof"`
}

type FinanceAction_TransferCoins struct {
	TransferCoins *TransferCoins `protobuf:"bytes,4,opt,name=transferCoins,proto3,oneof"`
}

type FinanceAction_CreateBill struct {
	CreateBill *CreateBill `protobuf:"bytes,5,opt,name=createBill,proto3,oneof"`
}

type FinanceAction_ReleaseBill struct {
	ReleaseBill *ReleaseBill `protobuf:"bytes,6,opt,name=releaseBill,proto3,oneof"`
}

type FinanceAction_UnReleaseBill struct {
	UnReleaseBill *UnReleaseBill `protobuf:"bytes,7,opt,name=unReleaseBill,proto3,oneof"`
}

type FinanceAction_ApplyForFinancing struct {
	ApplyForFinancing *ApplyForFinancing `protobuf:"bytes,8,opt,name=applyForFinancing,proto3,oneof"`
}

type FinanceAction_UnApplyForFinancing struct {
	UnApplyForFinancing *UnApplyForFinancing `protobuf:"bytes,9,opt,name=unApplyForFinancing,proto3,oneof"`
}

type FinanceAction_ConfirmFinancing struct {
	ConfirmFinancing *ConfirmFinancing `protobuf:"bytes,10,opt,name=confirmFinancing,proto3,oneof"`
}

type FinanceAction_CashBill struct {
	CashBill *CashBill `protobuf:"bytes,11,opt,name=cashBill,proto3,oneof"`
}

type FinanceAction_RepayBill struct {
	RepayBill *RepayBill `protobuf:"bytes,12,opt,name=repayBill,proto3,oneof"`
}

type FinanceAction_ReportBroken struct {
	ReportBroken *ReportBroken `protobuf:"bytes,13,opt,name=reportBroken,proto3,oneof"`
}

type FinanceAction_SplitBill struct {
	SplitBill *SplitBill `protobuf:"bytes,14,opt,name=splitBill,proto3,oneof"`
}

type FinanceAction_UnSplitBill struct {
	UnSplitBill *UnSplitBill `protobuf:"bytes,15,opt,name=unSplitBill,proto3,oneof"`
}

type FinanceAction_ConfirmSplitBill struct {
	ConfirmSplitBill *ConfirmSplitBill `protobuf:"bytes,16,opt,name=confirmSplitBill,proto3,oneof"`
}

type FinanceAction_DeliverBill struct {
	DeliverBill *DeliverBill `protobuf:"bytes,17,opt,name=deliverBill,proto3,oneof"`
}

type FinanceAction_UnDeliverBill struct {
	UnDeliverBill *UnDeliverBill `protobuf:"bytes,18,opt,name=unDeliverBill,proto3,oneof"`
}

type FinanceAction_ConfirmDeliverBill struct {
	ConfirmDeliverBill *ConfirmDeliverBill `protobuf:"bytes,19,opt,name=confirmDeliverBill,proto3,oneof"`
}

func (*FinanceAction_AddCreditToken) isFinanceAction_Value() {}

func (*FinanceAction_DepositAsset) isFinanceAction_Value() {}

func (*FinanceAction_WithdrawlAsset) isFinanceAction_Value() {}

func (*FinanceAction_TransferCoins) isFinanceAction_Value() {}

func (*FinanceAction_CreateBill) isFinanceAction_Value() {}

func (*FinanceAction_ReleaseBill) isFinanceAction_Value() {}

func (*FinanceAction_UnReleaseBill) isFinanceAction_Value() {}

func (*FinanceAction_ApplyForFinancing) isFinanceAction_Value() {}

func (*FinanceAction_UnApplyForFinancing) isFinanceAction_Value() {}

func (*FinanceAction_ConfirmFinancing) isFinanceAction_Value() {}

func (*FinanceAction_CashBill) isFinanceAction_Value() {}

func (*FinanceAction_RepayBill) isFinanceAction_Value() {}

func (*FinanceAction_ReportBroken) isFinanceAction_Value() {}

func (*FinanceAction_SplitBill) isFinanceAction_Value() {}

func (*FinanceAction_UnSplitBill) isFinanceAction_Value() {}

func (*FinanceAction_ConfirmSplitBill) isFinanceAction_Value() {}

func (*FinanceAction_DeliverBill) isFinanceAction_Value() {}

func (*FinanceAction_UnDeliverBill) isFinanceAction_Value() {}

func (*FinanceAction_ConfirmDeliverBill) isFinanceAction_Value() {}

func (m *FinanceAction) GetValue() isFinanceAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *FinanceAction) GetAddCreditToken() *AddCreditToken {
	if x, ok := m.GetValue().(*FinanceAction_AddCreditToken); ok {
		return x.AddCreditToken
	}
	return nil
}

func (m *FinanceAction) GetDepositAsset() *DepositAsset {
	if x, ok := m.GetValue().(*FinanceAction_DepositAsset); ok {
		return x.DepositAsset
	}
	return nil
}

func (m *FinanceAction) GetWithdrawlAsset() *WithdrawlAsset {
	if x, ok := m.GetValue().(*FinanceAction_WithdrawlAsset); ok {
		return x.WithdrawlAsset
	}
	return nil
}

func (m *FinanceAction) GetTransferCoins() *TransferCoins {
	if x, ok := m.GetValue().(*FinanceAction_TransferCoins); ok {
		return x.TransferCoins
	}
	return nil
}

func (m *FinanceAction) GetCreateBill() *CreateBill {
	if x, ok := m.GetValue().(*FinanceAction_CreateBill); ok {
		return x.CreateBill
	}
	return nil
}

func (m *FinanceAction) GetReleaseBill() *ReleaseBill {
	if x, ok := m.GetValue().(*FinanceAction_ReleaseBill); ok {
		return x.ReleaseBill
	}
	return nil
}

func (m *FinanceAction) GetUnReleaseBill() *UnReleaseBill {
	if x, ok := m.GetValue().(*FinanceAction_UnReleaseBill); ok {
		return x.UnReleaseBill
	}
	return nil
}

func (m *FinanceAction) GetApplyForFinancing() *ApplyForFinancing {
	if x, ok := m.GetValue().(*FinanceAction_ApplyForFinancing); ok {
		return x.ApplyForFinancing
	}
	return nil
}

func (m *FinanceAction) GetUnApplyForFinancing() *UnApplyForFinancing {
	if x, ok := m.GetValue().(*FinanceAction_UnApplyForFinancing); ok {
		return x.UnApplyForFinancing
	}
	return nil
}

func (m *FinanceAction) GetConfirmFinancing() *ConfirmFinancing {
	if x, ok := m.GetValue().(*FinanceAction_ConfirmFinancing); ok {
		return x.ConfirmFinancing
	}
	return nil
}

func (m *FinanceAction) GetCashBill() *CashBill {
	if x, ok := m.GetValue().(*FinanceAction_CashBill); ok {
		return x.CashBill
	}
	return nil
}

func (m *FinanceAction) GetRepayBill() *RepayBill {
	if x, ok := m.GetValue().(*FinanceAction_RepayBill); ok {
		return x.RepayBill
	}
	return nil
}

func (m *FinanceAction) GetReportBroken() *ReportBroken {
	if x, ok := m.GetValue().(*FinanceAction_ReportBroken); ok {
		return x.ReportBroken
	}
	return nil
}

func (m *FinanceAction) GetSplitBill() *SplitBill {
	if x, ok := m.GetValue().(*FinanceAction_SplitBill); ok {
		return x.SplitBill
	}
	return nil
}

func (m *FinanceAction) GetUnSplitBill() *UnSplitBill {
	if x, ok := m.GetValue().(*FinanceAction_UnSplitBill); ok {
		return x.UnSplitBill
	}
	return nil
}

func (m *FinanceAction) GetConfirmSplitBill() *ConfirmSplitBill {
	if x, ok := m.GetValue().(*FinanceAction_ConfirmSplitBill); ok {
		return x.ConfirmSplitBill
	}
	return nil
}

func (m *FinanceAction) GetDeliverBill() *DeliverBill {
	if x, ok := m.GetValue().(*FinanceAction_DeliverBill); ok {
		return x.DeliverBill
	}
	return nil
}

func (m *FinanceAction) GetUnDeliverBill() *UnDeliverBill {
	if x, ok := m.GetValue().(*FinanceAction_UnDeliverBill); ok {
		return x.UnDeliverBill
	}
	return nil
}

func (m *FinanceAction) GetConfirmDeliverBill() *ConfirmDeliverBill {
	if x, ok := m.GetValue().(*FinanceAction_ConfirmDeliverBill); ok {
		return x.ConfirmDeliverBill
	}
	return nil
}

func (m *FinanceAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FinanceAction) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FinanceAction_AddCreditToken)(nil),
		(*FinanceAction_DepositAsset)(nil),
		(*FinanceAction_WithdrawlAsset)(nil),
		(*FinanceAction_TransferCoins)(nil),
		(*FinanceAction_CreateBill)(nil),
		(*FinanceAction_ReleaseBill)(nil),
		(*FinanceAction_UnReleaseBill)(nil),
		(*FinanceAction_ApplyForFinancing)(nil),
		(*FinanceAction_UnApplyForFinancing)(nil),
		(*FinanceAction_ConfirmFinancing)(nil),
		(*FinanceAction_CashBill)(nil),
		(*FinanceAction_RepayBill)(nil),
		(*FinanceAction_ReportBroken)(nil),
		(*FinanceAction_SplitBill)(nil),
		(*FinanceAction_UnSplitBill)(nil),
		(*FinanceAction_ConfirmSplitBill)(nil),
		(*FinanceAction_DeliverBill)(nil),
		(*FinanceAction_UnDeliverBill)(nil),
		(*FinanceAction_ConfirmDeliverBill)(nil),
	}
}

//添加授信Token
type AddCreditToken struct {
	CreditAddr           string   `protobuf:"bytes,1,opt,name=creditAddr,proto3" json:"creditAddr,omitempty"`
	GranteeAddr          string   `protobuf:"bytes,2,opt,name=granteeAddr,proto3" json:"granteeAddr,omitempty"`
	Symbol               string   `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Amount               int64    `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Rate                 int64    `protobuf:"varint,5,opt,name=rate,proto3" json:"rate,omitempty"`
	Duration             int64    `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
	Remark               string   `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`
	CreditIndentity      int32    `protobuf:"varint,8,opt,name=creditIndentity,proto3" json:"creditIndentity,omitempty"`
	GranteeIndentity     int32    `protobuf:"varint,9,opt,name=granteeIndentity,proto3" json:"granteeIndentity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddCreditToken) Reset()         { *m = AddCreditToken{} }
func (m *AddCreditToken) String() string { return proto.CompactTextString(m) }
func (*AddCreditToken) ProtoMessage()    {}
func (*AddCreditToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{1}
}

func (m *AddCreditToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddCreditToken.Unmarshal(m, b)
}
func (m *AddCreditToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddCreditToken.Marshal(b, m, deterministic)
}
func (m *AddCreditToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddCreditToken.Merge(m, src)
}
func (m *AddCreditToken) XXX_Size() int {
	return xxx_messageInfo_AddCreditToken.Size(m)
}
func (m *AddCreditToken) XXX_DiscardUnknown() {
	xxx_messageInfo_AddCreditToken.DiscardUnknown(m)
}

var xxx_messageInfo_AddCreditToken proto.InternalMessageInfo

func (m *AddCreditToken) GetCreditAddr() string {
	if m != nil {
		return m.CreditAddr
	}
	return ""
}

func (m *AddCreditToken) GetGranteeAddr() string {
	if m != nil {
		return m.GranteeAddr
	}
	return ""
}

func (m *AddCreditToken) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *AddCreditToken) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *AddCreditToken) GetRate() int64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *AddCreditToken) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *AddCreditToken) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *AddCreditToken) GetCreditIndentity() int32 {
	if m != nil {
		return m.CreditIndentity
	}
	return 0
}

func (m *AddCreditToken) GetGranteeIndentity() int32 {
	if m != nil {
		return m.GranteeIndentity
	}
	return 0
}

//CreditToken -- state DB 将授信记录写到区块链中
type CreditTokenStateDB struct {
	CreditAddr           string   `protobuf:"bytes,1,opt,name=creditAddr,proto3" json:"creditAddr,omitempty"`
	GranteeAddr          string   `protobuf:"bytes,2,opt,name=granteeAddr,proto3" json:"granteeAddr,omitempty"`
	Symbol               string   `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Amount               int64    `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Rate                 int64    `protobuf:"varint,5,opt,name=rate,proto3" json:"rate,omitempty"`
	AddTime              int64    `protobuf:"varint,6,opt,name=addTime,proto3" json:"addTime,omitempty"`
	Duration             int64    `protobuf:"varint,7,opt,name=duration,proto3" json:"duration,omitempty"`
	Remark               string   `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreditTokenStateDB) Reset()         { *m = CreditTokenStateDB{} }
func (m *CreditTokenStateDB) String() string { return proto.CompactTextString(m) }
func (*CreditTokenStateDB) ProtoMessage()    {}
func (*CreditTokenStateDB) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{2}
}

func (m *CreditTokenStateDB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreditTokenStateDB.Unmarshal(m, b)
}
func (m *CreditTokenStateDB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreditTokenStateDB.Marshal(b, m, deterministic)
}
func (m *CreditTokenStateDB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreditTokenStateDB.Merge(m, src)
}
func (m *CreditTokenStateDB) XXX_Size() int {
	return xxx_messageInfo_CreditTokenStateDB.Size(m)
}
func (m *CreditTokenStateDB) XXX_DiscardUnknown() {
	xxx_messageInfo_CreditTokenStateDB.DiscardUnknown(m)
}

var xxx_messageInfo_CreditTokenStateDB proto.InternalMessageInfo

func (m *CreditTokenStateDB) GetCreditAddr() string {
	if m != nil {
		return m.CreditAddr
	}
	return ""
}

func (m *CreditTokenStateDB) GetGranteeAddr() string {
	if m != nil {
		return m.GranteeAddr
	}
	return ""
}

func (m *CreditTokenStateDB) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *CreditTokenStateDB) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *CreditTokenStateDB) GetRate() int64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *CreditTokenStateDB) GetAddTime() int64 {
	if m != nil {
		return m.AddTime
	}
	return 0
}

func (m *CreditTokenStateDB) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *CreditTokenStateDB) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

//添加授信Token涉及到的日志结构Log，授信资产转账记录
type ReceiptLogAddCreditToken struct {
	Expire               int64              `protobuf:"varint,1,opt,name=expire,proto3" json:"expire,omitempty"`
	TransfItems          *AssetTransferTags `protobuf:"bytes,2,opt,name=transfItems,proto3" json:"transfItems,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ReceiptLogAddCreditToken) Reset()         { *m = ReceiptLogAddCreditToken{} }
func (m *ReceiptLogAddCreditToken) String() string { return proto.CompactTextString(m) }
func (*ReceiptLogAddCreditToken) ProtoMessage()    {}
func (*ReceiptLogAddCreditToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{3}
}

func (m *ReceiptLogAddCreditToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptLogAddCreditToken.Unmarshal(m, b)
}
func (m *ReceiptLogAddCreditToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptLogAddCreditToken.Marshal(b, m, deterministic)
}
func (m *ReceiptLogAddCreditToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptLogAddCreditToken.Merge(m, src)
}
func (m *ReceiptLogAddCreditToken) XXX_Size() int {
	return xxx_messageInfo_ReceiptLogAddCreditToken.Size(m)
}
func (m *ReceiptLogAddCreditToken) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptLogAddCreditToken.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptLogAddCreditToken proto.InternalMessageInfo

func (m *ReceiptLogAddCreditToken) GetExpire() int64 {
	if m != nil {
		return m.Expire
	}
	return 0
}

func (m *ReceiptLogAddCreditToken) GetTransfItems() *AssetTransferTags {
	if m != nil {
		return m.TransfItems
	}
	return nil
}

//资产转账记录:每个Action的Log都会用到
type AssetTransferTags struct {
	Items                []*AssetTransferTag `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AssetTransferTags) Reset()         { *m = AssetTransferTags{} }
func (m *AssetTransferTags) String() string { return proto.CompactTextString(m) }
func (*AssetTransferTags) ProtoMessage()    {}
func (*AssetTransferTags) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{4}
}

func (m *AssetTransferTags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssetTransferTags.Unmarshal(m, b)
}
func (m *AssetTransferTags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssetTransferTags.Marshal(b, m, deterministic)
}
func (m *AssetTransferTags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetTransferTags.Merge(m, src)
}
func (m *AssetTransferTags) XXX_Size() int {
	return xxx_messageInfo_AssetTransferTags.Size(m)
}
func (m *AssetTransferTags) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetTransferTags.DiscardUnknown(m)
}

var xxx_messageInfo_AssetTransferTags proto.InternalMessageInfo

func (m *AssetTransferTags) GetItems() []*AssetTransferTag {
	if m != nil {
		return m.Items
	}
	return nil
}

type AssetTransferTag struct {
	FromAddr             string   `protobuf:"bytes,1,opt,name=fromAddr,proto3" json:"fromAddr,omitempty"`
	ToAddr               string   `protobuf:"bytes,2,opt,name=toAddr,proto3" json:"toAddr,omitempty"`
	Symbol               string   `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Amount               int64    `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Remark               string   `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssetTransferTag) Reset()         { *m = AssetTransferTag{} }
func (m *AssetTransferTag) String() string { return proto.CompactTextString(m) }
func (*AssetTransferTag) ProtoMessage()    {}
func (*AssetTransferTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{5}
}

func (m *AssetTransferTag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssetTransferTag.Unmarshal(m, b)
}
func (m *AssetTransferTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssetTransferTag.Marshal(b, m, deterministic)
}
func (m *AssetTransferTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetTransferTag.Merge(m, src)
}
func (m *AssetTransferTag) XXX_Size() int {
	return xxx_messageInfo_AssetTransferTag.Size(m)
}
func (m *AssetTransferTag) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetTransferTag.DiscardUnknown(m)
}

var xxx_messageInfo_AssetTransferTag proto.InternalMessageInfo

func (m *AssetTransferTag) GetFromAddr() string {
	if m != nil {
		return m.FromAddr
	}
	return ""
}

func (m *AssetTransferTag) GetToAddr() string {
	if m != nil {
		return m.ToAddr
	}
	return ""
}

func (m *AssetTransferTag) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *AssetTransferTag) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *AssetTransferTag) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

//local-DB 存储区块上的信息or state-DB存储交易的信息
//授信记录--table: Local DB
type CreditRecordLocalDB struct {
	CreditAddr           string   `protobuf:"bytes,1,opt,name=creditAddr,proto3" json:"creditAddr,omitempty"`
	GranteeAddr          string   `protobuf:"bytes,2,opt,name=granteeAddr,proto3" json:"granteeAddr,omitempty"`
	Symbol               string   `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Amount               int64    `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Rate                 int64    `protobuf:"varint,5,opt,name=rate,proto3" json:"rate,omitempty"`
	Expire               int64    `protobuf:"varint,6,opt,name=expire,proto3" json:"expire,omitempty"`
	Duration             int64    `protobuf:"varint,7,opt,name=duration,proto3" json:"duration,omitempty"`
	Remark               string   `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`
	BlockTime            int64    `protobuf:"varint,9,opt,name=blockTime,proto3" json:"blockTime,omitempty"`
	TxHash               string   `protobuf:"bytes,10,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Height               int64    `protobuf:"varint,11,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreditRecordLocalDB) Reset()         { *m = CreditRecordLocalDB{} }
func (m *CreditRecordLocalDB) String() string { return proto.CompactTextString(m) }
func (*CreditRecordLocalDB) ProtoMessage()    {}
func (*CreditRecordLocalDB) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{6}
}

func (m *CreditRecordLocalDB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreditRecordLocalDB.Unmarshal(m, b)
}
func (m *CreditRecordLocalDB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreditRecordLocalDB.Marshal(b, m, deterministic)
}
func (m *CreditRecordLocalDB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreditRecordLocalDB.Merge(m, src)
}
func (m *CreditRecordLocalDB) XXX_Size() int {
	return xxx_messageInfo_CreditRecordLocalDB.Size(m)
}
func (m *CreditRecordLocalDB) XXX_DiscardUnknown() {
	xxx_messageInfo_CreditRecordLocalDB.DiscardUnknown(m)
}

var xxx_messageInfo_CreditRecordLocalDB proto.InternalMessageInfo

func (m *CreditRecordLocalDB) GetCreditAddr() string {
	if m != nil {
		return m.CreditAddr
	}
	return ""
}

func (m *CreditRecordLocalDB) GetGranteeAddr() string {
	if m != nil {
		return m.GranteeAddr
	}
	return ""
}

func (m *CreditRecordLocalDB) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *CreditRecordLocalDB) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *CreditRecordLocalDB) GetRate() int64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *CreditRecordLocalDB) GetExpire() int64 {
	if m != nil {
		return m.Expire
	}
	return 0
}

func (m *CreditRecordLocalDB) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *CreditRecordLocalDB) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *CreditRecordLocalDB) GetBlockTime() int64 {
	if m != nil {
		return m.BlockTime
	}
	return 0
}

func (m *CreditRecordLocalDB) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *CreditRecordLocalDB) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

//执行完添加授信Token之后，就可以查询到相应的信息
//授信Token查询
type ReqCreditDetail struct {
	CreditSymbol         string   `protobuf:"bytes,1,opt,name=creditSymbol,proto3" json:"creditSymbol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqCreditDetail) Reset()         { *m = ReqCreditDetail{} }
func (m *ReqCreditDetail) String() string { return proto.CompactTextString(m) }
func (*ReqCreditDetail) ProtoMessage()    {}
func (*ReqCreditDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{7}
}

func (m *ReqCreditDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqCreditDetail.Unmarshal(m, b)
}
func (m *ReqCreditDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqCreditDetail.Marshal(b, m, deterministic)
}
func (m *ReqCreditDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqCreditDetail.Merge(m, src)
}
func (m *ReqCreditDetail) XXX_Size() int {
	return xxx_messageInfo_ReqCreditDetail.Size(m)
}
func (m *ReqCreditDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqCreditDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ReqCreditDetail proto.InternalMessageInfo

func (m *ReqCreditDetail) GetCreditSymbol() string {
	if m != nil {
		return m.CreditSymbol
	}
	return ""
}

type ReplyCreditDetail struct {
	Credit               *CreditTokenStateDB `protobuf:"bytes,1,opt,name=credit,proto3" json:"credit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ReplyCreditDetail) Reset()         { *m = ReplyCreditDetail{} }
func (m *ReplyCreditDetail) String() string { return proto.CompactTextString(m) }
func (*ReplyCreditDetail) ProtoMessage()    {}
func (*ReplyCreditDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{8}
}

func (m *ReplyCreditDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyCreditDetail.Unmarshal(m, b)
}
func (m *ReplyCreditDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyCreditDetail.Marshal(b, m, deterministic)
}
func (m *ReplyCreditDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyCreditDetail.Merge(m, src)
}
func (m *ReplyCreditDetail) XXX_Size() int {
	return xxx_messageInfo_ReplyCreditDetail.Size(m)
}
func (m *ReplyCreditDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyCreditDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyCreditDetail proto.InternalMessageInfo

func (m *ReplyCreditDetail) GetCredit() *CreditTokenStateDB {
	if m != nil {
		return m.Credit
	}
	return nil
}

//根据资金方查询授信
type ReqCreditFunder struct {
	FunderAddr           string   `protobuf:"bytes,1,opt,name=funderAddr,proto3" json:"funderAddr,omitempty"`
	PrimaryKey           string   `protobuf:"bytes,2,opt,name=primaryKey,proto3" json:"primaryKey,omitempty"`
	EntrieCount          int32    `protobuf:"varint,3,opt,name=entrieCount,proto3" json:"entrieCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqCreditFunder) Reset()         { *m = ReqCreditFunder{} }
func (m *ReqCreditFunder) String() string { return proto.CompactTextString(m) }
func (*ReqCreditFunder) ProtoMessage()    {}
func (*ReqCreditFunder) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{9}
}

func (m *ReqCreditFunder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqCreditFunder.Unmarshal(m, b)
}
func (m *ReqCreditFunder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqCreditFunder.Marshal(b, m, deterministic)
}
func (m *ReqCreditFunder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqCreditFunder.Merge(m, src)
}
func (m *ReqCreditFunder) XXX_Size() int {
	return xxx_messageInfo_ReqCreditFunder.Size(m)
}
func (m *ReqCreditFunder) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqCreditFunder.DiscardUnknown(m)
}

var xxx_messageInfo_ReqCreditFunder proto.InternalMessageInfo

func (m *ReqCreditFunder) GetFunderAddr() string {
	if m != nil {
		return m.FunderAddr
	}
	return ""
}

func (m *ReqCreditFunder) GetPrimaryKey() string {
	if m != nil {
		return m.PrimaryKey
	}
	return ""
}

func (m *ReqCreditFunder) GetEntrieCount() int32 {
	if m != nil {
		return m.EntrieCount
	}
	return 0
}

type ReplyCreditFunder struct {
	BlockTime            int64                  `protobuf:"varint,1,opt,name=blockTime,proto3" json:"blockTime,omitempty"`
	Items                []*CreditRecordLocalDB `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	PrimaryKey           string                 `protobuf:"bytes,3,opt,name=primaryKey,proto3" json:"primaryKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ReplyCreditFunder) Reset()         { *m = ReplyCreditFunder{} }
func (m *ReplyCreditFunder) String() string { return proto.CompactTextString(m) }
func (*ReplyCreditFunder) ProtoMessage()    {}
func (*ReplyCreditFunder) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{10}
}

func (m *ReplyCreditFunder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyCreditFunder.Unmarshal(m, b)
}
func (m *ReplyCreditFunder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyCreditFunder.Marshal(b, m, deterministic)
}
func (m *ReplyCreditFunder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyCreditFunder.Merge(m, src)
}
func (m *ReplyCreditFunder) XXX_Size() int {
	return xxx_messageInfo_ReplyCreditFunder.Size(m)
}
func (m *ReplyCreditFunder) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyCreditFunder.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyCreditFunder proto.InternalMessageInfo

func (m *ReplyCreditFunder) GetBlockTime() int64 {
	if m != nil {
		return m.BlockTime
	}
	return 0
}

func (m *ReplyCreditFunder) GetItems() []*CreditRecordLocalDB {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ReplyCreditFunder) GetPrimaryKey() string {
	if m != nil {
		return m.PrimaryKey
	}
	return ""
}

//根据核心企业查询授信
type ReqCreditCoreFirm struct {
	CoreAddr             string   `protobuf:"bytes,1,opt,name=coreAddr,proto3" json:"coreAddr,omitempty"`
	PrimaryKey           string   `protobuf:"bytes,2,opt,name=primaryKey,proto3" json:"primaryKey,omitempty"`
	EntrieCount          int32    `protobuf:"varint,3,opt,name=entrieCount,proto3" json:"entrieCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqCreditCoreFirm) Reset()         { *m = ReqCreditCoreFirm{} }
func (m *ReqCreditCoreFirm) String() string { return proto.CompactTextString(m) }
func (*ReqCreditCoreFirm) ProtoMessage()    {}
func (*ReqCreditCoreFirm) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{11}
}

func (m *ReqCreditCoreFirm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqCreditCoreFirm.Unmarshal(m, b)
}
func (m *ReqCreditCoreFirm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqCreditCoreFirm.Marshal(b, m, deterministic)
}
func (m *ReqCreditCoreFirm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqCreditCoreFirm.Merge(m, src)
}
func (m *ReqCreditCoreFirm) XXX_Size() int {
	return xxx_messageInfo_ReqCreditCoreFirm.Size(m)
}
func (m *ReqCreditCoreFirm) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqCreditCoreFirm.DiscardUnknown(m)
}

var xxx_messageInfo_ReqCreditCoreFirm proto.InternalMessageInfo

func (m *ReqCreditCoreFirm) GetCoreAddr() string {
	if m != nil {
		return m.CoreAddr
	}
	return ""
}

func (m *ReqCreditCoreFirm) GetPrimaryKey() string {
	if m != nil {
		return m.PrimaryKey
	}
	return ""
}

func (m *ReqCreditCoreFirm) GetEntrieCount() int32 {
	if m != nil {
		return m.EntrieCount
	}
	return 0
}

type ReplyCreditCoreFirm struct {
	BlockTime            int64          `protobuf:"varint,1,opt,name=blockTime,proto3" json:"blockTime,omitempty"`
	Items                []*CreditAsset `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	PrimaryKey           string         `protobuf:"bytes,3,opt,name=primaryKey,proto3" json:"primaryKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ReplyCreditCoreFirm) Reset()         { *m = ReplyCreditCoreFirm{} }
func (m *ReplyCreditCoreFirm) String() string { return proto.CompactTextString(m) }
func (*ReplyCreditCoreFirm) ProtoMessage()    {}
func (*ReplyCreditCoreFirm) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{12}
}

func (m *ReplyCreditCoreFirm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyCreditCoreFirm.Unmarshal(m, b)
}
func (m *ReplyCreditCoreFirm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyCreditCoreFirm.Marshal(b, m, deterministic)
}
func (m *ReplyCreditCoreFirm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyCreditCoreFirm.Merge(m, src)
}
func (m *ReplyCreditCoreFirm) XXX_Size() int {
	return xxx_messageInfo_ReplyCreditCoreFirm.Size(m)
}
func (m *ReplyCreditCoreFirm) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyCreditCoreFirm.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyCreditCoreFirm proto.InternalMessageInfo

func (m *ReplyCreditCoreFirm) GetBlockTime() int64 {
	if m != nil {
		return m.BlockTime
	}
	return 0
}

func (m *ReplyCreditCoreFirm) GetItems() []*CreditAsset {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ReplyCreditCoreFirm) GetPrimaryKey() string {
	if m != nil {
		return m.PrimaryKey
	}
	return ""
}

type CreditAsset struct {
	AssetItem            *AssetItem           `protobuf:"bytes,1,opt,name=assetItem,proto3" json:"assetItem,omitempty"`
	CreditItem           *CreditRecordLocalDB `protobuf:"bytes,2,opt,name=CreditItem,proto3" json:"CreditItem,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CreditAsset) Reset()         { *m = CreditAsset{} }
func (m *CreditAsset) String() string { return proto.CompactTextString(m) }
func (*CreditAsset) ProtoMessage()    {}
func (*CreditAsset) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{13}
}

func (m *CreditAsset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreditAsset.Unmarshal(m, b)
}
func (m *CreditAsset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreditAsset.Marshal(b, m, deterministic)
}
func (m *CreditAsset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreditAsset.Merge(m, src)
}
func (m *CreditAsset) XXX_Size() int {
	return xxx_messageInfo_CreditAsset.Size(m)
}
func (m *CreditAsset) XXX_DiscardUnknown() {
	xxx_messageInfo_CreditAsset.DiscardUnknown(m)
}

var xxx_messageInfo_CreditAsset proto.InternalMessageInfo

func (m *CreditAsset) GetAssetItem() *AssetItem {
	if m != nil {
		return m.AssetItem
	}
	return nil
}

func (m *CreditAsset) GetCreditItem() *CreditRecordLocalDB {
	if m != nil {
		return m.CreditItem
	}
	return nil
}

type AssetItem struct {
	Balance              int64    `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
	Frozen               int64    `protobuf:"varint,2,opt,name=frozen,proto3" json:"frozen,omitempty"`
	Symbol               string   `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssetItem) Reset()         { *m = AssetItem{} }
func (m *AssetItem) String() string { return proto.CompactTextString(m) }
func (*AssetItem) ProtoMessage()    {}
func (*AssetItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{14}
}

func (m *AssetItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssetItem.Unmarshal(m, b)
}
func (m *AssetItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssetItem.Marshal(b, m, deterministic)
}
func (m *AssetItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetItem.Merge(m, src)
}
func (m *AssetItem) XXX_Size() int {
	return xxx_messageInfo_AssetItem.Size(m)
}
func (m *AssetItem) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetItem.DiscardUnknown(m)
}

var xxx_messageInfo_AssetItem proto.InternalMessageInfo

func (m *AssetItem) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *AssetItem) GetFrozen() int64 {
	if m != nil {
		return m.Frozen
	}
	return 0
}

func (m *AssetItem) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

//用户向合约存款
type DepositAsset struct {
	DepositAddr          string   `protobuf:"bytes,1,opt,name=depositAddr,proto3" json:"depositAddr,omitempty"`
	Amount               int64    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Symbol               string   `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Remark               string   `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DepositAsset) Reset()         { *m = DepositAsset{} }
func (m *DepositAsset) String() string { return proto.CompactTextString(m) }
func (*DepositAsset) ProtoMessage()    {}
func (*DepositAsset) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{15}
}

func (m *DepositAsset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DepositAsset.Unmarshal(m, b)
}
func (m *DepositAsset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DepositAsset.Marshal(b, m, deterministic)
}
func (m *DepositAsset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepositAsset.Merge(m, src)
}
func (m *DepositAsset) XXX_Size() int {
	return xxx_messageInfo_DepositAsset.Size(m)
}
func (m *DepositAsset) XXX_DiscardUnknown() {
	xxx_messageInfo_DepositAsset.DiscardUnknown(m)
}

var xxx_messageInfo_DepositAsset proto.InternalMessageInfo

func (m *DepositAsset) GetDepositAddr() string {
	if m != nil {
		return m.DepositAddr
	}
	return ""
}

func (m *DepositAsset) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *DepositAsset) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *DepositAsset) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

//Log记录到stateDB中
type ReceiptLogDepositAsset struct {
	TransfItems          *AssetTransferTags `protobuf:"bytes,1,opt,name=transfItems,proto3" json:"transfItems,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ReceiptLogDepositAsset) Reset()         { *m = ReceiptLogDepositAsset{} }
func (m *ReceiptLogDepositAsset) String() string { return proto.CompactTextString(m) }
func (*ReceiptLogDepositAsset) ProtoMessage()    {}
func (*ReceiptLogDepositAsset) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{16}
}

func (m *ReceiptLogDepositAsset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptLogDepositAsset.Unmarshal(m, b)
}
func (m *ReceiptLogDepositAsset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptLogDepositAsset.Marshal(b, m, deterministic)
}
func (m *ReceiptLogDepositAsset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptLogDepositAsset.Merge(m, src)
}
func (m *ReceiptLogDepositAsset) XXX_Size() int {
	return xxx_messageInfo_ReceiptLogDepositAsset.Size(m)
}
func (m *ReceiptLogDepositAsset) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptLogDepositAsset.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptLogDepositAsset proto.InternalMessageInfo

func (m *ReceiptLogDepositAsset) GetTransfItems() *AssetTransferTags {
	if m != nil {
		return m.TransfItems
	}
	return nil
}

//出入金记录(Deposits and withdrawals record) --table: Local DB
type DWRecordLocalDB struct {
	Action               int32    `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"`
	Amount               int64    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Symbol               string   `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	TxHash               string   `protobuf:"bytes,4,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Timestamp            int64    `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Addr                 string   `protobuf:"bytes,6,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DWRecordLocalDB) Reset()         { *m = DWRecordLocalDB{} }
func (m *DWRecordLocalDB) String() string { return proto.CompactTextString(m) }
func (*DWRecordLocalDB) ProtoMessage()    {}
func (*DWRecordLocalDB) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{17}
}

func (m *DWRecordLocalDB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DWRecordLocalDB.Unmarshal(m, b)
}
func (m *DWRecordLocalDB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DWRecordLocalDB.Marshal(b, m, deterministic)
}
func (m *DWRecordLocalDB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DWRecordLocalDB.Merge(m, src)
}
func (m *DWRecordLocalDB) XXX_Size() int {
	return xxx_messageInfo_DWRecordLocalDB.Size(m)
}
func (m *DWRecordLocalDB) XXX_DiscardUnknown() {
	xxx_messageInfo_DWRecordLocalDB.DiscardUnknown(m)
}

var xxx_messageInfo_DWRecordLocalDB proto.InternalMessageInfo

func (m *DWRecordLocalDB) GetAction() int32 {
	if m != nil {
		return m.Action
	}
	return 0
}

func (m *DWRecordLocalDB) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *DWRecordLocalDB) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *DWRecordLocalDB) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *DWRecordLocalDB) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *DWRecordLocalDB) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

//用户向合约取款
type WithdrawlAsset struct {
	WithdrawAddr         string   `protobuf:"bytes,1,opt,name=withdrawAddr,proto3" json:"withdrawAddr,omitempty"`
	Amount               int64    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Symbol               string   `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Remark               string   `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WithdrawlAsset) Reset()         { *m = WithdrawlAsset{} }
func (m *WithdrawlAsset) String() string { return proto.CompactTextString(m) }
func (*WithdrawlAsset) ProtoMessage()    {}
func (*WithdrawlAsset) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{18}
}

func (m *WithdrawlAsset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithdrawlAsset.Unmarshal(m, b)
}
func (m *WithdrawlAsset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithdrawlAsset.Marshal(b, m, deterministic)
}
func (m *WithdrawlAsset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawlAsset.Merge(m, src)
}
func (m *WithdrawlAsset) XXX_Size() int {
	return xxx_messageInfo_WithdrawlAsset.Size(m)
}
func (m *WithdrawlAsset) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawlAsset.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawlAsset proto.InternalMessageInfo

func (m *WithdrawlAsset) GetWithdrawAddr() string {
	if m != nil {
		return m.WithdrawAddr
	}
	return ""
}

func (m *WithdrawlAsset) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *WithdrawlAsset) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *WithdrawlAsset) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

//Log记录到stateDB中
type ReceiptLogWithdrawlAsset struct {
	TransfItems          *AssetTransferTags `protobuf:"bytes,1,opt,name=transfItems,proto3" json:"transfItems,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ReceiptLogWithdrawlAsset) Reset()         { *m = ReceiptLogWithdrawlAsset{} }
func (m *ReceiptLogWithdrawlAsset) String() string { return proto.CompactTextString(m) }
func (*ReceiptLogWithdrawlAsset) ProtoMessage()    {}
func (*ReceiptLogWithdrawlAsset) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{19}
}

func (m *ReceiptLogWithdrawlAsset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptLogWithdrawlAsset.Unmarshal(m, b)
}
func (m *ReceiptLogWithdrawlAsset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptLogWithdrawlAsset.Marshal(b, m, deterministic)
}
func (m *ReceiptLogWithdrawlAsset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptLogWithdrawlAsset.Merge(m, src)
}
func (m *ReceiptLogWithdrawlAsset) XXX_Size() int {
	return xxx_messageInfo_ReceiptLogWithdrawlAsset.Size(m)
}
func (m *ReceiptLogWithdrawlAsset) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptLogWithdrawlAsset.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptLogWithdrawlAsset proto.InternalMessageInfo

func (m *ReceiptLogWithdrawlAsset) GetTransfItems() *AssetTransferTags {
	if m != nil {
		return m.TransfItems
	}
	return nil
}

//合约内转帐
type TransferCoins struct {
	FromAddr             string   `protobuf:"bytes,1,opt,name=fromAddr,proto3" json:"fromAddr,omitempty"`
	Exec                 string   `protobuf:"bytes,2,opt,name=exec,proto3" json:"exec,omitempty"`
	Symbol               string   `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Amount               int64    `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	ToAddr               string   `protobuf:"bytes,5,opt,name=toAddr,proto3" json:"toAddr,omitempty"`
	Remark               string   `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferCoins) Reset()         { *m = TransferCoins{} }
func (m *TransferCoins) String() string { return proto.CompactTextString(m) }
func (*TransferCoins) ProtoMessage()    {}
func (*TransferCoins) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{20}
}

func (m *TransferCoins) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferCoins.Unmarshal(m, b)
}
func (m *TransferCoins) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferCoins.Marshal(b, m, deterministic)
}
func (m *TransferCoins) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferCoins.Merge(m, src)
}
func (m *TransferCoins) XXX_Size() int {
	return xxx_messageInfo_TransferCoins.Size(m)
}
func (m *TransferCoins) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferCoins.DiscardUnknown(m)
}

var xxx_messageInfo_TransferCoins proto.InternalMessageInfo

func (m *TransferCoins) GetFromAddr() string {
	if m != nil {
		return m.FromAddr
	}
	return ""
}

func (m *TransferCoins) GetExec() string {
	if m != nil {
		return m.Exec
	}
	return ""
}

func (m *TransferCoins) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *TransferCoins) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *TransferCoins) GetToAddr() string {
	if m != nil {
		return m.ToAddr
	}
	return ""
}

func (m *TransferCoins) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

//合约内转账记录Log-stateDB
type ReceiptLogTransferCoins struct {
	TransfItems          *AssetTransferTags `protobuf:"bytes,1,opt,name=transfItems,proto3" json:"transfItems,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ReceiptLogTransferCoins) Reset()         { *m = ReceiptLogTransferCoins{} }
func (m *ReceiptLogTransferCoins) String() string { return proto.CompactTextString(m) }
func (*ReceiptLogTransferCoins) ProtoMessage()    {}
func (*ReceiptLogTransferCoins) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{21}
}

func (m *ReceiptLogTransferCoins) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptLogTransferCoins.Unmarshal(m, b)
}
func (m *ReceiptLogTransferCoins) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptLogTransferCoins.Marshal(b, m, deterministic)
}
func (m *ReceiptLogTransferCoins) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptLogTransferCoins.Merge(m, src)
}
func (m *ReceiptLogTransferCoins) XXX_Size() int {
	return xxx_messageInfo_ReceiptLogTransferCoins.Size(m)
}
func (m *ReceiptLogTransferCoins) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptLogTransferCoins.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptLogTransferCoins proto.InternalMessageInfo

func (m *ReceiptLogTransferCoins) GetTransfItems() *AssetTransferTags {
	if m != nil {
		return m.TransfItems
	}
	return nil
}

type TransferCoinsRecordLocalDB struct {
	FromAddr             string   `protobuf:"bytes,1,opt,name=fromAddr,proto3" json:"fromAddr,omitempty"`
	Exec                 string   `protobuf:"bytes,2,opt,name=exec,proto3" json:"exec,omitempty"`
	Symbol               string   `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Amount               int64    `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	ToAddr               string   `protobuf:"bytes,5,opt,name=toAddr,proto3" json:"toAddr,omitempty"`
	TxHash               string   `protobuf:"bytes,6,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Timestamp            int64    `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Remark               string   `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferCoinsRecordLocalDB) Reset()         { *m = TransferCoinsRecordLocalDB{} }
func (m *TransferCoinsRecordLocalDB) String() string { return proto.CompactTextString(m) }
func (*TransferCoinsRecordLocalDB) ProtoMessage()    {}
func (*TransferCoinsRecordLocalDB) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{22}
}

func (m *TransferCoinsRecordLocalDB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferCoinsRecordLocalDB.Unmarshal(m, b)
}
func (m *TransferCoinsRecordLocalDB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferCoinsRecordLocalDB.Marshal(b, m, deterministic)
}
func (m *TransferCoinsRecordLocalDB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferCoinsRecordLocalDB.Merge(m, src)
}
func (m *TransferCoinsRecordLocalDB) XXX_Size() int {
	return xxx_messageInfo_TransferCoinsRecordLocalDB.Size(m)
}
func (m *TransferCoinsRecordLocalDB) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferCoinsRecordLocalDB.DiscardUnknown(m)
}

var xxx_messageInfo_TransferCoinsRecordLocalDB proto.InternalMessageInfo

func (m *TransferCoinsRecordLocalDB) GetFromAddr() string {
	if m != nil {
		return m.FromAddr
	}
	return ""
}

func (m *TransferCoinsRecordLocalDB) GetExec() string {
	if m != nil {
		return m.Exec
	}
	return ""
}

func (m *TransferCoinsRecordLocalDB) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *TransferCoinsRecordLocalDB) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *TransferCoinsRecordLocalDB) GetToAddr() string {
	if m != nil {
		return m.ToAddr
	}
	return ""
}

func (m *TransferCoinsRecordLocalDB) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *TransferCoinsRecordLocalDB) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *TransferCoinsRecordLocalDB) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

//查询合约内转账记录
type ReqTransferCoinsRecord struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	PrimaryKey           string   `protobuf:"bytes,2,opt,name=primaryKey,proto3" json:"primaryKey,omitempty"`
	EntrieCount          int32    `protobuf:"varint,3,opt,name=entrieCount,proto3" json:"entrieCount,omitempty"`
	AssetSymbol          string   `protobuf:"bytes,4,opt,name=assetSymbol,proto3" json:"assetSymbol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqTransferCoinsRecord) Reset()         { *m = ReqTransferCoinsRecord{} }
func (m *ReqTransferCoinsRecord) String() string { return proto.CompactTextString(m) }
func (*ReqTransferCoinsRecord) ProtoMessage()    {}
func (*ReqTransferCoinsRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{23}
}

func (m *ReqTransferCoinsRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqTransferCoinsRecord.Unmarshal(m, b)
}
func (m *ReqTransferCoinsRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqTransferCoinsRecord.Marshal(b, m, deterministic)
}
func (m *ReqTransferCoinsRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqTransferCoinsRecord.Merge(m, src)
}
func (m *ReqTransferCoinsRecord) XXX_Size() int {
	return xxx_messageInfo_ReqTransferCoinsRecord.Size(m)
}
func (m *ReqTransferCoinsRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqTransferCoinsRecord.DiscardUnknown(m)
}

var xxx_messageInfo_ReqTransferCoinsRecord proto.InternalMessageInfo

func (m *ReqTransferCoinsRecord) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReqTransferCoinsRecord) GetPrimaryKey() string {
	if m != nil {
		return m.PrimaryKey
	}
	return ""
}

func (m *ReqTransferCoinsRecord) GetEntrieCount() int32 {
	if m != nil {
		return m.EntrieCount
	}
	return 0
}

func (m *ReqTransferCoinsRecord) GetAssetSymbol() string {
	if m != nil {
		return m.AssetSymbol
	}
	return ""
}

type ReplyTransferCoinsRecord struct {
	Items                []*TransferCoinsRecordLocalDB `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ReplyTransferCoinsRecord) Reset()         { *m = ReplyTransferCoinsRecord{} }
func (m *ReplyTransferCoinsRecord) String() string { return proto.CompactTextString(m) }
func (*ReplyTransferCoinsRecord) ProtoMessage()    {}
func (*ReplyTransferCoinsRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{24}
}

func (m *ReplyTransferCoinsRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyTransferCoinsRecord.Unmarshal(m, b)
}
func (m *ReplyTransferCoinsRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyTransferCoinsRecord.Marshal(b, m, deterministic)
}
func (m *ReplyTransferCoinsRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyTransferCoinsRecord.Merge(m, src)
}
func (m *ReplyTransferCoinsRecord) XXX_Size() int {
	return xxx_messageInfo_ReplyTransferCoinsRecord.Size(m)
}
func (m *ReplyTransferCoinsRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyTransferCoinsRecord.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyTransferCoinsRecord proto.InternalMessageInfo

func (m *ReplyTransferCoinsRecord) GetItems() []*TransferCoinsRecordLocalDB {
	if m != nil {
		return m.Items
	}
	return nil
}

//***********************查询账户资产信息********************************
type ReqAccountAsset struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Symbol               string   `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Execer               string   `protobuf:"bytes,3,opt,name=execer,proto3" json:"execer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqAccountAsset) Reset()         { *m = ReqAccountAsset{} }
func (m *ReqAccountAsset) String() string { return proto.CompactTextString(m) }
func (*ReqAccountAsset) ProtoMessage()    {}
func (*ReqAccountAsset) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{25}
}

func (m *ReqAccountAsset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqAccountAsset.Unmarshal(m, b)
}
func (m *ReqAccountAsset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqAccountAsset.Marshal(b, m, deterministic)
}
func (m *ReqAccountAsset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqAccountAsset.Merge(m, src)
}
func (m *ReqAccountAsset) XXX_Size() int {
	return xxx_messageInfo_ReqAccountAsset.Size(m)
}
func (m *ReqAccountAsset) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqAccountAsset.DiscardUnknown(m)
}

var xxx_messageInfo_ReqAccountAsset proto.InternalMessageInfo

func (m *ReqAccountAsset) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReqAccountAsset) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *ReqAccountAsset) GetExecer() string {
	if m != nil {
		return m.Execer
	}
	return ""
}

type ReplyAccountAsset struct {
	Balance              int64    `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
	Frozen               int64    `protobuf:"varint,2,opt,name=frozen,proto3" json:"frozen,omitempty"`
	Addr                 string   `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplyAccountAsset) Reset()         { *m = ReplyAccountAsset{} }
func (m *ReplyAccountAsset) String() string { return proto.CompactTextString(m) }
func (*ReplyAccountAsset) ProtoMessage()    {}
func (*ReplyAccountAsset) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{26}
}

func (m *ReplyAccountAsset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyAccountAsset.Unmarshal(m, b)
}
func (m *ReplyAccountAsset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyAccountAsset.Marshal(b, m, deterministic)
}
func (m *ReplyAccountAsset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyAccountAsset.Merge(m, src)
}
func (m *ReplyAccountAsset) XXX_Size() int {
	return xxx_messageInfo_ReplyAccountAsset.Size(m)
}
func (m *ReplyAccountAsset) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyAccountAsset.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyAccountAsset proto.InternalMessageInfo

func (m *ReplyAccountAsset) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *ReplyAccountAsset) GetFrozen() int64 {
	if m != nil {
		return m.Frozen
	}
	return 0
}

func (m *ReplyAccountAsset) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type ReqFinanceUserAssets struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqFinanceUserAssets) Reset()         { *m = ReqFinanceUserAssets{} }
func (m *ReqFinanceUserAssets) String() string { return proto.CompactTextString(m) }
func (*ReqFinanceUserAssets) ProtoMessage()    {}
func (*ReqFinanceUserAssets) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{27}
}

func (m *ReqFinanceUserAssets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqFinanceUserAssets.Unmarshal(m, b)
}
func (m *ReqFinanceUserAssets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqFinanceUserAssets.Marshal(b, m, deterministic)
}
func (m *ReqFinanceUserAssets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqFinanceUserAssets.Merge(m, src)
}
func (m *ReqFinanceUserAssets) XXX_Size() int {
	return xxx_messageInfo_ReqFinanceUserAssets.Size(m)
}
func (m *ReqFinanceUserAssets) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqFinanceUserAssets.DiscardUnknown(m)
}

var xxx_messageInfo_ReqFinanceUserAssets proto.InternalMessageInfo

func (m *ReqFinanceUserAssets) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type ReplyFinanceUserAssets struct {
	Addr                 string       `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	AssetItems           []*AssetItem `protobuf:"bytes,2,rep,name=assetItems,proto3" json:"assetItems,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReplyFinanceUserAssets) Reset()         { *m = ReplyFinanceUserAssets{} }
func (m *ReplyFinanceUserAssets) String() string { return proto.CompactTextString(m) }
func (*ReplyFinanceUserAssets) ProtoMessage()    {}
func (*ReplyFinanceUserAssets) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{28}
}

func (m *ReplyFinanceUserAssets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyFinanceUserAssets.Unmarshal(m, b)
}
func (m *ReplyFinanceUserAssets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyFinanceUserAssets.Marshal(b, m, deterministic)
}
func (m *ReplyFinanceUserAssets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyFinanceUserAssets.Merge(m, src)
}
func (m *ReplyFinanceUserAssets) XXX_Size() int {
	return xxx_messageInfo_ReplyFinanceUserAssets.Size(m)
}
func (m *ReplyFinanceUserAssets) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyFinanceUserAssets.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyFinanceUserAssets proto.InternalMessageInfo

func (m *ReplyFinanceUserAssets) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReplyFinanceUserAssets) GetAssetItems() []*AssetItem {
	if m != nil {
		return m.AssetItems
	}
	return nil
}

//查询出入金数量
type ReqDWRecord struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	PrimaryKey           string   `protobuf:"bytes,2,opt,name=primaryKey,proto3" json:"primaryKey,omitempty"`
	EntrieCount          int32    `protobuf:"varint,3,opt,name=entrieCount,proto3" json:"entrieCount,omitempty"`
	AssetSymbol          string   `protobuf:"bytes,4,opt,name=assetSymbol,proto3" json:"assetSymbol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqDWRecord) Reset()         { *m = ReqDWRecord{} }
func (m *ReqDWRecord) String() string { return proto.CompactTextString(m) }
func (*ReqDWRecord) ProtoMessage()    {}
func (*ReqDWRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{29}
}

func (m *ReqDWRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqDWRecord.Unmarshal(m, b)
}
func (m *ReqDWRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqDWRecord.Marshal(b, m, deterministic)
}
func (m *ReqDWRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqDWRecord.Merge(m, src)
}
func (m *ReqDWRecord) XXX_Size() int {
	return xxx_messageInfo_ReqDWRecord.Size(m)
}
func (m *ReqDWRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqDWRecord.DiscardUnknown(m)
}

var xxx_messageInfo_ReqDWRecord proto.InternalMessageInfo

func (m *ReqDWRecord) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReqDWRecord) GetPrimaryKey() string {
	if m != nil {
		return m.PrimaryKey
	}
	return ""
}

func (m *ReqDWRecord) GetEntrieCount() int32 {
	if m != nil {
		return m.EntrieCount
	}
	return 0
}

func (m *ReqDWRecord) GetAssetSymbol() string {
	if m != nil {
		return m.AssetSymbol
	}
	return ""
}

type ReplyDWRecord struct {
	Items                []*DWRecordLocalDB `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ReplyDWRecord) Reset()         { *m = ReplyDWRecord{} }
func (m *ReplyDWRecord) String() string { return proto.CompactTextString(m) }
func (*ReplyDWRecord) ProtoMessage()    {}
func (*ReplyDWRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{30}
}

func (m *ReplyDWRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyDWRecord.Unmarshal(m, b)
}
func (m *ReplyDWRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyDWRecord.Marshal(b, m, deterministic)
}
func (m *ReplyDWRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyDWRecord.Merge(m, src)
}
func (m *ReplyDWRecord) XXX_Size() int {
	return xxx_messageInfo_ReplyDWRecord.Size(m)
}
func (m *ReplyDWRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyDWRecord.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyDWRecord proto.InternalMessageInfo

func (m *ReplyDWRecord) GetItems() []*DWRecordLocalDB {
	if m != nil {
		return m.Items
	}
	return nil
}

//创建白条
type CreateBill struct {
	Id                     string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TokenSymbol            string       `protobuf:"bytes,2,opt,name=tokenSymbol,proto3" json:"tokenSymbol,omitempty"`
	CoinsSymbol            string       `protobuf:"bytes,3,opt,name=coinsSymbol,proto3" json:"coinsSymbol,omitempty"`
	Borrower               string       `protobuf:"bytes,4,opt,name=borrower,proto3" json:"borrower,omitempty"`
	Guarantor              []string     `protobuf:"bytes,5,rep,name=guarantor,proto3" json:"guarantor,omitempty"`
	LoanAmount             int64        `protobuf:"varint,6,opt,name=loanAmount,proto3" json:"loanAmount,omitempty"`
	Rate                   int64        `protobuf:"varint,7,opt,name=rate,proto3" json:"rate,omitempty"`
	OverdueRate            int64        `protobuf:"varint,8,opt,name=overdueRate,proto3" json:"overdueRate,omitempty"`
	CirculationTime        int64        `protobuf:"varint,9,opt,name=circulationTime,proto3" json:"circulationTime,omitempty"`
	RepayCount             int32        `protobuf:"varint,10,opt,name=repayCount,proto3" json:"repayCount,omitempty"`
	ItemAmount             int64        `protobuf:"varint,11,opt,name=itemAmount,proto3" json:"itemAmount,omitempty"`
	RepayMethod            int32        `protobuf:"varint,12,opt,name=repayMethod,proto3" json:"repayMethod,omitempty"`
	Anonymous              bool         `protobuf:"varint,13,opt,name=anonymous,proto3" json:"anonymous,omitempty"`
	Phone                  string       `protobuf:"bytes,14,opt,name=phone,proto3" json:"phone,omitempty"`
	Identifier             string       `protobuf:"bytes,15,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Name                   string       `protobuf:"bytes,16,opt,name=name,proto3" json:"name,omitempty"`
	Remark                 string       `protobuf:"bytes,17,opt,name=remark,proto3" json:"remark,omitempty"`
	Addr                   string       `protobuf:"bytes,18,opt,name=addr,proto3" json:"addr,omitempty"`
	WaitForGuaranteePeriod int64        `protobuf:"varint,19,opt,name=waitForGuaranteePeriod,proto3" json:"waitForGuaranteePeriod,omitempty"`
	BillType               int32        `protobuf:"varint,20,opt,name=billType,proto3" json:"billType,omitempty"`
	OverdueGracePeriod     int64        `protobuf:"varint,21,opt,name=overdueGracePeriod,proto3" json:"overdueGracePeriod,omitempty"`
	OverdueLimit           int64        `protobuf:"varint,22,opt,name=overdueLimit,proto3" json:"overdueLimit,omitempty"`
	ExLimit                int64        `protobuf:"varint,23,opt,name=exLimit,proto3" json:"exLimit,omitempty"`
	NeedDpdtToken          bool         `protobuf:"varint,24,opt,name=needDpdtToken,proto3" json:"needDpdtToken,omitempty"`
	DpdtTokens             []*DpdtToken `protobuf:"bytes,25,rep,name=dpdtTokens,proto3" json:"dpdtTokens,omitempty"`
	Split                  bool         `protobuf:"varint,26,opt,name=split,proto3" json:"split,omitempty"`
	CreatorIndentity       int32        `protobuf:"varint,27,opt,name=creatorIndentity,proto3" json:"creatorIndentity,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}     `json:"-"`
	XXX_unrecognized       []byte       `json:"-"`
	XXX_sizecache          int32        `json:"-"`
}

func (m *CreateBill) Reset()         { *m = CreateBill{} }
func (m *CreateBill) String() string { return proto.CompactTextString(m) }
func (*CreateBill) ProtoMessage()    {}
func (*CreateBill) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{31}
}

func (m *CreateBill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBill.Unmarshal(m, b)
}
func (m *CreateBill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBill.Marshal(b, m, deterministic)
}
func (m *CreateBill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBill.Merge(m, src)
}
func (m *CreateBill) XXX_Size() int {
	return xxx_messageInfo_CreateBill.Size(m)
}
func (m *CreateBill) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBill.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBill proto.InternalMessageInfo

func (m *CreateBill) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateBill) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *CreateBill) GetCoinsSymbol() string {
	if m != nil {
		return m.CoinsSymbol
	}
	return ""
}

func (m *CreateBill) GetBorrower() string {
	if m != nil {
		return m.Borrower
	}
	return ""
}

func (m *CreateBill) GetGuarantor() []string {
	if m != nil {
		return m.Guarantor
	}
	return nil
}

func (m *CreateBill) GetLoanAmount() int64 {
	if m != nil {
		return m.LoanAmount
	}
	return 0
}

func (m *CreateBill) GetRate() int64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *CreateBill) GetOverdueRate() int64 {
	if m != nil {
		return m.OverdueRate
	}
	return 0
}

func (m *CreateBill) GetCirculationTime() int64 {
	if m != nil {
		return m.CirculationTime
	}
	return 0
}

func (m *CreateBill) GetRepayCount() int32 {
	if m != nil {
		return m.RepayCount
	}
	return 0
}

func (m *CreateBill) GetItemAmount() int64 {
	if m != nil {
		return m.ItemAmount
	}
	return 0
}

func (m *CreateBill) GetRepayMethod() int32 {
	if m != nil {
		return m.RepayMethod
	}
	return 0
}

func (m *CreateBill) GetAnonymous() bool {
	if m != nil {
		return m.Anonymous
	}
	return false
}

func (m *CreateBill) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *CreateBill) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *CreateBill) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateBill) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *CreateBill) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *CreateBill) GetWaitForGuaranteePeriod() int64 {
	if m != nil {
		return m.WaitForGuaranteePeriod
	}
	return 0
}

func (m *CreateBill) GetBillType() int32 {
	if m != nil {
		return m.BillType
	}
	return 0
}

func (m *CreateBill) GetOverdueGracePeriod() int64 {
	if m != nil {
		return m.OverdueGracePeriod
	}
	return 0
}

func (m *CreateBill) GetOverdueLimit() int64 {
	if m != nil {
		return m.OverdueLimit
	}
	return 0
}

func (m *CreateBill) GetExLimit() int64 {
	if m != nil {
		return m.ExLimit
	}
	return 0
}

func (m *CreateBill) GetNeedDpdtToken() bool {
	if m != nil {
		return m.NeedDpdtToken
	}
	return false
}

func (m *CreateBill) GetDpdtTokens() []*DpdtToken {
	if m != nil {
		return m.DpdtTokens
	}
	return nil
}

func (m *CreateBill) GetSplit() bool {
	if m != nil {
		return m.Split
	}
	return false
}

func (m *CreateBill) GetCreatorIndentity() int32 {
	if m != nil {
		return m.CreatorIndentity
	}
	return 0
}

//依赖代币
type DpdtToken struct {
	Symbol               string   `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Amount               int64    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Used                 int64    `protobuf:"varint,3,opt,name=used,proto3" json:"used,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DpdtToken) Reset()         { *m = DpdtToken{} }
func (m *DpdtToken) String() string { return proto.CompactTextString(m) }
func (*DpdtToken) ProtoMessage()    {}
func (*DpdtToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{32}
}

func (m *DpdtToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DpdtToken.Unmarshal(m, b)
}
func (m *DpdtToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DpdtToken.Marshal(b, m, deterministic)
}
func (m *DpdtToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DpdtToken.Merge(m, src)
}
func (m *DpdtToken) XXX_Size() int {
	return xxx_messageInfo_DpdtToken.Size(m)
}
func (m *DpdtToken) XXX_DiscardUnknown() {
	xxx_messageInfo_DpdtToken.DiscardUnknown(m)
}

var xxx_messageInfo_DpdtToken proto.InternalMessageInfo

func (m *DpdtToken) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *DpdtToken) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *DpdtToken) GetUsed() int64 {
	if m != nil {
		return m.Used
	}
	return 0
}

//Log
type ReceiptLogCreateBill struct {
	CreateBill           *CreateBill `protobuf:"bytes,1,opt,name=createBill,proto3" json:"createBill,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReceiptLogCreateBill) Reset()         { *m = ReceiptLogCreateBill{} }
func (m *ReceiptLogCreateBill) String() string { return proto.CompactTextString(m) }
func (*ReceiptLogCreateBill) ProtoMessage()    {}
func (*ReceiptLogCreateBill) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{33}
}

func (m *ReceiptLogCreateBill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptLogCreateBill.Unmarshal(m, b)
}
func (m *ReceiptLogCreateBill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptLogCreateBill.Marshal(b, m, deterministic)
}
func (m *ReceiptLogCreateBill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptLogCreateBill.Merge(m, src)
}
func (m *ReceiptLogCreateBill) XXX_Size() int {
	return xxx_messageInfo_ReceiptLogCreateBill.Size(m)
}
func (m *ReceiptLogCreateBill) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptLogCreateBill.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptLogCreateBill proto.InternalMessageInfo

func (m *ReceiptLogCreateBill) GetCreateBill() *CreateBill {
	if m != nil {
		return m.CreateBill
	}
	return nil
}

//白条v2.0 -- state DB
type Bill struct {
	//白条ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	//代币标识
	TokenSymbol string `protobuf:"bytes,2,opt,name=tokenSymbol,proto3" json:"tokenSymbol,omitempty"`
	//筹款货币标识
	CoinsSymbol string `protobuf:"bytes,3,opt,name=coinsSymbol,proto3" json:"coinsSymbol,omitempty"`
	//借款人账户
	Borrower string `protobuf:"bytes,4,opt,name=borrower,proto3" json:"borrower,omitempty"`
	//担保人列表
	Guarantees []*GuaranteeInfo `protobuf:"bytes,5,rep,name=guarantees,proto3" json:"guarantees,omitempty"`
	//筹款总金额 或 票据额度
	LoanAmount int64 `protobuf:"varint,6,opt,name=loanAmount,proto3" json:"loanAmount,omitempty"`
	//日息，复利计算
	Rate int64 `protobuf:"varint,7,opt,name=rate,proto3" json:"rate,omitempty"`
	//逾期日息，复利计算
	OverdueRate int64 `protobuf:"varint,8,opt,name=overdueRate,proto3" json:"overdueRate,omitempty"`
	//白条发行日期,以发布市场或发起到个人为起始点
	IssueDate int64 `protobuf:"varint,9,opt,name=issueDate,proto3" json:"issueDate,omitempty"`
	//白条流通时长,单位：second(应该以天数来计算总秒数才较准确)
	CirculationTime int64 `protobuf:"varint,10,opt,name=circulationTime,proto3" json:"circulationTime,omitempty"`
	//还款总期数
	RepayCount int32 `protobuf:"varint,11,opt,name=repayCount,proto3" json:"repayCount,omitempty"`
	//每期还款计划
	RepayItems []*RepayPlan `protobuf:"bytes,12,rep,name=repayItems,proto3" json:"repayItems,omitempty"`
	//下期还款的截至日期(作为Bill的截至还款日期)，Unit:second
	RepayDate int64 `protobuf:"varint,13,opt,name=repayDate,proto3" json:"repayDate,omitempty"`
	//还款方式
	RepayMethod int32 `protobuf:"varint,14,opt,name=repayMethod,proto3" json:"repayMethod,omitempty"`
	//是否匿名
	Anonymous bool `protobuf:"varint,15,opt,name=anonymous,proto3" json:"anonymous,omitempty"`
	//借款人手机号
	Phone string `protobuf:"bytes,16,opt,name=phone,proto3" json:"phone,omitempty"`
	//借款人身份证号
	Identifier string `protobuf:"bytes,17,opt,name=identifier,proto3" json:"identifier,omitempty"`
	//借款人姓名
	Name string `protobuf:"bytes,18,opt,name=name,proto3" json:"name,omitempty"`
	//白条状态:created,issued,blocked
	Status int32 `protobuf:"varint,19,opt,name=status,proto3" json:"status,omitempty"`
	//备注，可用于提示凑款用途
	Remark string `protobuf:"bytes,20,opt,name=remark,proto3" json:"remark,omitempty"`
	//白条创建时间
	CreateTime int64 `protobuf:"varint,21,opt,name=createTime,proto3" json:"createTime,omitempty"`
	//最近还款时间, Unix time
	LatestRepayDate int64 `protobuf:"varint,22,opt,name=latestRepayDate,proto3" json:"latestRepayDate,omitempty"`
	//当前已还款期数
	CurrentRepayedCount int32 `protobuf:"varint,23,opt,name=currentRepayedCount,proto3" json:"currentRepayedCount,omitempty"`
	//当前已兑现的总额度
	TotalCashAmount int64 `protobuf:"varint,24,opt,name=totalCashAmount,proto3" json:"totalCashAmount,omitempty"`
	//总还款额度CCNY
	TotalRepayAmount int64 `protobuf:"varint,25,opt,name=totalRepayAmount,proto3" json:"totalRepayAmount,omitempty"`
	//总的赎回的token数额
	TotalRedeemToken int64 `protobuf:"varint,26,opt,name=totalRedeemToken,proto3" json:"totalRedeemToken,omitempty"`
	//总的兑现的Token数
	TotalCashedToken int64 `protobuf:"varint,27,opt,name=totalCashedToken,proto3" json:"totalCashedToken,omitempty"`
	//已筹款的数额，CCNY...
	TotalCollectedAmount int64 `protobuf:"varint,28,opt,name=totalCollectedAmount,proto3" json:"totalCollectedAmount,omitempty"`
	//等待担保审核时间间隔
	WaitForGuaranteePeriod int64 `protobuf:"varint,29,opt,name=waitForGuaranteePeriod,proto3" json:"waitForGuaranteePeriod,omitempty"`
	//每期利率, 根据日息以及每期的天数计算得到
	RateForPerPeriod int64 `protobuf:"varint,30,opt,name=rateForPerPeriod,proto3" json:"rateForPerPeriod,omitempty"`
	//以下各项是为票据应用所添加：bill
	//Bill类型，目前有：债券和票据（bond/bill）
	BillType int32 `protobuf:"varint,31,opt,name=BillType,proto3" json:"BillType,omitempty"`
	//票据的起始单价; 根据票据的日息和到期贴现日计算所得
	OriginPrice int64 `protobuf:"varint,32,opt,name=originPrice,proto3" json:"originPrice,omitempty"`
	//逾期宽限期，单位：天
	OverdueGracePeriod int64 `protobuf:"varint,33,opt,name=overdueGracePeriod,proto3" json:"overdueGracePeriod,omitempty"`
	//最大逾期记息时长, unit:days
	OverdueLimit int64 `protobuf:"varint,34,opt,name=overdueLimit,proto3" json:"overdueLimit,omitempty"`
	//转让限制，白条达到一定的出让率才允许转让
	ExLimit int64 `protobuf:"varint,35,opt,name=exLimit,proto3" json:"exLimit,omitempty"`
	//是否依赖其他代币（应用于供应链金融中的授信通证）
	NeedDpdtToken bool `protobuf:"varint,36,opt,name=needDpdtToken,proto3" json:"needDpdtToken,omitempty"`
	//Dependent tokens
	DpdtTokens []*DpdtToken `protobuf:"bytes,37,rep,name=dpdtTokens,proto3" json:"dpdtTokens,omitempty"`
	//是否可以拆分白条
	Split bool `protobuf:"varint,38,opt,name=split,proto3" json:"split,omitempty"`
	//拆分白条信息
	SplitBill            []*SplitBillInfo `protobuf:"bytes,39,rep,name=splitBill,proto3" json:"splitBill,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Bill) Reset()         { *m = Bill{} }
func (m *Bill) String() string { return proto.CompactTextString(m) }
func (*Bill) ProtoMessage()    {}
func (*Bill) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{34}
}

func (m *Bill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bill.Unmarshal(m, b)
}
func (m *Bill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bill.Marshal(b, m, deterministic)
}
func (m *Bill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bill.Merge(m, src)
}
func (m *Bill) XXX_Size() int {
	return xxx_messageInfo_Bill.Size(m)
}
func (m *Bill) XXX_DiscardUnknown() {
	xxx_messageInfo_Bill.DiscardUnknown(m)
}

var xxx_messageInfo_Bill proto.InternalMessageInfo

func (m *Bill) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Bill) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *Bill) GetCoinsSymbol() string {
	if m != nil {
		return m.CoinsSymbol
	}
	return ""
}

func (m *Bill) GetBorrower() string {
	if m != nil {
		return m.Borrower
	}
	return ""
}

func (m *Bill) GetGuarantees() []*GuaranteeInfo {
	if m != nil {
		return m.Guarantees
	}
	return nil
}

func (m *Bill) GetLoanAmount() int64 {
	if m != nil {
		return m.LoanAmount
	}
	return 0
}

func (m *Bill) GetRate() int64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *Bill) GetOverdueRate() int64 {
	if m != nil {
		return m.OverdueRate
	}
	return 0
}

func (m *Bill) GetIssueDate() int64 {
	if m != nil {
		return m.IssueDate
	}
	return 0
}

func (m *Bill) GetCirculationTime() int64 {
	if m != nil {
		return m.CirculationTime
	}
	return 0
}

func (m *Bill) GetRepayCount() int32 {
	if m != nil {
		return m.RepayCount
	}
	return 0
}

func (m *Bill) GetRepayItems() []*RepayPlan {
	if m != nil {
		return m.RepayItems
	}
	return nil
}

func (m *Bill) GetRepayDate() int64 {
	if m != nil {
		return m.RepayDate
	}
	return 0
}

func (m *Bill) GetRepayMethod() int32 {
	if m != nil {
		return m.RepayMethod
	}
	return 0
}

func (m *Bill) GetAnonymous() bool {
	if m != nil {
		return m.Anonymous
	}
	return false
}

func (m *Bill) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Bill) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *Bill) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Bill) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Bill) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *Bill) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Bill) GetLatestRepayDate() int64 {
	if m != nil {
		return m.LatestRepayDate
	}
	return 0
}

func (m *Bill) GetCurrentRepayedCount() int32 {
	if m != nil {
		return m.CurrentRepayedCount
	}
	return 0
}

func (m *Bill) GetTotalCashAmount() int64 {
	if m != nil {
		return m.TotalCashAmount
	}
	return 0
}

func (m *Bill) GetTotalRepayAmount() int64 {
	if m != nil {
		return m.TotalRepayAmount
	}
	return 0
}

func (m *Bill) GetTotalRedeemToken() int64 {
	if m != nil {
		return m.TotalRedeemToken
	}
	return 0
}

func (m *Bill) GetTotalCashedToken() int64 {
	if m != nil {
		return m.TotalCashedToken
	}
	return 0
}

func (m *Bill) GetTotalCollectedAmount() int64 {
	if m != nil {
		return m.TotalCollectedAmount
	}
	return 0
}

func (m *Bill) GetWaitForGuaranteePeriod() int64 {
	if m != nil {
		return m.WaitForGuaranteePeriod
	}
	return 0
}

func (m *Bill) GetRateForPerPeriod() int64 {
	if m != nil {
		return m.RateForPerPeriod
	}
	return 0
}

func (m *Bill) GetBillType() int32 {
	if m != nil {
		return m.BillType
	}
	return 0
}

func (m *Bill) GetOriginPrice() int64 {
	if m != nil {
		return m.OriginPrice
	}
	return 0
}

func (m *Bill) GetOverdueGracePeriod() int64 {
	if m != nil {
		return m.OverdueGracePeriod
	}
	return 0
}

func (m *Bill) GetOverdueLimit() int64 {
	if m != nil {
		return m.OverdueLimit
	}
	return 0
}

func (m *Bill) GetExLimit() int64 {
	if m != nil {
		return m.ExLimit
	}
	return 0
}

func (m *Bill) GetNeedDpdtToken() bool {
	if m != nil {
		return m.NeedDpdtToken
	}
	return false
}

func (m *Bill) GetDpdtTokens() []*DpdtToken {
	if m != nil {
		return m.DpdtTokens
	}
	return nil
}

func (m *Bill) GetSplit() bool {
	if m != nil {
		return m.Split
	}
	return false
}

func (m *Bill) GetSplitBill() []*SplitBillInfo {
	if m != nil {
		return m.SplitBill
	}
	return nil
}

type SplitBillInfo struct {
	SplitAddr            string   `protobuf:"bytes,1,opt,name=splitAddr,proto3" json:"splitAddr,omitempty"`
	ToAddr               string   `protobuf:"bytes,2,opt,name=toAddr,proto3" json:"toAddr,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Amount               int64    `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	TokenSymbol          string   `protobuf:"bytes,5,opt,name=tokenSymbol,proto3" json:"tokenSymbol,omitempty"`
	Remark               string   `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SplitBillInfo) Reset()         { *m = SplitBillInfo{} }
func (m *SplitBillInfo) String() string { return proto.CompactTextString(m) }
func (*SplitBillInfo) ProtoMessage()    {}
func (*SplitBillInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{35}
}

func (m *SplitBillInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SplitBillInfo.Unmarshal(m, b)
}
func (m *SplitBillInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SplitBillInfo.Marshal(b, m, deterministic)
}
func (m *SplitBillInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SplitBillInfo.Merge(m, src)
}
func (m *SplitBillInfo) XXX_Size() int {
	return xxx_messageInfo_SplitBillInfo.Size(m)
}
func (m *SplitBillInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SplitBillInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SplitBillInfo proto.InternalMessageInfo

func (m *SplitBillInfo) GetSplitAddr() string {
	if m != nil {
		return m.SplitAddr
	}
	return ""
}

func (m *SplitBillInfo) GetToAddr() string {
	if m != nil {
		return m.ToAddr
	}
	return ""
}

func (m *SplitBillInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SplitBillInfo) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *SplitBillInfo) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *SplitBillInfo) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

type GuaranteeInfo struct {
	Guarantor            string   `protobuf:"bytes,1,opt,name=guarantor,proto3" json:"guarantor,omitempty"`
	GuaranteeRate        int32    `protobuf:"varint,2,opt,name=guaranteeRate,proto3" json:"guaranteeRate,omitempty"`
	GuaranteeTxHash      string   `protobuf:"bytes,3,opt,name=guaranteeTxHash,proto3" json:"guaranteeTxHash,omitempty"`
	FrozenAsset          int64    `protobuf:"varint,4,opt,name=frozenAsset,proto3" json:"frozenAsset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GuaranteeInfo) Reset()         { *m = GuaranteeInfo{} }
func (m *GuaranteeInfo) String() string { return proto.CompactTextString(m) }
func (*GuaranteeInfo) ProtoMessage()    {}
func (*GuaranteeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{36}
}

func (m *GuaranteeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GuaranteeInfo.Unmarshal(m, b)
}
func (m *GuaranteeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GuaranteeInfo.Marshal(b, m, deterministic)
}
func (m *GuaranteeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuaranteeInfo.Merge(m, src)
}
func (m *GuaranteeInfo) XXX_Size() int {
	return xxx_messageInfo_GuaranteeInfo.Size(m)
}
func (m *GuaranteeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GuaranteeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GuaranteeInfo proto.InternalMessageInfo

func (m *GuaranteeInfo) GetGuarantor() string {
	if m != nil {
		return m.Guarantor
	}
	return ""
}

func (m *GuaranteeInfo) GetGuaranteeRate() int32 {
	if m != nil {
		return m.GuaranteeRate
	}
	return 0
}

func (m *GuaranteeInfo) GetGuaranteeTxHash() string {
	if m != nil {
		return m.GuaranteeTxHash
	}
	return ""
}

func (m *GuaranteeInfo) GetFrozenAsset() int64 {
	if m != nil {
		return m.FrozenAsset
	}
	return 0
}

type RepayPlan struct {
	RepayPhase           int32    `protobuf:"varint,1,opt,name=repayPhase,proto3" json:"repayPhase,omitempty"`
	RepayAmount          int64    `protobuf:"varint,2,opt,name=repayAmount,proto3" json:"repayAmount,omitempty"`
	RedeemToken          int64    `protobuf:"varint,3,opt,name=redeemToken,proto3" json:"redeemToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepayPlan) Reset()         { *m = RepayPlan{} }
func (m *RepayPlan) String() string { return proto.CompactTextString(m) }
func (*RepayPlan) ProtoMessage()    {}
func (*RepayPlan) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{37}
}

func (m *RepayPlan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepayPlan.Unmarshal(m, b)
}
func (m *RepayPlan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepayPlan.Marshal(b, m, deterministic)
}
func (m *RepayPlan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepayPlan.Merge(m, src)
}
func (m *RepayPlan) XXX_Size() int {
	return xxx_messageInfo_RepayPlan.Size(m)
}
func (m *RepayPlan) XXX_DiscardUnknown() {
	xxx_messageInfo_RepayPlan.DiscardUnknown(m)
}

var xxx_messageInfo_RepayPlan proto.InternalMessageInfo

func (m *RepayPlan) GetRepayPhase() int32 {
	if m != nil {
		return m.RepayPhase
	}
	return 0
}

func (m *RepayPlan) GetRepayAmount() int64 {
	if m != nil {
		return m.RepayAmount
	}
	return 0
}

func (m *RepayPlan) GetRedeemToken() int64 {
	if m != nil {
		return m.RedeemToken
	}
	return 0
}

//作为借款人需要掌握的白条信息 --table: local DB
type BorrowerBillLocalDB struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status               int32    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BorrowerBillLocalDB) Reset()         { *m = BorrowerBillLocalDB{} }
func (m *BorrowerBillLocalDB) String() string { return proto.CompactTextString(m) }
func (*BorrowerBillLocalDB) ProtoMessage()    {}
func (*BorrowerBillLocalDB) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{38}
}

func (m *BorrowerBillLocalDB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BorrowerBillLocalDB.Unmarshal(m, b)
}
func (m *BorrowerBillLocalDB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BorrowerBillLocalDB.Marshal(b, m, deterministic)
}
func (m *BorrowerBillLocalDB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BorrowerBillLocalDB.Merge(m, src)
}
func (m *BorrowerBillLocalDB) XXX_Size() int {
	return xxx_messageInfo_BorrowerBillLocalDB.Size(m)
}
func (m *BorrowerBillLocalDB) XXX_DiscardUnknown() {
	xxx_messageInfo_BorrowerBillLocalDB.DiscardUnknown(m)
}

var xxx_messageInfo_BorrowerBillLocalDB proto.InternalMessageInfo

func (m *BorrowerBillLocalDB) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BorrowerBillLocalDB) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

//查询单个白条信息
type ReqBillInfo struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqBillInfo) Reset()         { *m = ReqBillInfo{} }
func (m *ReqBillInfo) String() string { return proto.CompactTextString(m) }
func (*ReqBillInfo) ProtoMessage()    {}
func (*ReqBillInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{39}
}

func (m *ReqBillInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqBillInfo.Unmarshal(m, b)
}
func (m *ReqBillInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqBillInfo.Marshal(b, m, deterministic)
}
func (m *ReqBillInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqBillInfo.Merge(m, src)
}
func (m *ReqBillInfo) XXX_Size() int {
	return xxx_messageInfo_ReqBillInfo.Size(m)
}
func (m *ReqBillInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqBillInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReqBillInfo proto.InternalMessageInfo

func (m *ReqBillInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReplyBillInfo struct {
	BillInfo             *Bill    `protobuf:"bytes,1,opt,name=BillInfo,proto3" json:"BillInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplyBillInfo) Reset()         { *m = ReplyBillInfo{} }
func (m *ReplyBillInfo) String() string { return proto.CompactTextString(m) }
func (*ReplyBillInfo) ProtoMessage()    {}
func (*ReplyBillInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{40}
}

func (m *ReplyBillInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyBillInfo.Unmarshal(m, b)
}
func (m *ReplyBillInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyBillInfo.Marshal(b, m, deterministic)
}
func (m *ReplyBillInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyBillInfo.Merge(m, src)
}
func (m *ReplyBillInfo) XXX_Size() int {
	return xxx_messageInfo_ReplyBillInfo.Size(m)
}
func (m *ReplyBillInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyBillInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyBillInfo proto.InternalMessageInfo

func (m *ReplyBillInfo) GetBillInfo() *Bill {
	if m != nil {
		return m.BillInfo
	}
	return nil
}

type ReqBorrowerBill struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	PrimaryKey           string   `protobuf:"bytes,2,opt,name=primaryKey,proto3" json:"primaryKey,omitempty"`
	EntrieCount          int32    `protobuf:"varint,3,opt,name=entrieCount,proto3" json:"entrieCount,omitempty"`
	Status               int32    `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqBorrowerBill) Reset()         { *m = ReqBorrowerBill{} }
func (m *ReqBorrowerBill) String() string { return proto.CompactTextString(m) }
func (*ReqBorrowerBill) ProtoMessage()    {}
func (*ReqBorrowerBill) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{41}
}

func (m *ReqBorrowerBill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqBorrowerBill.Unmarshal(m, b)
}
func (m *ReqBorrowerBill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqBorrowerBill.Marshal(b, m, deterministic)
}
func (m *ReqBorrowerBill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqBorrowerBill.Merge(m, src)
}
func (m *ReqBorrowerBill) XXX_Size() int {
	return xxx_messageInfo_ReqBorrowerBill.Size(m)
}
func (m *ReqBorrowerBill) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqBorrowerBill.DiscardUnknown(m)
}

var xxx_messageInfo_ReqBorrowerBill proto.InternalMessageInfo

func (m *ReqBorrowerBill) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReqBorrowerBill) GetPrimaryKey() string {
	if m != nil {
		return m.PrimaryKey
	}
	return ""
}

func (m *ReqBorrowerBill) GetEntrieCount() int32 {
	if m != nil {
		return m.EntrieCount
	}
	return 0
}

func (m *ReqBorrowerBill) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type ReplyBorrowerBill struct {
	Items                []*BorrowerBillInfo `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	PrimaryKey           string              `protobuf:"bytes,2,opt,name=primaryKey,proto3" json:"primaryKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ReplyBorrowerBill) Reset()         { *m = ReplyBorrowerBill{} }
func (m *ReplyBorrowerBill) String() string { return proto.CompactTextString(m) }
func (*ReplyBorrowerBill) ProtoMessage()    {}
func (*ReplyBorrowerBill) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{42}
}

func (m *ReplyBorrowerBill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyBorrowerBill.Unmarshal(m, b)
}
func (m *ReplyBorrowerBill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyBorrowerBill.Marshal(b, m, deterministic)
}
func (m *ReplyBorrowerBill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyBorrowerBill.Merge(m, src)
}
func (m *ReplyBorrowerBill) XXX_Size() int {
	return xxx_messageInfo_ReplyBorrowerBill.Size(m)
}
func (m *ReplyBorrowerBill) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyBorrowerBill.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyBorrowerBill proto.InternalMessageInfo

func (m *ReplyBorrowerBill) GetItems() []*BorrowerBillInfo {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ReplyBorrowerBill) GetPrimaryKey() string {
	if m != nil {
		return m.PrimaryKey
	}
	return ""
}

type BorrowerBillInfo struct {
	Id                     string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LoanAmount             int64               `protobuf:"varint,2,opt,name=loanAmount,proto3" json:"loanAmount,omitempty"`
	Detail                 *ReplyBillRepayInfo `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
	Status                 int32               `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	CollectedAmount        int64               `protobuf:"varint,5,opt,name=collectedAmount,proto3" json:"collectedAmount,omitempty"`
	CreateDate             int64               `protobuf:"varint,6,opt,name=createDate,proto3" json:"createDate,omitempty"`
	WaitForGuaranteePeriod int64               `protobuf:"varint,7,opt,name=waitForGuaranteePeriod,proto3" json:"waitForGuaranteePeriod,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}            `json:"-"`
	XXX_unrecognized       []byte              `json:"-"`
	XXX_sizecache          int32               `json:"-"`
}

func (m *BorrowerBillInfo) Reset()         { *m = BorrowerBillInfo{} }
func (m *BorrowerBillInfo) String() string { return proto.CompactTextString(m) }
func (*BorrowerBillInfo) ProtoMessage()    {}
func (*BorrowerBillInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{43}
}

func (m *BorrowerBillInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BorrowerBillInfo.Unmarshal(m, b)
}
func (m *BorrowerBillInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BorrowerBillInfo.Marshal(b, m, deterministic)
}
func (m *BorrowerBillInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BorrowerBillInfo.Merge(m, src)
}
func (m *BorrowerBillInfo) XXX_Size() int {
	return xxx_messageInfo_BorrowerBillInfo.Size(m)
}
func (m *BorrowerBillInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BorrowerBillInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BorrowerBillInfo proto.InternalMessageInfo

func (m *BorrowerBillInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BorrowerBillInfo) GetLoanAmount() int64 {
	if m != nil {
		return m.LoanAmount
	}
	return 0
}

func (m *BorrowerBillInfo) GetDetail() *ReplyBillRepayInfo {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (m *BorrowerBillInfo) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *BorrowerBillInfo) GetCollectedAmount() int64 {
	if m != nil {
		return m.CollectedAmount
	}
	return 0
}

func (m *BorrowerBillInfo) GetCreateDate() int64 {
	if m != nil {
		return m.CreateDate
	}
	return 0
}

func (m *BorrowerBillInfo) GetWaitForGuaranteePeriod() int64 {
	if m != nil {
		return m.WaitForGuaranteePeriod
	}
	return 0
}

//查询白条的还款信息
type ReqBillRepayInfo struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqBillRepayInfo) Reset()         { *m = ReqBillRepayInfo{} }
func (m *ReqBillRepayInfo) String() string { return proto.CompactTextString(m) }
func (*ReqBillRepayInfo) ProtoMessage()    {}
func (*ReqBillRepayInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{44}
}

func (m *ReqBillRepayInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqBillRepayInfo.Unmarshal(m, b)
}
func (m *ReqBillRepayInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqBillRepayInfo.Marshal(b, m, deterministic)
}
func (m *ReqBillRepayInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqBillRepayInfo.Merge(m, src)
}
func (m *ReqBillRepayInfo) XXX_Size() int {
	return xxx_messageInfo_ReqBillRepayInfo.Size(m)
}
func (m *ReqBillRepayInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqBillRepayInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReqBillRepayInfo proto.InternalMessageInfo

func (m *ReqBillRepayInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

//包括：当前应履行的期数，总期数，当前期应还款额，截至还款日期, 当前还款是否包含逾期还款, 逾期日息;
type ReplyBillRepayInfo struct {
	CurrentCount         int32    `protobuf:"varint,1,opt,name=currentCount,proto3" json:"currentCount,omitempty"`
	TotalRepayCount      int32    `protobuf:"varint,2,opt,name=totalRepayCount,proto3" json:"totalRepayCount,omitempty"`
	NormalRepayAmount    int64    `protobuf:"varint,3,opt,name=normalRepayAmount,proto3" json:"normalRepayAmount,omitempty"`
	ActualRepayAmount    int64    `protobuf:"varint,4,opt,name=actualRepayAmount,proto3" json:"actualRepayAmount,omitempty"`
	RepayDueDate         int64    `protobuf:"varint,5,opt,name=repayDueDate,proto3" json:"repayDueDate,omitempty"`
	IncludeOverdueRepay  bool     `protobuf:"varint,6,opt,name=includeOverdueRepay,proto3" json:"includeOverdueRepay,omitempty"`
	OverdueRate          int64    `protobuf:"varint,7,opt,name=overdueRate,proto3" json:"overdueRate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplyBillRepayInfo) Reset()         { *m = ReplyBillRepayInfo{} }
func (m *ReplyBillRepayInfo) String() string { return proto.CompactTextString(m) }
func (*ReplyBillRepayInfo) ProtoMessage()    {}
func (*ReplyBillRepayInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{45}
}

func (m *ReplyBillRepayInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyBillRepayInfo.Unmarshal(m, b)
}
func (m *ReplyBillRepayInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyBillRepayInfo.Marshal(b, m, deterministic)
}
func (m *ReplyBillRepayInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyBillRepayInfo.Merge(m, src)
}
func (m *ReplyBillRepayInfo) XXX_Size() int {
	return xxx_messageInfo_ReplyBillRepayInfo.Size(m)
}
func (m *ReplyBillRepayInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyBillRepayInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyBillRepayInfo proto.InternalMessageInfo

func (m *ReplyBillRepayInfo) GetCurrentCount() int32 {
	if m != nil {
		return m.CurrentCount
	}
	return 0
}

func (m *ReplyBillRepayInfo) GetTotalRepayCount() int32 {
	if m != nil {
		return m.TotalRepayCount
	}
	return 0
}

func (m *ReplyBillRepayInfo) GetNormalRepayAmount() int64 {
	if m != nil {
		return m.NormalRepayAmount
	}
	return 0
}

func (m *ReplyBillRepayInfo) GetActualRepayAmount() int64 {
	if m != nil {
		return m.ActualRepayAmount
	}
	return 0
}

func (m *ReplyBillRepayInfo) GetRepayDueDate() int64 {
	if m != nil {
		return m.RepayDueDate
	}
	return 0
}

func (m *ReplyBillRepayInfo) GetIncludeOverdueRepay() bool {
	if m != nil {
		return m.IncludeOverdueRepay
	}
	return false
}

func (m *ReplyBillRepayInfo) GetOverdueRate() int64 {
	if m != nil {
		return m.OverdueRate
	}
	return 0
}

//发行白条； 不允许相同的白条发行多次，故发行之前要做检查;
type ReleaseBill struct {
	ReleaseAddr          string   `protobuf:"bytes,1,opt,name=releaseAddr,proto3" json:"releaseAddr,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	ReleaseIndentity     int32    `protobuf:"varint,3,opt,name=releaseIndentity,proto3" json:"releaseIndentity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseBill) Reset()         { *m = ReleaseBill{} }
func (m *ReleaseBill) String() string { return proto.CompactTextString(m) }
func (*ReleaseBill) ProtoMessage()    {}
func (*ReleaseBill) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{46}
}

func (m *ReleaseBill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseBill.Unmarshal(m, b)
}
func (m *ReleaseBill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseBill.Marshal(b, m, deterministic)
}
func (m *ReleaseBill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseBill.Merge(m, src)
}
func (m *ReleaseBill) XXX_Size() int {
	return xxx_messageInfo_ReleaseBill.Size(m)
}
func (m *ReleaseBill) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseBill.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseBill proto.InternalMessageInfo

func (m *ReleaseBill) GetReleaseAddr() string {
	if m != nil {
		return m.ReleaseAddr
	}
	return ""
}

func (m *ReleaseBill) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReleaseBill) GetReleaseIndentity() int32 {
	if m != nil {
		return m.ReleaseIndentity
	}
	return 0
}

type ReceiptLogReleaseBill struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State                int32    `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReceiptLogReleaseBill) Reset()         { *m = ReceiptLogReleaseBill{} }
func (m *ReceiptLogReleaseBill) String() string { return proto.CompactTextString(m) }
func (*ReceiptLogReleaseBill) ProtoMessage()    {}
func (*ReceiptLogReleaseBill) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{47}
}

func (m *ReceiptLogReleaseBill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptLogReleaseBill.Unmarshal(m, b)
}
func (m *ReceiptLogReleaseBill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptLogReleaseBill.Marshal(b, m, deterministic)
}
func (m *ReceiptLogReleaseBill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptLogReleaseBill.Merge(m, src)
}
func (m *ReceiptLogReleaseBill) XXX_Size() int {
	return xxx_messageInfo_ReceiptLogReleaseBill.Size(m)
}
func (m *ReceiptLogReleaseBill) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptLogReleaseBill.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptLogReleaseBill proto.InternalMessageInfo

func (m *ReceiptLogReleaseBill) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReceiptLogReleaseBill) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

//撤销发行; 如果白条一旦被别人持有，则撤回失败;
type UnReleaseBill struct {
	UnReleaseAddr        string   `protobuf:"bytes,1,opt,name=unReleaseAddr,proto3" json:"unReleaseAddr,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	UnReleaseIndentity   int32    `protobuf:"varint,3,opt,name=unReleaseIndentity,proto3" json:"unReleaseIndentity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnReleaseBill) Reset()         { *m = UnReleaseBill{} }
func (m *UnReleaseBill) String() string { return proto.CompactTextString(m) }
func (*UnReleaseBill) ProtoMessage()    {}
func (*UnReleaseBill) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{48}
}

func (m *UnReleaseBill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnReleaseBill.Unmarshal(m, b)
}
func (m *UnReleaseBill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnReleaseBill.Marshal(b, m, deterministic)
}
func (m *UnReleaseBill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnReleaseBill.Merge(m, src)
}
func (m *UnReleaseBill) XXX_Size() int {
	return xxx_messageInfo_UnReleaseBill.Size(m)
}
func (m *UnReleaseBill) XXX_DiscardUnknown() {
	xxx_messageInfo_UnReleaseBill.DiscardUnknown(m)
}

var xxx_messageInfo_UnReleaseBill proto.InternalMessageInfo

func (m *UnReleaseBill) GetUnReleaseAddr() string {
	if m != nil {
		return m.UnReleaseAddr
	}
	return ""
}

func (m *UnReleaseBill) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UnReleaseBill) GetUnReleaseIndentity() int32 {
	if m != nil {
		return m.UnReleaseIndentity
	}
	return 0
}

type ReceiptLogUnReleaseBill struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State                int32    `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReceiptLogUnReleaseBill) Reset()         { *m = ReceiptLogUnReleaseBill{} }
func (m *ReceiptLogUnReleaseBill) String() string { return proto.CompactTextString(m) }
func (*ReceiptLogUnReleaseBill) ProtoMessage()    {}
func (*ReceiptLogUnReleaseBill) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{49}
}

func (m *ReceiptLogUnReleaseBill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptLogUnReleaseBill.Unmarshal(m, b)
}
func (m *ReceiptLogUnReleaseBill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptLogUnReleaseBill.Marshal(b, m, deterministic)
}
func (m *ReceiptLogUnReleaseBill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptLogUnReleaseBill.Merge(m, src)
}
func (m *ReceiptLogUnReleaseBill) XXX_Size() int {
	return xxx_messageInfo_ReceiptLogUnReleaseBill.Size(m)
}
func (m *ReceiptLogUnReleaseBill) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptLogUnReleaseBill.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptLogUnReleaseBill proto.InternalMessageInfo

func (m *ReceiptLogUnReleaseBill) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReceiptLogUnReleaseBill) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

//******************************SplitBill拆分白条操作****************************************
type SplitBill struct {
	SplitAddr            string   `protobuf:"bytes,1,opt,name=splitAddr,proto3" json:"splitAddr,omitempty"`
	ToAddr               string   `protobuf:"bytes,2,opt,name=toAddr,proto3" json:"toAddr,omitempty"`
	BillID               string   `protobuf:"bytes,3,opt,name=billID,proto3" json:"billID,omitempty"`
	Amount               int64    `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	TokenSymbol          string   `protobuf:"bytes,5,opt,name=tokenSymbol,proto3" json:"tokenSymbol,omitempty"`
	Remark               string   `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
	SplitIndentity       int32    `protobuf:"varint,7,opt,name=splitIndentity,proto3" json:"splitIndentity,omitempty"`
	ToIndentity          int32    `protobuf:"varint,8,opt,name=toIndentity,proto3" json:"toIndentity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SplitBill) Reset()         { *m = SplitBill{} }
func (m *SplitBill) String() string { return proto.CompactTextString(m) }
func (*SplitBill) ProtoMessage()    {}
func (*SplitBill) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{50}
}

func (m *SplitBill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SplitBill.Unmarshal(m, b)
}
func (m *SplitBill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SplitBill.Marshal(b, m, deterministic)
}
func (m *SplitBill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SplitBill.Merge(m, src)
}
func (m *SplitBill) XXX_Size() int {
	return xxx_messageInfo_SplitBill.Size(m)
}
func (m *SplitBill) XXX_DiscardUnknown() {
	xxx_messageInfo_SplitBill.DiscardUnknown(m)
}

var xxx_messageInfo_SplitBill proto.InternalMessageInfo

func (m *SplitBill) GetSplitAddr() string {
	if m != nil {
		return m.SplitAddr
	}
	return ""
}

func (m *SplitBill) GetToAddr() string {
	if m != nil {
		return m.ToAddr
	}
	return ""
}

func (m *SplitBill) GetBillID() string {
	if m != nil {
		return m.BillID
	}
	return ""
}

func (m *SplitBill) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *SplitBill) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *SplitBill) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *SplitBill) GetSplitIndentity() int32 {
	if m != nil {
		return m.SplitIndentity
	}
	return 0
}

func (m *SplitBill) GetToIndentity() int32 {
	if m != nil {
		return m.ToIndentity
	}
	return 0
}

//LocalDB
type SplitBillRecordLocalDB struct {
	SplitAddr            string   `protobuf:"bytes,1,opt,name=splitAddr,proto3" json:"splitAddr,omitempty"`
	ToAddr               string   `protobuf:"bytes,2,opt,name=toAddr,proto3" json:"toAddr,omitempty"`
	BillID               string   `protobuf:"bytes,3,opt,name=billID,proto3" json:"billID,omitempty"`
	Amount               int64    `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	TokenSymbol          string   `protobuf:"bytes,5,opt,name=tokenSymbol,proto3" json:"tokenSymbol,omitempty"`
	Remark               string   `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
	BlockTime            int64    `protobuf:"varint,7,opt,name=blockTime,proto3" json:"blockTime,omitempty"`
	TxHash               string   `protobuf:"bytes,8,opt,name=txHash,proto3" json:"txHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SplitBillRecordLocalDB) Reset()         { *m = SplitBillRecordLocalDB{} }
func (m *SplitBillRecordLocalDB) String() string { return proto.CompactTextString(m) }
func (*SplitBillRecordLocalDB) ProtoMessage()    {}
func (*SplitBillRecordLocalDB) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{51}
}

func (m *SplitBillRecordLocalDB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SplitBillRecordLocalDB.Unmarshal(m, b)
}
func (m *SplitBillRecordLocalDB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SplitBillRecordLocalDB.Marshal(b, m, deterministic)
}
func (m *SplitBillRecordLocalDB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SplitBillRecordLocalDB.Merge(m, src)
}
func (m *SplitBillRecordLocalDB) XXX_Size() int {
	return xxx_messageInfo_SplitBillRecordLocalDB.Size(m)
}
func (m *SplitBillRecordLocalDB) XXX_DiscardUnknown() {
	xxx_messageInfo_SplitBillRecordLocalDB.DiscardUnknown(m)
}

var xxx_messageInfo_SplitBillRecordLocalDB proto.InternalMessageInfo

func (m *SplitBillRecordLocalDB) GetSplitAddr() string {
	if m != nil {
		return m.SplitAddr
	}
	return ""
}

func (m *SplitBillRecordLocalDB) GetToAddr() string {
	if m != nil {
		return m.ToAddr
	}
	return ""
}

func (m *SplitBillRecordLocalDB) GetBillID() string {
	if m != nil {
		return m.BillID
	}
	return ""
}

func (m *SplitBillRecordLocalDB) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *SplitBillRecordLocalDB) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *SplitBillRecordLocalDB) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *SplitBillRecordLocalDB) GetBlockTime() int64 {
	if m != nil {
		return m.BlockTime
	}
	return 0
}

func (m *SplitBillRecordLocalDB) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

//查询融資信息
type ReqSplitBillList struct {
	PrimaryKey           string   `protobuf:"bytes,1,opt,name=primaryKey,proto3" json:"primaryKey,omitempty"`
	EntrieCount          int32    `protobuf:"varint,2,opt,name=entrieCount,proto3" json:"entrieCount,omitempty"`
	SplitAddr            string   `protobuf:"bytes,3,opt,name=splitAddr,proto3" json:"splitAddr,omitempty"`
	ToAddr               string   `protobuf:"bytes,4,opt,name=toAddr,proto3" json:"toAddr,omitempty"`
	TxHash               string   `protobuf:"bytes,5,opt,name=txHash,proto3" json:"txHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqSplitBillList) Reset()         { *m = ReqSplitBillList{} }
func (m *ReqSplitBillList) String() string { return proto.CompactTextString(m) }
func (*ReqSplitBillList) ProtoMessage()    {}
func (*ReqSplitBillList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{52}
}

func (m *ReqSplitBillList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqSplitBillList.Unmarshal(m, b)
}
func (m *ReqSplitBillList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqSplitBillList.Marshal(b, m, deterministic)
}
func (m *ReqSplitBillList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqSplitBillList.Merge(m, src)
}
func (m *ReqSplitBillList) XXX_Size() int {
	return xxx_messageInfo_ReqSplitBillList.Size(m)
}
func (m *ReqSplitBillList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqSplitBillList.DiscardUnknown(m)
}

var xxx_messageInfo_ReqSplitBillList proto.InternalMessageInfo

func (m *ReqSplitBillList) GetPrimaryKey() string {
	if m != nil {
		return m.PrimaryKey
	}
	return ""
}

func (m *ReqSplitBillList) GetEntrieCount() int32 {
	if m != nil {
		return m.EntrieCount
	}
	return 0
}

func (m *ReqSplitBillList) GetSplitAddr() string {
	if m != nil {
		return m.SplitAddr
	}
	return ""
}

func (m *ReqSplitBillList) GetToAddr() string {
	if m != nil {
		return m.ToAddr
	}
	return ""
}

func (m *ReqSplitBillList) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

type ReplySplitBillList struct {
	Items                []*SplitBillRecordLocalDB `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	PrimaryKey           string                    `protobuf:"bytes,2,opt,name=primaryKey,proto3" json:"primaryKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ReplySplitBillList) Reset()         { *m = ReplySplitBillList{} }
func (m *ReplySplitBillList) String() string { return proto.CompactTextString(m) }
func (*ReplySplitBillList) ProtoMessage()    {}
func (*ReplySplitBillList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{53}
}

func (m *ReplySplitBillList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplySplitBillList.Unmarshal(m, b)
}
func (m *ReplySplitBillList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplySplitBillList.Marshal(b, m, deterministic)
}
func (m *ReplySplitBillList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplySplitBillList.Merge(m, src)
}
func (m *ReplySplitBillList) XXX_Size() int {
	return xxx_messageInfo_ReplySplitBillList.Size(m)
}
func (m *ReplySplitBillList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplySplitBillList.DiscardUnknown(m)
}

var xxx_messageInfo_ReplySplitBillList proto.InternalMessageInfo

func (m *ReplySplitBillList) GetItems() []*SplitBillRecordLocalDB {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ReplySplitBillList) GetPrimaryKey() string {
	if m != nil {
		return m.PrimaryKey
	}
	return ""
}

//******************************UnSplitBill撤销拆分白条操作****************************************
type UnSplitBill struct {
	UnSplitAddr          string   `protobuf:"bytes,1,opt,name=unSplitAddr,proto3" json:"unSplitAddr,omitempty"`
	TxHash               string   `protobuf:"bytes,2,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Remark               string   `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	UnSplitIndentity     int32    `protobuf:"varint,4,opt,name=unSplitIndentity,proto3" json:"unSplitIndentity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnSplitBill) Reset()         { *m = UnSplitBill{} }
func (m *UnSplitBill) String() string { return proto.CompactTextString(m) }
func (*UnSplitBill) ProtoMessage()    {}
func (*UnSplitBill) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{54}
}

func (m *UnSplitBill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnSplitBill.Unmarshal(m, b)
}
func (m *UnSplitBill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnSplitBill.Marshal(b, m, deterministic)
}
func (m *UnSplitBill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnSplitBill.Merge(m, src)
}
func (m *UnSplitBill) XXX_Size() int {
	return xxx_messageInfo_UnSplitBill.Size(m)
}
func (m *UnSplitBill) XXX_DiscardUnknown() {
	xxx_messageInfo_UnSplitBill.DiscardUnknown(m)
}

var xxx_messageInfo_UnSplitBill proto.InternalMessageInfo

func (m *UnSplitBill) GetUnSplitAddr() string {
	if m != nil {
		return m.UnSplitAddr
	}
	return ""
}

func (m *UnSplitBill) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *UnSplitBill) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *UnSplitBill) GetUnSplitIndentity() int32 {
	if m != nil {
		return m.UnSplitIndentity
	}
	return 0
}

//******************************ConfirmSplitBill确认收取拆分白条操作****************************************
type ConfirmSplitBill struct {
	ConfirmAddr          string   `protobuf:"bytes,1,opt,name=confirmAddr,proto3" json:"confirmAddr,omitempty"`
	TxHash               string   `protobuf:"bytes,2,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Remark               string   `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	Ack                  bool     `protobuf:"varint,4,opt,name=ack,proto3" json:"ack,omitempty"`
	ConfirmIndentity     int32    `protobuf:"varint,5,opt,name=confirmIndentity,proto3" json:"confirmIndentity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfirmSplitBill) Reset()         { *m = ConfirmSplitBill{} }
func (m *ConfirmSplitBill) String() string { return proto.CompactTextString(m) }
func (*ConfirmSplitBill) ProtoMessage()    {}
func (*ConfirmSplitBill) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{55}
}

func (m *ConfirmSplitBill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfirmSplitBill.Unmarshal(m, b)
}
func (m *ConfirmSplitBill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfirmSplitBill.Marshal(b, m, deterministic)
}
func (m *ConfirmSplitBill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmSplitBill.Merge(m, src)
}
func (m *ConfirmSplitBill) XXX_Size() int {
	return xxx_messageInfo_ConfirmSplitBill.Size(m)
}
func (m *ConfirmSplitBill) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmSplitBill.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmSplitBill proto.InternalMessageInfo

func (m *ConfirmSplitBill) GetConfirmAddr() string {
	if m != nil {
		return m.ConfirmAddr
	}
	return ""
}

func (m *ConfirmSplitBill) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *ConfirmSplitBill) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *ConfirmSplitBill) GetAck() bool {
	if m != nil {
		return m.Ack
	}
	return false
}

func (m *ConfirmSplitBill) GetConfirmIndentity() int32 {
	if m != nil {
		return m.ConfirmIndentity
	}
	return 0
}

//Log
type ReceiptLogConfirmSplitBill struct {
	TransfItems          *AssetTransferTags `protobuf:"bytes,1,opt,name=transfItems,proto3" json:"transfItems,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ReceiptLogConfirmSplitBill) Reset()         { *m = ReceiptLogConfirmSplitBill{} }
func (m *ReceiptLogConfirmSplitBill) String() string { return proto.CompactTextString(m) }
func (*ReceiptLogConfirmSplitBill) ProtoMessage()    {}
func (*ReceiptLogConfirmSplitBill) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{56}
}

func (m *ReceiptLogConfirmSplitBill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptLogConfirmSplitBill.Unmarshal(m, b)
}
func (m *ReceiptLogConfirmSplitBill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptLogConfirmSplitBill.Marshal(b, m, deterministic)
}
func (m *ReceiptLogConfirmSplitBill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptLogConfirmSplitBill.Merge(m, src)
}
func (m *ReceiptLogConfirmSplitBill) XXX_Size() int {
	return xxx_messageInfo_ReceiptLogConfirmSplitBill.Size(m)
}
func (m *ReceiptLogConfirmSplitBill) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptLogConfirmSplitBill.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptLogConfirmSplitBill proto.InternalMessageInfo

func (m *ReceiptLogConfirmSplitBill) GetTransfItems() *AssetTransferTags {
	if m != nil {
		return m.TransfItems
	}
	return nil
}

//申请融资
type ApplyForFinancing struct {
	ApplyAddr            string   `protobuf:"bytes,1,opt,name=applyAddr,proto3" json:"applyAddr,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Amount               int64    `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	DpdtSymbol           string   `protobuf:"bytes,4,opt,name=dpdtSymbol,proto3" json:"dpdtSymbol,omitempty"`
	Remark               string   `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
	ApplyIndentity       int32    `protobuf:"varint,6,opt,name=applyIndentity,proto3" json:"applyIndentity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplyForFinancing) Reset()         { *m = ApplyForFinancing{} }
func (m *ApplyForFinancing) String() string { return proto.CompactTextString(m) }
func (*ApplyForFinancing) ProtoMessage()    {}
func (*ApplyForFinancing) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{57}
}

func (m *ApplyForFinancing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyForFinancing.Unmarshal(m, b)
}
func (m *ApplyForFinancing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyForFinancing.Marshal(b, m, deterministic)
}
func (m *ApplyForFinancing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyForFinancing.Merge(m, src)
}
func (m *ApplyForFinancing) XXX_Size() int {
	return xxx_messageInfo_ApplyForFinancing.Size(m)
}
func (m *ApplyForFinancing) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyForFinancing.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyForFinancing proto.InternalMessageInfo

func (m *ApplyForFinancing) GetApplyAddr() string {
	if m != nil {
		return m.ApplyAddr
	}
	return ""
}

func (m *ApplyForFinancing) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ApplyForFinancing) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ApplyForFinancing) GetDpdtSymbol() string {
	if m != nil {
		return m.DpdtSymbol
	}
	return ""
}

func (m *ApplyForFinancing) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *ApplyForFinancing) GetApplyIndentity() int32 {
	if m != nil {
		return m.ApplyIndentity
	}
	return 0
}

//申请融资列表(ApplyFnsItem) --table: local DB
type ApplyFinancingItemLocalDB struct {
	ApplyAddr            string   `protobuf:"bytes,1,opt,name=ApplyAddr,proto3" json:"ApplyAddr,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Amount               int64    `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	DpdtSymbol           string   `protobuf:"bytes,4,opt,name=dpdtSymbol,proto3" json:"dpdtSymbol,omitempty"`
	TxHash               string   `protobuf:"bytes,5,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Timestamp            int64    `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	CreditorAddr         string   `protobuf:"bytes,7,opt,name=CreditorAddr,proto3" json:"CreditorAddr,omitempty"`
	Remark               string   `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplyFinancingItemLocalDB) Reset()         { *m = ApplyFinancingItemLocalDB{} }
func (m *ApplyFinancingItemLocalDB) String() string { return proto.CompactTextString(m) }
func (*ApplyFinancingItemLocalDB) ProtoMessage()    {}
func (*ApplyFinancingItemLocalDB) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{58}
}

func (m *ApplyFinancingItemLocalDB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyFinancingItemLocalDB.Unmarshal(m, b)
}
func (m *ApplyFinancingItemLocalDB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyFinancingItemLocalDB.Marshal(b, m, deterministic)
}
func (m *ApplyFinancingItemLocalDB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyFinancingItemLocalDB.Merge(m, src)
}
func (m *ApplyFinancingItemLocalDB) XXX_Size() int {
	return xxx_messageInfo_ApplyFinancingItemLocalDB.Size(m)
}
func (m *ApplyFinancingItemLocalDB) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyFinancingItemLocalDB.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyFinancingItemLocalDB proto.InternalMessageInfo

func (m *ApplyFinancingItemLocalDB) GetApplyAddr() string {
	if m != nil {
		return m.ApplyAddr
	}
	return ""
}

func (m *ApplyFinancingItemLocalDB) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ApplyFinancingItemLocalDB) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ApplyFinancingItemLocalDB) GetDpdtSymbol() string {
	if m != nil {
		return m.DpdtSymbol
	}
	return ""
}

func (m *ApplyFinancingItemLocalDB) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *ApplyFinancingItemLocalDB) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ApplyFinancingItemLocalDB) GetCreditorAddr() string {
	if m != nil {
		return m.CreditorAddr
	}
	return ""
}

func (m *ApplyFinancingItemLocalDB) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

//查询融資信息
type ReqApplyList struct {
	PrimaryKey           string   `protobuf:"bytes,1,opt,name=primaryKey,proto3" json:"primaryKey,omitempty"`
	EntrieCount          int32    `protobuf:"varint,2,opt,name=entrieCount,proto3" json:"entrieCount,omitempty"`
	CreditorAddr         string   `protobuf:"bytes,3,opt,name=creditorAddr,proto3" json:"creditorAddr,omitempty"`
	ApplyAddr            string   `protobuf:"bytes,4,opt,name=applyAddr,proto3" json:"applyAddr,omitempty"`
	DpdtSymbol           string   `protobuf:"bytes,5,opt,name=dpdtSymbol,proto3" json:"dpdtSymbol,omitempty"`
	BillID               string   `protobuf:"bytes,6,opt,name=BillID,proto3" json:"BillID,omitempty"`
	TxHash               string   `protobuf:"bytes,7,opt,name=txHash,proto3" json:"txHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqApplyList) Reset()         { *m = ReqApplyList{} }
func (m *ReqApplyList) String() string { return proto.CompactTextString(m) }
func (*ReqApplyList) ProtoMessage()    {}
func (*ReqApplyList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{59}
}

func (m *ReqApplyList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqApplyList.Unmarshal(m, b)
}
func (m *ReqApplyList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqApplyList.Marshal(b, m, deterministic)
}
func (m *ReqApplyList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqApplyList.Merge(m, src)
}
func (m *ReqApplyList) XXX_Size() int {
	return xxx_messageInfo_ReqApplyList.Size(m)
}
func (m *ReqApplyList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqApplyList.DiscardUnknown(m)
}

var xxx_messageInfo_ReqApplyList proto.InternalMessageInfo

func (m *ReqApplyList) GetPrimaryKey() string {
	if m != nil {
		return m.PrimaryKey
	}
	return ""
}

func (m *ReqApplyList) GetEntrieCount() int32 {
	if m != nil {
		return m.EntrieCount
	}
	return 0
}

func (m *ReqApplyList) GetCreditorAddr() string {
	if m != nil {
		return m.CreditorAddr
	}
	return ""
}

func (m *ReqApplyList) GetApplyAddr() string {
	if m != nil {
		return m.ApplyAddr
	}
	return ""
}

func (m *ReqApplyList) GetDpdtSymbol() string {
	if m != nil {
		return m.DpdtSymbol
	}
	return ""
}

func (m *ReqApplyList) GetBillID() string {
	if m != nil {
		return m.BillID
	}
	return ""
}

func (m *ReqApplyList) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

type ReplyApplyList struct {
	Items                []*ApplyFinancingItemLocalDB `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	PrimaryKey           string                       `protobuf:"bytes,2,opt,name=primaryKey,proto3" json:"primaryKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ReplyApplyList) Reset()         { *m = ReplyApplyList{} }
func (m *ReplyApplyList) String() string { return proto.CompactTextString(m) }
func (*ReplyApplyList) ProtoMessage()    {}
func (*ReplyApplyList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{60}
}

func (m *ReplyApplyList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyApplyList.Unmarshal(m, b)
}
func (m *ReplyApplyList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyApplyList.Marshal(b, m, deterministic)
}
func (m *ReplyApplyList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyApplyList.Merge(m, src)
}
func (m *ReplyApplyList) XXX_Size() int {
	return xxx_messageInfo_ReplyApplyList.Size(m)
}
func (m *ReplyApplyList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyApplyList.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyApplyList proto.InternalMessageInfo

func (m *ReplyApplyList) GetItems() []*ApplyFinancingItemLocalDB {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ReplyApplyList) GetPrimaryKey() string {
	if m != nil {
		return m.PrimaryKey
	}
	return ""
}

//撤销融资申请
type UnApplyForFinancing struct {
	UnApplyAddr          string   `protobuf:"bytes,1,opt,name=unApplyAddr,proto3" json:"unApplyAddr,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	TxHash               string   `protobuf:"bytes,3,opt,name=txHash,proto3" json:"txHash,omitempty"`
	UnApplyIndentity     int32    `protobuf:"varint,4,opt,name=unApplyIndentity,proto3" json:"unApplyIndentity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnApplyForFinancing) Reset()         { *m = UnApplyForFinancing{} }
func (m *UnApplyForFinancing) String() string { return proto.CompactTextString(m) }
func (*UnApplyForFinancing) ProtoMessage()    {}
func (*UnApplyForFinancing) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{61}
}

func (m *UnApplyForFinancing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnApplyForFinancing.Unmarshal(m, b)
}
func (m *UnApplyForFinancing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnApplyForFinancing.Marshal(b, m, deterministic)
}
func (m *UnApplyForFinancing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnApplyForFinancing.Merge(m, src)
}
func (m *UnApplyForFinancing) XXX_Size() int {
	return xxx_messageInfo_UnApplyForFinancing.Size(m)
}
func (m *UnApplyForFinancing) XXX_DiscardUnknown() {
	xxx_messageInfo_UnApplyForFinancing.DiscardUnknown(m)
}

var xxx_messageInfo_UnApplyForFinancing proto.InternalMessageInfo

func (m *UnApplyForFinancing) GetUnApplyAddr() string {
	if m != nil {
		return m.UnApplyAddr
	}
	return ""
}

func (m *UnApplyForFinancing) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UnApplyForFinancing) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *UnApplyForFinancing) GetUnApplyIndentity() int32 {
	if m != nil {
		return m.UnApplyIndentity
	}
	return 0
}

//确认融资
type ConfirmFinancing struct {
	ConfirmAddr          string   `protobuf:"bytes,1,opt,name=confirmAddr,proto3" json:"confirmAddr,omitempty"`
	Ack                  bool     `protobuf:"varint,2,opt,name=ack,proto3" json:"ack,omitempty"`
	TxHash               string   `protobuf:"bytes,3,opt,name=txHash,proto3" json:"txHash,omitempty"`
	ConfirmIndentity     int32    `protobuf:"varint,4,opt,name=confirmIndentity,proto3" json:"confirmIndentity,omitempty"`
	Remark               string   `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfirmFinancing) Reset()         { *m = ConfirmFinancing{} }
func (m *ConfirmFinancing) String() string { return proto.CompactTextString(m) }
func (*ConfirmFinancing) ProtoMessage()    {}
func (*ConfirmFinancing) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{62}
}

func (m *ConfirmFinancing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfirmFinancing.Unmarshal(m, b)
}
func (m *ConfirmFinancing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfirmFinancing.Marshal(b, m, deterministic)
}
func (m *ConfirmFinancing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmFinancing.Merge(m, src)
}
func (m *ConfirmFinancing) XXX_Size() int {
	return xxx_messageInfo_ConfirmFinancing.Size(m)
}
func (m *ConfirmFinancing) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmFinancing.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmFinancing proto.InternalMessageInfo

func (m *ConfirmFinancing) GetConfirmAddr() string {
	if m != nil {
		return m.ConfirmAddr
	}
	return ""
}

func (m *ConfirmFinancing) GetAck() bool {
	if m != nil {
		return m.Ack
	}
	return false
}

func (m *ConfirmFinancing) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *ConfirmFinancing) GetConfirmIndentity() int32 {
	if m != nil {
		return m.ConfirmIndentity
	}
	return 0
}

func (m *ConfirmFinancing) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

//Log
type ReceiptLogConfirmFinancing struct {
	TransfItems          *AssetTransferTags `protobuf:"bytes,1,opt,name=transfItems,proto3" json:"transfItems,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ReceiptLogConfirmFinancing) Reset()         { *m = ReceiptLogConfirmFinancing{} }
func (m *ReceiptLogConfirmFinancing) String() string { return proto.CompactTextString(m) }
func (*ReceiptLogConfirmFinancing) ProtoMessage()    {}
func (*ReceiptLogConfirmFinancing) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{63}
}

func (m *ReceiptLogConfirmFinancing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptLogConfirmFinancing.Unmarshal(m, b)
}
func (m *ReceiptLogConfirmFinancing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptLogConfirmFinancing.Marshal(b, m, deterministic)
}
func (m *ReceiptLogConfirmFinancing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptLogConfirmFinancing.Merge(m, src)
}
func (m *ReceiptLogConfirmFinancing) XXX_Size() int {
	return xxx_messageInfo_ReceiptLogConfirmFinancing.Size(m)
}
func (m *ReceiptLogConfirmFinancing) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptLogConfirmFinancing.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptLogConfirmFinancing proto.InternalMessageInfo

func (m *ReceiptLogConfirmFinancing) GetTransfItems() *AssetTransferTags {
	if m != nil {
		return m.TransfItems
	}
	return nil
}

//白条持有人兑现;
type CashBill struct {
	CashAddr             string   `protobuf:"bytes,1,opt,name=cashAddr,proto3" json:"cashAddr,omitempty"`
	TokenSymbol          string   `protobuf:"bytes,2,opt,name=tokenSymbol,proto3" json:"tokenSymbol,omitempty"`
	Amount               int64    `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CashBill) Reset()         { *m = CashBill{} }
func (m *CashBill) String() string { return proto.CompactTextString(m) }
func (*CashBill) ProtoMessage()    {}
func (*CashBill) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{64}
}

func (m *CashBill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CashBill.Unmarshal(m, b)
}
func (m *CashBill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CashBill.Marshal(b, m, deterministic)
}
func (m *CashBill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CashBill.Merge(m, src)
}
func (m *CashBill) XXX_Size() int {
	return xxx_messageInfo_CashBill.Size(m)
}
func (m *CashBill) XXX_DiscardUnknown() {
	xxx_messageInfo_CashBill.DiscardUnknown(m)
}

var xxx_messageInfo_CashBill proto.InternalMessageInfo

func (m *CashBill) GetCashAddr() string {
	if m != nil {
		return m.CashAddr
	}
	return ""
}

func (m *CashBill) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *CashBill) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

//Log
type ReceiptLogCashBill struct {
	Record               *CashRecordLocalDB `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
	TransfItems          *AssetTransferTags `protobuf:"bytes,2,opt,name=transfItems,proto3" json:"transfItems,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ReceiptLogCashBill) Reset()         { *m = ReceiptLogCashBill{} }
func (m *ReceiptLogCashBill) String() string { return proto.CompactTextString(m) }
func (*ReceiptLogCashBill) ProtoMessage()    {}
func (*ReceiptLogCashBill) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{65}
}

func (m *ReceiptLogCashBill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptLogCashBill.Unmarshal(m, b)
}
func (m *ReceiptLogCashBill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptLogCashBill.Marshal(b, m, deterministic)
}
func (m *ReceiptLogCashBill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptLogCashBill.Merge(m, src)
}
func (m *ReceiptLogCashBill) XXX_Size() int {
	return xxx_messageInfo_ReceiptLogCashBill.Size(m)
}
func (m *ReceiptLogCashBill) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptLogCashBill.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptLogCashBill proto.InternalMessageInfo

func (m *ReceiptLogCashBill) GetRecord() *CashRecordLocalDB {
	if m != nil {
		return m.Record
	}
	return nil
}

func (m *ReceiptLogCashBill) GetTransfItems() *AssetTransferTags {
	if m != nil {
		return m.TransfItems
	}
	return nil
}

//白条持有人兑现记录 --table: local DB
type CashRecordLocalDB struct {
	CashAddr             string   `protobuf:"bytes,1,opt,name=cashAddr,proto3" json:"cashAddr,omitempty"`
	BillId               string   `protobuf:"bytes,2,opt,name=BillId,proto3" json:"BillId,omitempty"`
	TxHash               string   `protobuf:"bytes,3,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Amount               int64    `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Value                int64    `protobuf:"varint,5,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp            int64    `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	BillStatus           int32    `protobuf:"varint,7,opt,name=BillStatus,proto3" json:"BillStatus,omitempty"`
	BillType             int32    `protobuf:"varint,8,opt,name=BillType,proto3" json:"BillType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CashRecordLocalDB) Reset()         { *m = CashRecordLocalDB{} }
func (m *CashRecordLocalDB) String() string { return proto.CompactTextString(m) }
func (*CashRecordLocalDB) ProtoMessage()    {}
func (*CashRecordLocalDB) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{66}
}

func (m *CashRecordLocalDB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CashRecordLocalDB.Unmarshal(m, b)
}
func (m *CashRecordLocalDB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CashRecordLocalDB.Marshal(b, m, deterministic)
}
func (m *CashRecordLocalDB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CashRecordLocalDB.Merge(m, src)
}
func (m *CashRecordLocalDB) XXX_Size() int {
	return xxx_messageInfo_CashRecordLocalDB.Size(m)
}
func (m *CashRecordLocalDB) XXX_DiscardUnknown() {
	xxx_messageInfo_CashRecordLocalDB.DiscardUnknown(m)
}

var xxx_messageInfo_CashRecordLocalDB proto.InternalMessageInfo

func (m *CashRecordLocalDB) GetCashAddr() string {
	if m != nil {
		return m.CashAddr
	}
	return ""
}

func (m *CashRecordLocalDB) GetBillId() string {
	if m != nil {
		return m.BillId
	}
	return ""
}

func (m *CashRecordLocalDB) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *CashRecordLocalDB) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *CashRecordLocalDB) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *CashRecordLocalDB) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *CashRecordLocalDB) GetBillStatus() int32 {
	if m != nil {
		return m.BillStatus
	}
	return 0
}

func (m *CashRecordLocalDB) GetBillType() int32 {
	if m != nil {
		return m.BillType
	}
	return 0
}

//Token兑现列表 --table: local DB
type CashList struct {
	BillId               string   `protobuf:"bytes,1,opt,name=BillId,proto3" json:"BillId,omitempty"`
	Amount               int64    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	TxHash               string   `protobuf:"bytes,3,opt,name=txHash,proto3" json:"txHash,omitempty"`
	TokenOwner           string   `protobuf:"bytes,4,opt,name=tokenOwner,proto3" json:"tokenOwner,omitempty"`
	Timestamp            int64    `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CashList) Reset()         { *m = CashList{} }
func (m *CashList) String() string { return proto.CompactTextString(m) }
func (*CashList) ProtoMessage()    {}
func (*CashList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{67}
}

func (m *CashList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CashList.Unmarshal(m, b)
}
func (m *CashList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CashList.Marshal(b, m, deterministic)
}
func (m *CashList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CashList.Merge(m, src)
}
func (m *CashList) XXX_Size() int {
	return xxx_messageInfo_CashList.Size(m)
}
func (m *CashList) XXX_DiscardUnknown() {
	xxx_messageInfo_CashList.DiscardUnknown(m)
}

var xxx_messageInfo_CashList proto.InternalMessageInfo

func (m *CashList) GetBillId() string {
	if m != nil {
		return m.BillId
	}
	return ""
}

func (m *CashList) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *CashList) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *CashList) GetTokenOwner() string {
	if m != nil {
		return m.TokenOwner
	}
	return ""
}

func (m *CashList) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

//查询
type ReqCashList struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PrimaryKey           string   `protobuf:"bytes,2,opt,name=primaryKey,proto3" json:"primaryKey,omitempty"`
	EntrieCount          int32    `protobuf:"varint,3,opt,name=entrieCount,proto3" json:"entrieCount,omitempty"`
	TokenOwner           string   `protobuf:"bytes,4,opt,name=tokenOwner,proto3" json:"tokenOwner,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqCashList) Reset()         { *m = ReqCashList{} }
func (m *ReqCashList) String() string { return proto.CompactTextString(m) }
func (*ReqCashList) ProtoMessage()    {}
func (*ReqCashList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{68}
}

func (m *ReqCashList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqCashList.Unmarshal(m, b)
}
func (m *ReqCashList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqCashList.Marshal(b, m, deterministic)
}
func (m *ReqCashList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqCashList.Merge(m, src)
}
func (m *ReqCashList) XXX_Size() int {
	return xxx_messageInfo_ReqCashList.Size(m)
}
func (m *ReqCashList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqCashList.DiscardUnknown(m)
}

var xxx_messageInfo_ReqCashList proto.InternalMessageInfo

func (m *ReqCashList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReqCashList) GetPrimaryKey() string {
	if m != nil {
		return m.PrimaryKey
	}
	return ""
}

func (m *ReqCashList) GetEntrieCount() int32 {
	if m != nil {
		return m.EntrieCount
	}
	return 0
}

func (m *ReqCashList) GetTokenOwner() string {
	if m != nil {
		return m.TokenOwner
	}
	return ""
}

type ReplyCashList struct {
	CashItems            []*CashList `protobuf:"bytes,1,rep,name=cashItems,proto3" json:"cashItems,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReplyCashList) Reset()         { *m = ReplyCashList{} }
func (m *ReplyCashList) String() string { return proto.CompactTextString(m) }
func (*ReplyCashList) ProtoMessage()    {}
func (*ReplyCashList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{69}
}

func (m *ReplyCashList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyCashList.Unmarshal(m, b)
}
func (m *ReplyCashList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyCashList.Marshal(b, m, deterministic)
}
func (m *ReplyCashList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyCashList.Merge(m, src)
}
func (m *ReplyCashList) XXX_Size() int {
	return xxx_messageInfo_ReplyCashList.Size(m)
}
func (m *ReplyCashList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyCashList.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyCashList proto.InternalMessageInfo

func (m *ReplyCashList) GetCashItems() []*CashList {
	if m != nil {
		return m.CashItems
	}
	return nil
}

//查询指定白条的兑现记录
type ReqCashRecord struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqCashRecord) Reset()         { *m = ReqCashRecord{} }
func (m *ReqCashRecord) String() string { return proto.CompactTextString(m) }
func (*ReqCashRecord) ProtoMessage()    {}
func (*ReqCashRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{70}
}

func (m *ReqCashRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqCashRecord.Unmarshal(m, b)
}
func (m *ReqCashRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqCashRecord.Marshal(b, m, deterministic)
}
func (m *ReqCashRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqCashRecord.Merge(m, src)
}
func (m *ReqCashRecord) XXX_Size() int {
	return xxx_messageInfo_ReqCashRecord.Size(m)
}
func (m *ReqCashRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqCashRecord.DiscardUnknown(m)
}

var xxx_messageInfo_ReqCashRecord proto.InternalMessageInfo

func (m *ReqCashRecord) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReplyCashRecord struct {
	Items                []*CashRecordLocalDB `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ReplyCashRecord) Reset()         { *m = ReplyCashRecord{} }
func (m *ReplyCashRecord) String() string { return proto.CompactTextString(m) }
func (*ReplyCashRecord) ProtoMessage()    {}
func (*ReplyCashRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{71}
}

func (m *ReplyCashRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyCashRecord.Unmarshal(m, b)
}
func (m *ReplyCashRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyCashRecord.Marshal(b, m, deterministic)
}
func (m *ReplyCashRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyCashRecord.Merge(m, src)
}
func (m *ReplyCashRecord) XXX_Size() int {
	return xxx_messageInfo_ReplyCashRecord.Size(m)
}
func (m *ReplyCashRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyCashRecord.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyCashRecord proto.InternalMessageInfo

func (m *ReplyCashRecord) GetItems() []*CashRecordLocalDB {
	if m != nil {
		return m.Items
	}
	return nil
}

//还款;
type RepayBill struct {
	RepayAddr            string   `protobuf:"bytes,1,opt,name=repayAddr,proto3" json:"repayAddr,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepayBill) Reset()         { *m = RepayBill{} }
func (m *RepayBill) String() string { return proto.CompactTextString(m) }
func (*RepayBill) ProtoMessage()    {}
func (*RepayBill) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{72}
}

func (m *RepayBill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepayBill.Unmarshal(m, b)
}
func (m *RepayBill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepayBill.Marshal(b, m, deterministic)
}
func (m *RepayBill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepayBill.Merge(m, src)
}
func (m *RepayBill) XXX_Size() int {
	return xxx_messageInfo_RepayBill.Size(m)
}
func (m *RepayBill) XXX_DiscardUnknown() {
	xxx_messageInfo_RepayBill.DiscardUnknown(m)
}

var xxx_messageInfo_RepayBill proto.InternalMessageInfo

func (m *RepayBill) GetRepayAddr() string {
	if m != nil {
		return m.RepayAddr
	}
	return ""
}

func (m *RepayBill) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

//Log
type ReceiptLogRepayBill struct {
	Record               *RepayRecordLocalDB `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
	TransfItems          *AssetTransferTags  `protobuf:"bytes,2,opt,name=transfItems,proto3" json:"transfItems,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ReceiptLogRepayBill) Reset()         { *m = ReceiptLogRepayBill{} }
func (m *ReceiptLogRepayBill) String() string { return proto.CompactTextString(m) }
func (*ReceiptLogRepayBill) ProtoMessage()    {}
func (*ReceiptLogRepayBill) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{73}
}

func (m *ReceiptLogRepayBill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptLogRepayBill.Unmarshal(m, b)
}
func (m *ReceiptLogRepayBill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptLogRepayBill.Marshal(b, m, deterministic)
}
func (m *ReceiptLogRepayBill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptLogRepayBill.Merge(m, src)
}
func (m *ReceiptLogRepayBill) XXX_Size() int {
	return xxx_messageInfo_ReceiptLogRepayBill.Size(m)
}
func (m *ReceiptLogRepayBill) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptLogRepayBill.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptLogRepayBill proto.InternalMessageInfo

func (m *ReceiptLogRepayBill) GetRecord() *RepayRecordLocalDB {
	if m != nil {
		return m.Record
	}
	return nil
}

func (m *ReceiptLogRepayBill) GetTransfItems() *AssetTransferTags {
	if m != nil {
		return m.TransfItems
	}
	return nil
}

//还款记录,以BillID作为Key --table: local DB
type RepayRecordLocalDB struct {
	RepayAddr            string   `protobuf:"bytes,1,opt,name=repayAddr,proto3" json:"repayAddr,omitempty"`
	BillId               string   `protobuf:"bytes,2,opt,name=BillId,proto3" json:"BillId,omitempty"`
	TxHash               string   `protobuf:"bytes,3,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Value                int64    `protobuf:"varint,4,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp            int64    `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IsArrearsCleared     bool     `protobuf:"varint,6,opt,name=isArrearsCleared,proto3" json:"isArrearsCleared,omitempty"`
	BillCreator          string   `protobuf:"bytes,7,opt,name=BillCreator,proto3" json:"BillCreator,omitempty"`
	BillType             int32    `protobuf:"varint,8,opt,name=BillType,proto3" json:"BillType,omitempty"`
	CashHashes           []string `protobuf:"bytes,9,rep,name=cashHashes,proto3" json:"cashHashes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepayRecordLocalDB) Reset()         { *m = RepayRecordLocalDB{} }
func (m *RepayRecordLocalDB) String() string { return proto.CompactTextString(m) }
func (*RepayRecordLocalDB) ProtoMessage()    {}
func (*RepayRecordLocalDB) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{74}
}

func (m *RepayRecordLocalDB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepayRecordLocalDB.Unmarshal(m, b)
}
func (m *RepayRecordLocalDB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepayRecordLocalDB.Marshal(b, m, deterministic)
}
func (m *RepayRecordLocalDB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepayRecordLocalDB.Merge(m, src)
}
func (m *RepayRecordLocalDB) XXX_Size() int {
	return xxx_messageInfo_RepayRecordLocalDB.Size(m)
}
func (m *RepayRecordLocalDB) XXX_DiscardUnknown() {
	xxx_messageInfo_RepayRecordLocalDB.DiscardUnknown(m)
}

var xxx_messageInfo_RepayRecordLocalDB proto.InternalMessageInfo

func (m *RepayRecordLocalDB) GetRepayAddr() string {
	if m != nil {
		return m.RepayAddr
	}
	return ""
}

func (m *RepayRecordLocalDB) GetBillId() string {
	if m != nil {
		return m.BillId
	}
	return ""
}

func (m *RepayRecordLocalDB) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *RepayRecordLocalDB) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *RepayRecordLocalDB) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *RepayRecordLocalDB) GetIsArrearsCleared() bool {
	if m != nil {
		return m.IsArrearsCleared
	}
	return false
}

func (m *RepayRecordLocalDB) GetBillCreator() string {
	if m != nil {
		return m.BillCreator
	}
	return ""
}

func (m *RepayRecordLocalDB) GetBillType() int32 {
	if m != nil {
		return m.BillType
	}
	return 0
}

func (m *RepayRecordLocalDB) GetCashHashes() []string {
	if m != nil {
		return m.CashHashes
	}
	return nil
}

//查询指定白条的还款记录
type ReqRepayRecord struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqRepayRecord) Reset()         { *m = ReqRepayRecord{} }
func (m *ReqRepayRecord) String() string { return proto.CompactTextString(m) }
func (*ReqRepayRecord) ProtoMessage()    {}
func (*ReqRepayRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{75}
}

func (m *ReqRepayRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqRepayRecord.Unmarshal(m, b)
}
func (m *ReqRepayRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqRepayRecord.Marshal(b, m, deterministic)
}
func (m *ReqRepayRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqRepayRecord.Merge(m, src)
}
func (m *ReqRepayRecord) XXX_Size() int {
	return xxx_messageInfo_ReqRepayRecord.Size(m)
}
func (m *ReqRepayRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqRepayRecord.DiscardUnknown(m)
}

var xxx_messageInfo_ReqRepayRecord proto.InternalMessageInfo

func (m *ReqRepayRecord) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReplyRepayRecord struct {
	Items                []*RepayRecordLocalDB `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ReplyRepayRecord) Reset()         { *m = ReplyRepayRecord{} }
func (m *ReplyRepayRecord) String() string { return proto.CompactTextString(m) }
func (*ReplyRepayRecord) ProtoMessage()    {}
func (*ReplyRepayRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{76}
}

func (m *ReplyRepayRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyRepayRecord.Unmarshal(m, b)
}
func (m *ReplyRepayRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyRepayRecord.Marshal(b, m, deterministic)
}
func (m *ReplyRepayRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyRepayRecord.Merge(m, src)
}
func (m *ReplyRepayRecord) XXX_Size() int {
	return xxx_messageInfo_ReplyRepayRecord.Size(m)
}
func (m *ReplyRepayRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyRepayRecord.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyRepayRecord proto.InternalMessageInfo

func (m *ReplyRepayRecord) GetItems() []*RepayRecordLocalDB {
	if m != nil {
		return m.Items
	}
	return nil
}

//*****************************查询token当前的价值********************************************
type ReqTokenValue struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount               int64    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqTokenValue) Reset()         { *m = ReqTokenValue{} }
func (m *ReqTokenValue) String() string { return proto.CompactTextString(m) }
func (*ReqTokenValue) ProtoMessage()    {}
func (*ReqTokenValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{77}
}

func (m *ReqTokenValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqTokenValue.Unmarshal(m, b)
}
func (m *ReqTokenValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqTokenValue.Marshal(b, m, deterministic)
}
func (m *ReqTokenValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqTokenValue.Merge(m, src)
}
func (m *ReqTokenValue) XXX_Size() int {
	return xxx_messageInfo_ReqTokenValue.Size(m)
}
func (m *ReqTokenValue) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqTokenValue.DiscardUnknown(m)
}

var xxx_messageInfo_ReqTokenValue proto.InternalMessageInfo

func (m *ReqTokenValue) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReqTokenValue) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type ReplyTokenValue struct {
	Value                int64    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplyTokenValue) Reset()         { *m = ReplyTokenValue{} }
func (m *ReplyTokenValue) String() string { return proto.CompactTextString(m) }
func (*ReplyTokenValue) ProtoMessage()    {}
func (*ReplyTokenValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{78}
}

func (m *ReplyTokenValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyTokenValue.Unmarshal(m, b)
}
func (m *ReplyTokenValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyTokenValue.Marshal(b, m, deterministic)
}
func (m *ReplyTokenValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyTokenValue.Merge(m, src)
}
func (m *ReplyTokenValue) XXX_Size() int {
	return xxx_messageInfo_ReplyTokenValue.Size(m)
}
func (m *ReplyTokenValue) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyTokenValue.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyTokenValue proto.InternalMessageInfo

func (m *ReplyTokenValue) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

//报告失信行为
type ReportBroken struct {
	ReportAddr           string   `protobuf:"bytes,1,opt,name=reportAddr,proto3" json:"reportAddr,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportBroken) Reset()         { *m = ReportBroken{} }
func (m *ReportBroken) String() string { return proto.CompactTextString(m) }
func (*ReportBroken) ProtoMessage()    {}
func (*ReportBroken) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{79}
}

func (m *ReportBroken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportBroken.Unmarshal(m, b)
}
func (m *ReportBroken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportBroken.Marshal(b, m, deterministic)
}
func (m *ReportBroken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportBroken.Merge(m, src)
}
func (m *ReportBroken) XXX_Size() int {
	return xxx_messageInfo_ReportBroken.Size(m)
}
func (m *ReportBroken) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportBroken.DiscardUnknown(m)
}

var xxx_messageInfo_ReportBroken proto.InternalMessageInfo

func (m *ReportBroken) GetReportAddr() string {
	if m != nil {
		return m.ReportAddr
	}
	return ""
}

func (m *ReportBroken) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

//StateDB
type BrokenRecordStateDB struct {
	BorrowerAddr         string   `protobuf:"bytes,1,opt,name=borrowerAddr,proto3" json:"borrowerAddr,omitempty"`
	Phone                string   `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Identifier           string   `protobuf:"bytes,3,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	BillId               string   `protobuf:"bytes,5,opt,name=BillId,proto3" json:"BillId,omitempty"`
	TxHash               string   `protobuf:"bytes,6,opt,name=txHash,proto3" json:"txHash,omitempty"`
	OverdueDays          int64    `protobuf:"varint,7,opt,name=overdueDays,proto3" json:"overdueDays,omitempty"`
	OverdueValue         int64    `protobuf:"varint,8,opt,name=overdueValue,proto3" json:"overdueValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BrokenRecordStateDB) Reset()         { *m = BrokenRecordStateDB{} }
func (m *BrokenRecordStateDB) String() string { return proto.CompactTextString(m) }
func (*BrokenRecordStateDB) ProtoMessage()    {}
func (*BrokenRecordStateDB) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{80}
}

func (m *BrokenRecordStateDB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrokenRecordStateDB.Unmarshal(m, b)
}
func (m *BrokenRecordStateDB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrokenRecordStateDB.Marshal(b, m, deterministic)
}
func (m *BrokenRecordStateDB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrokenRecordStateDB.Merge(m, src)
}
func (m *BrokenRecordStateDB) XXX_Size() int {
	return xxx_messageInfo_BrokenRecordStateDB.Size(m)
}
func (m *BrokenRecordStateDB) XXX_DiscardUnknown() {
	xxx_messageInfo_BrokenRecordStateDB.DiscardUnknown(m)
}

var xxx_messageInfo_BrokenRecordStateDB proto.InternalMessageInfo

func (m *BrokenRecordStateDB) GetBorrowerAddr() string {
	if m != nil {
		return m.BorrowerAddr
	}
	return ""
}

func (m *BrokenRecordStateDB) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *BrokenRecordStateDB) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *BrokenRecordStateDB) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BrokenRecordStateDB) GetBillId() string {
	if m != nil {
		return m.BillId
	}
	return ""
}

func (m *BrokenRecordStateDB) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *BrokenRecordStateDB) GetOverdueDays() int64 {
	if m != nil {
		return m.OverdueDays
	}
	return 0
}

func (m *BrokenRecordStateDB) GetOverdueValue() int64 {
	if m != nil {
		return m.OverdueValue
	}
	return 0
}

//查询失信列表
type ReqBrokenList struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	PrimaryKey           string   `protobuf:"bytes,2,opt,name=primaryKey,proto3" json:"primaryKey,omitempty"`
	EntrieCount          int32    `protobuf:"varint,3,opt,name=entrieCount,proto3" json:"entrieCount,omitempty"`
	Phone                string   `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	From                 string   `protobuf:"bytes,5,opt,name=from,proto3" json:"from,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqBrokenList) Reset()         { *m = ReqBrokenList{} }
func (m *ReqBrokenList) String() string { return proto.CompactTextString(m) }
func (*ReqBrokenList) ProtoMessage()    {}
func (*ReqBrokenList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{81}
}

func (m *ReqBrokenList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqBrokenList.Unmarshal(m, b)
}
func (m *ReqBrokenList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqBrokenList.Marshal(b, m, deterministic)
}
func (m *ReqBrokenList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqBrokenList.Merge(m, src)
}
func (m *ReqBrokenList) XXX_Size() int {
	return xxx_messageInfo_ReqBrokenList.Size(m)
}
func (m *ReqBrokenList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqBrokenList.DiscardUnknown(m)
}

var xxx_messageInfo_ReqBrokenList proto.InternalMessageInfo

func (m *ReqBrokenList) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReqBrokenList) GetPrimaryKey() string {
	if m != nil {
		return m.PrimaryKey
	}
	return ""
}

func (m *ReqBrokenList) GetEntrieCount() int32 {
	if m != nil {
		return m.EntrieCount
	}
	return 0
}

func (m *ReqBrokenList) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *ReqBrokenList) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

type ReplyBrokenList struct {
	Items                []*BrokenRecordStateDB `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	PrimaryKey           string                 `protobuf:"bytes,2,opt,name=primaryKey,proto3" json:"primaryKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ReplyBrokenList) Reset()         { *m = ReplyBrokenList{} }
func (m *ReplyBrokenList) String() string { return proto.CompactTextString(m) }
func (*ReplyBrokenList) ProtoMessage()    {}
func (*ReplyBrokenList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{82}
}

func (m *ReplyBrokenList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyBrokenList.Unmarshal(m, b)
}
func (m *ReplyBrokenList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyBrokenList.Marshal(b, m, deterministic)
}
func (m *ReplyBrokenList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyBrokenList.Merge(m, src)
}
func (m *ReplyBrokenList) XXX_Size() int {
	return xxx_messageInfo_ReplyBrokenList.Size(m)
}
func (m *ReplyBrokenList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyBrokenList.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyBrokenList proto.InternalMessageInfo

func (m *ReplyBrokenList) GetItems() []*BrokenRecordStateDB {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ReplyBrokenList) GetPrimaryKey() string {
	if m != nil {
		return m.PrimaryKey
	}
	return ""
}

//白条交付 因为是足额交付，所以不需要指定交付数量
type DeliverBill struct {
	DeliverAddr          string   `protobuf:"bytes,1,opt,name=deliverAddr,proto3" json:"deliverAddr,omitempty"`
	BillID               string   `protobuf:"bytes,2,opt,name=billID,proto3" json:"billID,omitempty"`
	Amount               int64    `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	ToAddr               string   `protobuf:"bytes,4,opt,name=toAddr,proto3" json:"toAddr,omitempty"`
	Remark               string   `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
	DeliverIndentity     int32    `protobuf:"varint,6,opt,name=deliverIndentity,proto3" json:"deliverIndentity,omitempty"`
	ToIndentity          int32    `protobuf:"varint,7,opt,name=toIndentity,proto3" json:"toIndentity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeliverBill) Reset()         { *m = DeliverBill{} }
func (m *DeliverBill) String() string { return proto.CompactTextString(m) }
func (*DeliverBill) ProtoMessage()    {}
func (*DeliverBill) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{83}
}

func (m *DeliverBill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeliverBill.Unmarshal(m, b)
}
func (m *DeliverBill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeliverBill.Marshal(b, m, deterministic)
}
func (m *DeliverBill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeliverBill.Merge(m, src)
}
func (m *DeliverBill) XXX_Size() int {
	return xxx_messageInfo_DeliverBill.Size(m)
}
func (m *DeliverBill) XXX_DiscardUnknown() {
	xxx_messageInfo_DeliverBill.DiscardUnknown(m)
}

var xxx_messageInfo_DeliverBill proto.InternalMessageInfo

func (m *DeliverBill) GetDeliverAddr() string {
	if m != nil {
		return m.DeliverAddr
	}
	return ""
}

func (m *DeliverBill) GetBillID() string {
	if m != nil {
		return m.BillID
	}
	return ""
}

func (m *DeliverBill) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *DeliverBill) GetToAddr() string {
	if m != nil {
		return m.ToAddr
	}
	return ""
}

func (m *DeliverBill) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *DeliverBill) GetDeliverIndentity() int32 {
	if m != nil {
		return m.DeliverIndentity
	}
	return 0
}

func (m *DeliverBill) GetToIndentity() int32 {
	if m != nil {
		return m.ToIndentity
	}
	return 0
}

//白条交付条目 --table: Local DB
type DeliverItemLocalDB struct {
	DeliverAddr          string   `protobuf:"bytes,1,opt,name=deliverAddr,proto3" json:"deliverAddr,omitempty"`
	ToAddr               string   `protobuf:"bytes,2,opt,name=toAddr,proto3" json:"toAddr,omitempty"`
	BillID               string   `protobuf:"bytes,3,opt,name=billID,proto3" json:"billID,omitempty"`
	Amount               int64    `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	DeliverID            string   `protobuf:"bytes,5,opt,name=deliverID,proto3" json:"deliverID,omitempty"`
	Timestamp            int64    `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Remark               string   `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeliverItemLocalDB) Reset()         { *m = DeliverItemLocalDB{} }
func (m *DeliverItemLocalDB) String() string { return proto.CompactTextString(m) }
func (*DeliverItemLocalDB) ProtoMessage()    {}
func (*DeliverItemLocalDB) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{84}
}

func (m *DeliverItemLocalDB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeliverItemLocalDB.Unmarshal(m, b)
}
func (m *DeliverItemLocalDB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeliverItemLocalDB.Marshal(b, m, deterministic)
}
func (m *DeliverItemLocalDB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeliverItemLocalDB.Merge(m, src)
}
func (m *DeliverItemLocalDB) XXX_Size() int {
	return xxx_messageInfo_DeliverItemLocalDB.Size(m)
}
func (m *DeliverItemLocalDB) XXX_DiscardUnknown() {
	xxx_messageInfo_DeliverItemLocalDB.DiscardUnknown(m)
}

var xxx_messageInfo_DeliverItemLocalDB proto.InternalMessageInfo

func (m *DeliverItemLocalDB) GetDeliverAddr() string {
	if m != nil {
		return m.DeliverAddr
	}
	return ""
}

func (m *DeliverItemLocalDB) GetToAddr() string {
	if m != nil {
		return m.ToAddr
	}
	return ""
}

func (m *DeliverItemLocalDB) GetBillID() string {
	if m != nil {
		return m.BillID
	}
	return ""
}

func (m *DeliverItemLocalDB) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *DeliverItemLocalDB) GetDeliverID() string {
	if m != nil {
		return m.DeliverID
	}
	return ""
}

func (m *DeliverItemLocalDB) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *DeliverItemLocalDB) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

//查询相关
type ReqDeliverList struct {
	PrimaryKey           string   `protobuf:"bytes,1,opt,name=primaryKey,proto3" json:"primaryKey,omitempty"`
	EntrieCount          int32    `protobuf:"varint,2,opt,name=entrieCount,proto3" json:"entrieCount,omitempty"`
	DeliverID            string   `protobuf:"bytes,3,opt,name=deliverID,proto3" json:"deliverID,omitempty"`
	DeliverAddr          string   `protobuf:"bytes,4,opt,name=deliverAddr,proto3" json:"deliverAddr,omitempty"`
	ToAddr               string   `protobuf:"bytes,5,opt,name=toAddr,proto3" json:"toAddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqDeliverList) Reset()         { *m = ReqDeliverList{} }
func (m *ReqDeliverList) String() string { return proto.CompactTextString(m) }
func (*ReqDeliverList) ProtoMessage()    {}
func (*ReqDeliverList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{85}
}

func (m *ReqDeliverList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqDeliverList.Unmarshal(m, b)
}
func (m *ReqDeliverList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqDeliverList.Marshal(b, m, deterministic)
}
func (m *ReqDeliverList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqDeliverList.Merge(m, src)
}
func (m *ReqDeliverList) XXX_Size() int {
	return xxx_messageInfo_ReqDeliverList.Size(m)
}
func (m *ReqDeliverList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqDeliverList.DiscardUnknown(m)
}

var xxx_messageInfo_ReqDeliverList proto.InternalMessageInfo

func (m *ReqDeliverList) GetPrimaryKey() string {
	if m != nil {
		return m.PrimaryKey
	}
	return ""
}

func (m *ReqDeliverList) GetEntrieCount() int32 {
	if m != nil {
		return m.EntrieCount
	}
	return 0
}

func (m *ReqDeliverList) GetDeliverID() string {
	if m != nil {
		return m.DeliverID
	}
	return ""
}

func (m *ReqDeliverList) GetDeliverAddr() string {
	if m != nil {
		return m.DeliverAddr
	}
	return ""
}

func (m *ReqDeliverList) GetToAddr() string {
	if m != nil {
		return m.ToAddr
	}
	return ""
}

type ReplyDeliverList struct {
	Items                []*DeliverItemLocalDB `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	PrimaryKey           string                `protobuf:"bytes,2,opt,name=primaryKey,proto3" json:"primaryKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ReplyDeliverList) Reset()         { *m = ReplyDeliverList{} }
func (m *ReplyDeliverList) String() string { return proto.CompactTextString(m) }
func (*ReplyDeliverList) ProtoMessage()    {}
func (*ReplyDeliverList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{86}
}

func (m *ReplyDeliverList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyDeliverList.Unmarshal(m, b)
}
func (m *ReplyDeliverList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyDeliverList.Marshal(b, m, deterministic)
}
func (m *ReplyDeliverList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyDeliverList.Merge(m, src)
}
func (m *ReplyDeliverList) XXX_Size() int {
	return xxx_messageInfo_ReplyDeliverList.Size(m)
}
func (m *ReplyDeliverList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyDeliverList.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyDeliverList proto.InternalMessageInfo

func (m *ReplyDeliverList) GetItems() []*DeliverItemLocalDB {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ReplyDeliverList) GetPrimaryKey() string {
	if m != nil {
		return m.PrimaryKey
	}
	return ""
}

//确认交付
type ConfirmDeliverBill struct {
	ConfirmAddr          string   `protobuf:"bytes,1,opt,name=confirmAddr,proto3" json:"confirmAddr,omitempty"`
	DeliverID            string   `protobuf:"bytes,2,opt,name=deliverID,proto3" json:"deliverID,omitempty"`
	Ack                  bool     `protobuf:"varint,3,opt,name=ack,proto3" json:"ack,omitempty"`
	Remark               string   `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
	ConfirmIndentity     int32    `protobuf:"varint,5,opt,name=confirmIndentity,proto3" json:"confirmIndentity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfirmDeliverBill) Reset()         { *m = ConfirmDeliverBill{} }
func (m *ConfirmDeliverBill) String() string { return proto.CompactTextString(m) }
func (*ConfirmDeliverBill) ProtoMessage()    {}
func (*ConfirmDeliverBill) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{87}
}

func (m *ConfirmDeliverBill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfirmDeliverBill.Unmarshal(m, b)
}
func (m *ConfirmDeliverBill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfirmDeliverBill.Marshal(b, m, deterministic)
}
func (m *ConfirmDeliverBill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmDeliverBill.Merge(m, src)
}
func (m *ConfirmDeliverBill) XXX_Size() int {
	return xxx_messageInfo_ConfirmDeliverBill.Size(m)
}
func (m *ConfirmDeliverBill) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmDeliverBill.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmDeliverBill proto.InternalMessageInfo

func (m *ConfirmDeliverBill) GetConfirmAddr() string {
	if m != nil {
		return m.ConfirmAddr
	}
	return ""
}

func (m *ConfirmDeliverBill) GetDeliverID() string {
	if m != nil {
		return m.DeliverID
	}
	return ""
}

func (m *ConfirmDeliverBill) GetAck() bool {
	if m != nil {
		return m.Ack
	}
	return false
}

func (m *ConfirmDeliverBill) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *ConfirmDeliverBill) GetConfirmIndentity() int32 {
	if m != nil {
		return m.ConfirmIndentity
	}
	return 0
}

//Log
type ReceiptLogConfirmDeliver struct {
	TransfItems          *AssetTransferTags `protobuf:"bytes,1,opt,name=transfItems,proto3" json:"transfItems,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ReceiptLogConfirmDeliver) Reset()         { *m = ReceiptLogConfirmDeliver{} }
func (m *ReceiptLogConfirmDeliver) String() string { return proto.CompactTextString(m) }
func (*ReceiptLogConfirmDeliver) ProtoMessage()    {}
func (*ReceiptLogConfirmDeliver) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{88}
}

func (m *ReceiptLogConfirmDeliver) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptLogConfirmDeliver.Unmarshal(m, b)
}
func (m *ReceiptLogConfirmDeliver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptLogConfirmDeliver.Marshal(b, m, deterministic)
}
func (m *ReceiptLogConfirmDeliver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptLogConfirmDeliver.Merge(m, src)
}
func (m *ReceiptLogConfirmDeliver) XXX_Size() int {
	return xxx_messageInfo_ReceiptLogConfirmDeliver.Size(m)
}
func (m *ReceiptLogConfirmDeliver) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptLogConfirmDeliver.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptLogConfirmDeliver proto.InternalMessageInfo

func (m *ReceiptLogConfirmDeliver) GetTransfItems() *AssetTransferTags {
	if m != nil {
		return m.TransfItems
	}
	return nil
}

//撤销交付
type UnDeliverBill struct {
	UnDeliverAddr        string   `protobuf:"bytes,1,opt,name=unDeliverAddr,proto3" json:"unDeliverAddr,omitempty"`
	DeliverID            string   `protobuf:"bytes,2,opt,name=deliverID,proto3" json:"deliverID,omitempty"`
	Remark               string   `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	UnDeliverIndentity   int32    `protobuf:"varint,5,opt,name=unDeliverIndentity,proto3" json:"unDeliverIndentity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnDeliverBill) Reset()         { *m = UnDeliverBill{} }
func (m *UnDeliverBill) String() string { return proto.CompactTextString(m) }
func (*UnDeliverBill) ProtoMessage()    {}
func (*UnDeliverBill) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{89}
}

func (m *UnDeliverBill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnDeliverBill.Unmarshal(m, b)
}
func (m *UnDeliverBill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnDeliverBill.Marshal(b, m, deterministic)
}
func (m *UnDeliverBill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnDeliverBill.Merge(m, src)
}
func (m *UnDeliverBill) XXX_Size() int {
	return xxx_messageInfo_UnDeliverBill.Size(m)
}
func (m *UnDeliverBill) XXX_DiscardUnknown() {
	xxx_messageInfo_UnDeliverBill.DiscardUnknown(m)
}

var xxx_messageInfo_UnDeliverBill proto.InternalMessageInfo

func (m *UnDeliverBill) GetUnDeliverAddr() string {
	if m != nil {
		return m.UnDeliverAddr
	}
	return ""
}

func (m *UnDeliverBill) GetDeliverID() string {
	if m != nil {
		return m.DeliverID
	}
	return ""
}

func (m *UnDeliverBill) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *UnDeliverBill) GetUnDeliverIndentity() int32 {
	if m != nil {
		return m.UnDeliverIndentity
	}
	return 0
}

func init() {
	proto.RegisterType((*FinanceAction)(nil), "types.FinanceAction")
	proto.RegisterType((*AddCreditToken)(nil), "types.AddCreditToken")
	proto.RegisterType((*CreditTokenStateDB)(nil), "types.CreditTokenStateDB")
	proto.RegisterType((*ReceiptLogAddCreditToken)(nil), "types.ReceiptLogAddCreditToken")
	proto.RegisterType((*AssetTransferTags)(nil), "types.AssetTransferTags")
	proto.RegisterType((*AssetTransferTag)(nil), "types.AssetTransferTag")
	proto.RegisterType((*CreditRecordLocalDB)(nil), "types.CreditRecordLocalDB")
	proto.RegisterType((*ReqCreditDetail)(nil), "types.ReqCreditDetail")
	proto.RegisterType((*ReplyCreditDetail)(nil), "types.ReplyCreditDetail")
	proto.RegisterType((*ReqCreditFunder)(nil), "types.ReqCreditFunder")
	proto.RegisterType((*ReplyCreditFunder)(nil), "types.ReplyCreditFunder")
	proto.RegisterType((*ReqCreditCoreFirm)(nil), "types.ReqCreditCoreFirm")
	proto.RegisterType((*ReplyCreditCoreFirm)(nil), "types.ReplyCreditCoreFirm")
	proto.RegisterType((*CreditAsset)(nil), "types.CreditAsset")
	proto.RegisterType((*AssetItem)(nil), "types.AssetItem")
	proto.RegisterType((*DepositAsset)(nil), "types.DepositAsset")
	proto.RegisterType((*ReceiptLogDepositAsset)(nil), "types.ReceiptLogDepositAsset")
	proto.RegisterType((*DWRecordLocalDB)(nil), "types.DWRecordLocalDB")
	proto.RegisterType((*WithdrawlAsset)(nil), "types.WithdrawlAsset")
	proto.RegisterType((*ReceiptLogWithdrawlAsset)(nil), "types.ReceiptLogWithdrawlAsset")
	proto.RegisterType((*TransferCoins)(nil), "types.TransferCoins")
	proto.RegisterType((*ReceiptLogTransferCoins)(nil), "types.ReceiptLogTransferCoins")
	proto.RegisterType((*TransferCoinsRecordLocalDB)(nil), "types.TransferCoinsRecordLocalDB")
	proto.RegisterType((*ReqTransferCoinsRecord)(nil), "types.ReqTransferCoinsRecord")
	proto.RegisterType((*ReplyTransferCoinsRecord)(nil), "types.ReplyTransferCoinsRecord")
	proto.RegisterType((*ReqAccountAsset)(nil), "types.ReqAccountAsset")
	proto.RegisterType((*ReplyAccountAsset)(nil), "types.ReplyAccountAsset")
	proto.RegisterType((*ReqFinanceUserAssets)(nil), "types.ReqFinanceUserAssets")
	proto.RegisterType((*ReplyFinanceUserAssets)(nil), "types.ReplyFinanceUserAssets")
	proto.RegisterType((*ReqDWRecord)(nil), "types.ReqDWRecord")
	proto.RegisterType((*ReplyDWRecord)(nil), "types.ReplyDWRecord")
	proto.RegisterType((*CreateBill)(nil), "types.CreateBill")
	proto.RegisterType((*DpdtToken)(nil), "types.DpdtToken")
	proto.RegisterType((*ReceiptLogCreateBill)(nil), "types.ReceiptLogCreateBill")
	proto.RegisterType((*Bill)(nil), "types.Bill")
	proto.RegisterType((*SplitBillInfo)(nil), "types.SplitBillInfo")
	proto.RegisterType((*GuaranteeInfo)(nil), "types.GuaranteeInfo")
	proto.RegisterType((*RepayPlan)(nil), "types.RepayPlan")
	proto.RegisterType((*BorrowerBillLocalDB)(nil), "types.BorrowerBillLocalDB")
	proto.RegisterType((*ReqBillInfo)(nil), "types.ReqBillInfo")
	proto.RegisterType((*ReplyBillInfo)(nil), "types.ReplyBillInfo")
	proto.RegisterType((*ReqBorrowerBill)(nil), "types.ReqBorrowerBill")
	proto.RegisterType((*ReplyBorrowerBill)(nil), "types.ReplyBorrowerBill")
	proto.RegisterType((*BorrowerBillInfo)(nil), "types.BorrowerBillInfo")
	proto.RegisterType((*ReqBillRepayInfo)(nil), "types.ReqBillRepayInfo")
	proto.RegisterType((*ReplyBillRepayInfo)(nil), "types.ReplyBillRepayInfo")
	proto.RegisterType((*ReleaseBill)(nil), "types.ReleaseBill")
	proto.RegisterType((*ReceiptLogReleaseBill)(nil), "types.ReceiptLogReleaseBill")
	proto.RegisterType((*UnReleaseBill)(nil), "types.UnReleaseBill")
	proto.RegisterType((*ReceiptLogUnReleaseBill)(nil), "types.ReceiptLogUnReleaseBill")
	proto.RegisterType((*SplitBill)(nil), "types.SplitBill")
	proto.RegisterType((*SplitBillRecordLocalDB)(nil), "types.SplitBillRecordLocalDB")
	proto.RegisterType((*ReqSplitBillList)(nil), "types.ReqSplitBillList")
	proto.RegisterType((*ReplySplitBillList)(nil), "types.ReplySplitBillList")
	proto.RegisterType((*UnSplitBill)(nil), "types.UnSplitBill")
	proto.RegisterType((*ConfirmSplitBill)(nil), "types.ConfirmSplitBill")
	proto.RegisterType((*ReceiptLogConfirmSplitBill)(nil), "types.ReceiptLogConfirmSplitBill")
	proto.RegisterType((*ApplyForFinancing)(nil), "types.ApplyForFinancing")
	proto.RegisterType((*ApplyFinancingItemLocalDB)(nil), "types.ApplyFinancingItemLocalDB")
	proto.RegisterType((*ReqApplyList)(nil), "types.ReqApplyList")
	proto.RegisterType((*ReplyApplyList)(nil), "types.ReplyApplyList")
	proto.RegisterType((*UnApplyForFinancing)(nil), "types.UnApplyForFinancing")
	proto.RegisterType((*ConfirmFinancing)(nil), "types.ConfirmFinancing")
	proto.RegisterType((*ReceiptLogConfirmFinancing)(nil), "types.ReceiptLogConfirmFinancing")
	proto.RegisterType((*CashBill)(nil), "types.CashBill")
	proto.RegisterType((*ReceiptLogCashBill)(nil), "types.ReceiptLogCashBill")
	proto.RegisterType((*CashRecordLocalDB)(nil), "types.CashRecordLocalDB")
	proto.RegisterType((*CashList)(nil), "types.CashList")
	proto.RegisterType((*ReqCashList)(nil), "types.ReqCashList")
	proto.RegisterType((*ReplyCashList)(nil), "types.ReplyCashList")
	proto.RegisterType((*ReqCashRecord)(nil), "types.ReqCashRecord")
	proto.RegisterType((*ReplyCashRecord)(nil), "types.ReplyCashRecord")
	proto.RegisterType((*RepayBill)(nil), "types.RepayBill")
	proto.RegisterType((*ReceiptLogRepayBill)(nil), "types.ReceiptLogRepayBill")
	proto.RegisterType((*RepayRecordLocalDB)(nil), "types.RepayRecordLocalDB")
	proto.RegisterType((*ReqRepayRecord)(nil), "types.ReqRepayRecord")
	proto.RegisterType((*ReplyRepayRecord)(nil), "types.ReplyRepayRecord")
	proto.RegisterType((*ReqTokenValue)(nil), "types.ReqTokenValue")
	proto.RegisterType((*ReplyTokenValue)(nil), "types.ReplyTokenValue")
	proto.RegisterType((*ReportBroken)(nil), "types.ReportBroken")
	proto.RegisterType((*BrokenRecordStateDB)(nil), "types.BrokenRecordStateDB")
	proto.RegisterType((*ReqBrokenList)(nil), "types.ReqBrokenList")
	proto.RegisterType((*ReplyBrokenList)(nil), "types.ReplyBrokenList")
	proto.RegisterType((*DeliverBill)(nil), "types.DeliverBill")
	proto.RegisterType((*DeliverItemLocalDB)(nil), "types.DeliverItemLocalDB")
	proto.RegisterType((*ReqDeliverList)(nil), "types.ReqDeliverList")
	proto.RegisterType((*ReplyDeliverList)(nil), "types.ReplyDeliverList")
	proto.RegisterType((*ConfirmDeliverBill)(nil), "types.ConfirmDeliverBill")
	proto.RegisterType((*ReceiptLogConfirmDeliver)(nil), "types.ReceiptLogConfirmDeliver")
	proto.RegisterType((*UnDeliverBill)(nil), "types.UnDeliverBill")
}

func init() {
	proto.RegisterFile("finance.proto", fileDescriptor_c04e2e1c1ba79a81)
}

var fileDescriptor_c04e2e1c1ba79a81 = []byte{
	// 4390 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x5c, 0xcd, 0x6f, 0x1c, 0x47,
	0x76, 0x9f, 0x9e, 0xe1, 0x90, 0x9c, 0x47, 0xf1, 0xab, 0x49, 0x51, 0xc3, 0xb1, 0x3e, 0xe8, 0x5a,
	0x67, 0x2d, 0x08, 0x6b, 0x45, 0xb6, 0x37, 0xde, 0xd8, 0x59, 0x7b, 0xc3, 0x8f, 0xa5, 0x29, 0x5b,
	0xb1, 0xb4, 0x2d, 0x69, 0x9d, 0x00, 0x41, 0x90, 0xd6, 0x4c, 0x89, 0x6c, 0x78, 0xa6, 0x7b, 0xd4,
	0xdd, 0x63, 0x69, 0x82, 0x04, 0x0b, 0x24, 0x9b, 0x53, 0x80, 0xec, 0xde, 0x73, 0xc8, 0x22, 0x39,
	0x04, 0xd8, 0x4b, 0x4e, 0x09, 0x90, 0x53, 0xfe, 0x87, 0xdc, 0x73, 0xf1, 0x25, 0x39, 0x04, 0xb9,
	0x04, 0x39, 0xe4, 0x16, 0xd4, 0xab, 0xea, 0xaa, 0x57, 0xd5, 0xdd, 0x24, 0x47, 0x94, 0x61, 0xdf,
	0xa6, 0x5f, 0xbd, 0x7a, 0xfd, 0xde, 0xab, 0x57, 0xbf, 0x57, 0xf5, 0xaa, 0x7a, 0x60, 0xf9, 0x69,
	0x14, 0x87, 0x71, 0x9f, 0xdf, 0x1e, 0xa7, 0x49, 0x9e, 0xf8, 0xed, 0x7c, 0x3a, 0xe6, 0x59, 0x6f,
	0x3d, 0x4f, 0xc3, 0x38, 0x0b, 0xfb, 0x79, 0x94, 0xc4, 0xb2, 0x85, 0xfd, 0x6b, 0x07, 0x96, 0x0f,
	0x25, 0xef, 0x2e, 0xd2, 0xfd, 0x1f, 0xc1, 0x4a, 0x38, 0x18, 0xec, 0xa7, 0x7c, 0x10, 0xe5, 0x8f,
	0x92, 0x2f, 0x78, 0xdc, 0xf5, 0x76, 0xbc, 0x9b, 0x4b, 0xef, 0x5c, 0xbe, 0x8d, 0x42, 0x6e, 0xef,
	0x5a, 0x8d, 0x47, 0x8d, 0xc0, 0x61, 0xf7, 0xdf, 0x87, 0x4b, 0x03, 0x3e, 0x4e, 0xb2, 0x28, 0xdf,
	0xcd, 0x32, 0x9e, 0x77, 0x9b, 0xd8, 0x7d, 0x43, 0x75, 0x3f, 0x20, 0x4d, 0x47, 0x8d, 0xc0, 0x62,
	0x15, 0xef, 0x7e, 0x1e, 0xe5, 0x27, 0x83, 0x34, 0x7c, 0x3e, 0x94, 0x9d, 0x5b, 0xd6, 0xbb, 0x3f,
	0xb7, 0x1a, 0xc5, 0xbb, 0x6d, 0x76, 0xff, 0x87, 0xb0, 0x8c, 0x36, 0x3e, 0xe5, 0xe9, 0x7e, 0x12,
	0xc5, 0x59, 0x77, 0x0e, 0xfb, 0x6f, 0xaa, 0xfe, 0x8f, 0x68, 0xdb, 0x51, 0x23, 0xb0, 0x99, 0xfd,
	0x77, 0x01, 0xfa, 0x29, 0x0f, 0x73, 0xbe, 0x17, 0x0d, 0x87, 0xdd, 0x36, 0x76, 0x5d, 0x57, 0x5d,
	0xf7, 0x75, 0xc3, 0x51, 0x23, 0x20, 0x6c, 0xfe, 0x7b, 0xb0, 0x94, 0xf2, 0x21, 0x0f, 0x33, 0xd9,
	0x6b, 0x1e, 0x7b, 0xf9, 0xaa, 0x57, 0x60, 0x5a, 0x8e, 0x1a, 0x01, 0x65, 0x14, 0xaa, 0x4e, 0x62,
	0xd2, 0xde, 0x5d, 0xb0, 0x54, 0x7d, 0x1c, 0xdb, 0x7d, 0x6d, 0x66, 0xff, 0x08, 0xd6, 0xc3, 0xf1,
	0x78, 0x38, 0x3d, 0x4c, 0x52, 0x39, 0x7c, 0x51, 0x7c, 0xdc, 0x5d, 0x44, 0x09, 0xdd, 0x62, 0xa0,
	0xdc, 0xf6, 0xa3, 0x46, 0x50, 0xee, 0xe4, 0x7f, 0x06, 0x1b, 0x93, 0xb8, 0xc4, 0xdb, 0xed, 0xa0,
	0xac, 0x9e, 0xd6, 0xa6, 0x4a, 0x5a, 0x55, 0x47, 0xff, 0xc7, 0xb0, 0xd6, 0x4f, 0xe2, 0xa7, 0x51,
	0x3a, 0x32, 0xc2, 0x00, 0x85, 0x5d, 0x29, 0x5c, 0xe9, 0x34, 0x1f, 0x35, 0x82, 0x52, 0x17, 0xff,
	0x2d, 0x58, 0xec, 0x87, 0xd9, 0x09, 0x7a, 0x66, 0x09, 0xbb, 0xaf, 0x16, 0xdd, 0x15, 0xf9, 0xa8,
	0x11, 0x68, 0x16, 0xff, 0x0e, 0x74, 0x52, 0x3e, 0x0e, 0xa7, 0xc8, 0x7f, 0x09, 0xf9, 0xd7, 0xf4,
	0x18, 0x28, 0xfa, 0x51, 0x23, 0x30, 0x4c, 0x22, 0x4c, 0x53, 0x3e, 0x4e, 0xd2, 0x7c, 0x2f, 0xc5,
	0x28, 0x5f, 0xb6, 0xc2, 0x34, 0x20, 0x4d, 0x22, 0x4c, 0x29, 0xab, 0x78, 0x59, 0x36, 0x1e, 0x46,
	0x39, 0xbe, 0x6c, 0xc5, 0x7a, 0xd9, 0xc3, 0x82, 0x2e, 0x5e, 0xa6, 0x99, 0x44, 0x90, 0x4c, 0x62,
	0xdd, 0xd6, 0x5d, 0xb5, 0x82, 0xe4, 0x71, 0x4c, 0x7b, 0x51, 0x46, 0xe2, 0x4c, 0xd3, 0x79, 0xad,
	0xca, 0x99, 0x54, 0x42, 0xa9, 0x8b, 0x78, 0xfd, 0x80, 0x0f, 0xa3, 0x2f, 0x79, 0x8a, 0x12, 0xd6,
	0xad, 0xd7, 0x1f, 0x98, 0x16, 0xf1, 0x7a, 0xc2, 0x28, 0x63, 0x94, 0xb4, 0x77, 0x7d, 0x27, 0x46,
	0xed, 0xbe, 0x36, 0xb3, 0xff, 0x29, 0xf8, 0x4a, 0x13, 0x2a, 0x62, 0x03, 0x45, 0x6c, 0xdb, 0xea,
	0xdb, 0x72, 0x2a, 0xba, 0xf9, 0x2b, 0xd0, 0xcc, 0xa7, 0xdd, 0xcd, 0x1d, 0xef, 0x66, 0x3b, 0x68,
	0xe6, 0xd3, 0xbd, 0x05, 0x68, 0x7f, 0x19, 0x0e, 0x27, 0x9c, 0xfd, 0xaa, 0x09, 0x2b, 0x36, 0x26,
	0xf9, 0xd7, 0x71, 0x1e, 0x0f, 0xa2, 0x7c, 0x77, 0x30, 0x48, 0x11, 0xbe, 0x3a, 0x01, 0xa1, 0xf8,
	0x3b, 0xb0, 0x74, 0x9c, 0x86, 0x71, 0xce, 0x39, 0x32, 0x34, 0x91, 0x81, 0x92, 0xfc, 0x2d, 0x98,
	0xcf, 0xa6, 0xa3, 0x27, 0xc9, 0x10, 0x01, 0xa8, 0x13, 0xa8, 0x27, 0x41, 0x0f, 0x47, 0xc9, 0x24,
	0xce, 0x11, 0x58, 0x5a, 0x81, 0x7a, 0xf2, 0x7d, 0x98, 0x4b, 0xc3, 0x9c, 0x23, 0x66, 0xb4, 0x02,
	0xfc, 0xed, 0xf7, 0x60, 0x71, 0x30, 0x49, 0x43, 0x01, 0xaa, 0x88, 0x0a, 0xad, 0x40, 0x3f, 0x0b,
	0x39, 0x29, 0x1f, 0x85, 0xe9, 0x17, 0x38, 0xeb, 0x3b, 0x81, 0x7a, 0xf2, 0x6f, 0xc2, 0xaa, 0xd4,
	0xf3, 0x6e, 0x3c, 0xe0, 0x71, 0x1e, 0xe5, 0x53, 0x9c, 0xd4, 0xed, 0xc0, 0x25, 0xfb, 0xb7, 0x60,
	0x4d, 0x29, 0x6c, 0x58, 0x3b, 0xc8, 0x5a, 0xa2, 0xb3, 0xff, 0xf4, 0xc0, 0x27, 0xfe, 0x79, 0x98,
	0x87, 0x39, 0x3f, 0xd8, 0xfb, 0x96, 0xb8, 0xa9, 0x0b, 0x0b, 0xe1, 0x60, 0xf0, 0x28, 0x1a, 0x71,
	0xe5, 0xa5, 0xe2, 0xd1, 0x72, 0xe0, 0x42, 0xad, 0x03, 0x17, 0xa9, 0x03, 0x59, 0x0c, 0xdd, 0x80,
	0xf7, 0x79, 0x34, 0xce, 0xef, 0x25, 0xc7, 0x4e, 0x58, 0x6c, 0xc1, 0x3c, 0x7f, 0x31, 0x8e, 0x52,
	0x8e, 0xb6, 0xb6, 0x02, 0xf5, 0xe4, 0x7f, 0x00, 0x4b, 0x32, 0x0f, 0xdc, 0xcd, 0xf9, 0x28, 0x53,
	0xf9, 0x4a, 0xa3, 0xa8, 0xc8, 0x2b, 0x45, 0xde, 0x78, 0x14, 0x1e, 0x67, 0x01, 0x65, 0x66, 0x7b,
	0xb0, 0x5e, 0xe2, 0xf0, 0xdf, 0x82, 0x76, 0x84, 0xa2, 0xbc, 0x9d, 0x16, 0x99, 0xaa, 0x2e, 0x63,
	0x20, 0xb9, 0xd8, 0x5f, 0x7b, 0xb0, 0xe6, 0xb6, 0x09, 0xe3, 0x9f, 0xa6, 0xc9, 0x88, 0x0c, 0x8d,
	0x7e, 0x16, 0x86, 0xe4, 0x09, 0x19, 0x13, 0xf5, 0x34, 0xf3, 0x70, 0x18, 0x27, 0xb6, 0x2d, 0x27,
	0xfe, 0x53, 0x13, 0x36, 0xa4, 0xe3, 0x02, 0xde, 0x4f, 0xd2, 0xc1, 0xbd, 0xa4, 0x1f, 0x0e, 0xbf,
	0x35, 0x01, 0x63, 0x86, 0x71, 0xde, 0x1a, 0xc6, 0x97, 0x08, 0x17, 0xff, 0x2a, 0x74, 0x9e, 0x0c,
	0x93, 0xfe, 0x17, 0x18, 0x7e, 0x1d, 0xec, 0x64, 0x08, 0xe8, 0xe7, 0x17, 0x47, 0x61, 0x76, 0x82,
	0x09, 0x4c, 0xf8, 0x19, 0x9f, 0x04, 0xfd, 0x84, 0x47, 0xc7, 0x27, 0x39, 0x66, 0xa6, 0x56, 0xa0,
	0x9e, 0xd8, 0x6f, 0xc1, 0x6a, 0xc0, 0x9f, 0x49, 0xcf, 0x1d, 0xf0, 0x3c, 0x8c, 0x86, 0x3e, 0x83,
	0x4b, 0xd2, 0x41, 0x0f, 0xa5, 0xd9, 0xd2, 0x69, 0x16, 0x8d, 0x1d, 0xc2, 0x7a, 0xc0, 0xc7, 0xc3,
	0xa9, 0xd5, 0xf1, 0x6d, 0x98, 0x97, 0x4c, 0x6a, 0xf9, 0xb5, 0x6d, 0xd6, 0x21, 0xce, 0x3c, 0x0e,
	0x14, 0x23, 0xcb, 0xc8, 0xeb, 0x0f, 0x27, 0xf1, 0x80, 0xa7, 0x62, 0xc4, 0x9e, 0xe2, 0x2f, 0x3a,
	0x62, 0x86, 0x22, 0xda, 0xc7, 0x69, 0x34, 0x0a, 0xd3, 0xe9, 0xa7, 0x7c, 0xaa, 0x06, 0x8c, 0x50,
	0xc4, 0x88, 0xf2, 0x38, 0x4f, 0x23, 0xbe, 0x8f, 0x83, 0xd3, 0x42, 0x80, 0xa1, 0x24, 0xf6, 0x17,
	0x9e, 0xa5, 0xbd, 0x7a, 0xaf, 0xe5, 0x57, 0xcf, 0xf5, 0xeb, 0x9d, 0x62, 0x7e, 0x34, 0x71, 0x7e,
	0xf4, 0x2c, 0xd3, 0xac, 0x90, 0x53, 0x53, 0xc4, 0xd1, 0xb3, 0xe5, 0xea, 0xc9, 0x9e, 0x09, 0x25,
	0x94, 0xe9, 0xfb, 0x49, 0xca, 0x0f, 0xa3, 0x74, 0x24, 0x02, 0xa2, 0x9f, 0xa4, 0x9c, 0x4e, 0xa1,
	0xe2, 0xf9, 0x15, 0x18, 0xfe, 0x67, 0xb0, 0x41, 0xec, 0xd6, 0x2f, 0x3d, 0xdd, 0xf2, 0x9b, 0xb6,
	0xe5, 0xbe, 0x65, 0x39, 0x62, 0xc0, 0x79, 0x2d, 0x9e, 0xc2, 0x12, 0xe9, 0xe5, 0xdf, 0x86, 0x4e,
	0x28, 0x7e, 0x08, 0x54, 0x52, 0x11, 0xb3, 0x46, 0x61, 0x47, 0xd0, 0x03, 0xc3, 0xe2, 0x7f, 0x00,
	0x20, 0xbb, 0x63, 0x87, 0xa6, 0xb5, 0xd8, 0xab, 0x1a, 0x07, 0xc2, 0xcd, 0x1e, 0x43, 0x47, 0xcb,
	0x14, 0xf0, 0xfd, 0x24, 0x1c, 0x8a, 0xfd, 0x83, 0xb2, 0xb6, 0x78, 0x14, 0xb3, 0xe4, 0x69, 0x9a,
	0xfc, 0x09, 0x8f, 0x51, 0x7c, 0x2b, 0x50, 0x4f, 0x75, 0x18, 0xc0, 0x5e, 0xc0, 0x25, 0xba, 0x39,
	0x10, 0x43, 0x50, 0x6c, 0x0e, 0xcc, 0x08, 0x52, 0x12, 0x41, 0x8d, 0xa6, 0x8b, 0x6b, 0x75, 0x28,
	0xa3, 0x50, 0x60, 0xce, 0xc2, 0xbb, 0x47, 0xb0, 0x65, 0x92, 0x86, 0xa5, 0x83, 0x93, 0x1a, 0xbc,
	0x59, 0x52, 0xc3, 0xdf, 0x7b, 0xb0, 0x7a, 0xf0, 0xb9, 0x8d, 0xa0, 0x42, 0x63, 0xdc, 0x66, 0xa1,
	0xa8, 0x76, 0xa0, 0x9e, 0x5e, 0xc6, 0x12, 0x85, 0x4c, 0x73, 0x16, 0x32, 0x5d, 0x85, 0x4e, 0x1e,
	0x8d, 0x78, 0x96, 0x87, 0xa3, 0xb1, 0x02, 0x4d, 0x43, 0x10, 0x68, 0x1a, 0x0a, 0x57, 0xce, 0x63,
	0x1f, 0xfc, 0xcd, 0xfe, 0x14, 0x56, 0xec, 0x5d, 0x95, 0x80, 0xac, 0x62, 0x57, 0x45, 0x1c, 0x6f,
	0xd1, 0x5e, 0x99, 0xe7, 0x7f, 0x4a, 0xd3, 0xb5, 0xa3, 0xc7, 0x45, 0x7c, 0xff, 0xb7, 0x1e, 0x2c,
	0x5b, 0x9b, 0xbd, 0x53, 0xf3, 0xa9, 0x0f, 0x73, 0xfc, 0x05, 0xef, 0x2b, 0x18, 0xc0, 0xdf, 0x2f,
	0x93, 0x4b, 0x55, 0x4e, 0x6e, 0xbb, 0x39, 0x59, 0x59, 0x3e, 0x6f, 0x59, 0xfe, 0x18, 0xae, 0x18,
	0xcb, 0x6d, 0x55, 0x2f, 0x62, 0xf8, 0x57, 0x1e, 0xf4, 0x2c, 0x69, 0x76, 0xfc, 0x7d, 0x83, 0x5e,
	0x50, 0xf1, 0x3a, 0x5f, 0x1f, 0xaf, 0x0b, 0x6e, 0xbc, 0xd6, 0x2d, 0xf2, 0x7e, 0xe9, 0x89, 0x09,
	0xfb, 0xac, 0xc2, 0x4e, 0x1d, 0xe2, 0x9e, 0x09, 0xf1, 0x8b, 0x63, 0xbd, 0xe0, 0x40, 0xe8, 0x54,
	0x49, 0x5c, 0xc6, 0x30, 0x25, 0xb1, 0x87, 0x22, 0x90, 0xc7, 0xc3, 0x69, 0x95, 0x4e, 0x3f, 0xb0,
	0x97, 0x83, 0xaf, 0x57, 0x15, 0x23, 0xaa, 0xb2, 0x1e, 0x7b, 0x8c, 0x09, 0x7d, 0xb7, 0xdf, 0x17,
	0x4a, 0xc8, 0x49, 0x51, 0x65, 0x9f, 0x19, 0xa4, 0xa6, 0x3b, 0x48, 0x62, 0x10, 0x79, 0x5a, 0x0c,
	0x9e, 0x7c, 0x62, 0x7f, 0xa0, 0x32, 0xb6, 0x25, 0x78, 0x76, 0x1c, 0x2f, 0x54, 0x69, 0x11, 0x34,
	0xb9, 0x05, 0x9b, 0x01, 0x7f, 0xa6, 0x0a, 0x4a, 0x8f, 0x33, 0x9e, 0xa2, 0xf0, 0xac, 0x4a, 0x6d,
	0xf6, 0x47, 0x62, 0x10, 0xc7, 0xc3, 0xe9, 0xb9, 0xb8, 0xfd, 0x3b, 0x00, 0x3a, 0x7b, 0x15, 0xe9,
	0xb3, 0x9c, 0xe1, 0x08, 0x0f, 0xfb, 0x4b, 0x0f, 0x96, 0x02, 0xfe, 0xac, 0x80, 0xe0, 0x6f, 0x2c,
	0x34, 0x3e, 0x84, 0x65, 0xb4, 0x53, 0x2b, 0xf2, 0x3d, 0x3b, 0x1e, 0xb6, 0x8a, 0x7d, 0xf8, 0xe7,
	0x95, 0x41, 0xf0, 0x5f, 0xf3, 0x98, 0xaa, 0x8b, 0x72, 0xd3, 0x0a, 0x34, 0xa3, 0x81, 0xb2, 0xa1,
	0x19, 0x0d, 0xc4, 0xfb, 0x73, 0x5c, 0x0c, 0xd2, 0x08, 0xa0, 0x24, 0xc1, 0xd1, 0x17, 0x21, 0xf6,
	0x90, 0x4e, 0x64, 0x4a, 0x12, 0xa8, 0xf0, 0x24, 0x49, 0xd3, 0xe4, 0x39, 0x4f, 0x95, 0x01, 0xfa,
	0x59, 0xcc, 0xd0, 0xe3, 0x49, 0x28, 0x96, 0xf0, 0x89, 0x98, 0xd4, 0xad, 0x9b, 0x9d, 0xc0, 0x10,
	0x84, 0xff, 0x86, 0x49, 0x18, 0xef, 0x4a, 0x2c, 0x90, 0xeb, 0x71, 0x42, 0xd1, 0xeb, 0xf7, 0x05,
	0xb2, 0x7e, 0xdf, 0x81, 0xa5, 0xe4, 0x4b, 0x9e, 0x0e, 0x26, 0x3c, 0x10, 0x4d, 0x8b, 0xd8, 0x44,
	0x49, 0xb8, 0x0b, 0x8e, 0xd2, 0xfe, 0x64, 0x88, 0x8b, 0x77, 0xb2, 0x36, 0x77, 0xc9, 0xe2, 0xfd,
	0x58, 0xd1, 0x91, 0xc3, 0x03, 0x38, 0x3c, 0x84, 0x22, 0xda, 0x85, 0x17, 0x95, 0x7e, 0x72, 0xb5,
	0x4e, 0x28, 0x42, 0x17, 0xe4, 0xfe, 0x3d, 0x9e, 0x9f, 0x24, 0x03, 0x2c, 0x1c, 0xb5, 0x03, 0x4a,
	0x12, 0xf6, 0x87, 0x71, 0x12, 0x4f, 0x47, 0xc9, 0x24, 0xc3, 0x1a, 0xd1, 0x62, 0x60, 0x08, 0xfe,
	0x26, 0xb4, 0xc7, 0x27, 0x49, 0xcc, 0xb1, 0x0a, 0xd4, 0x09, 0xe4, 0x03, 0xbe, 0x15, 0xf7, 0xde,
	0x4f, 0x23, 0x9e, 0x62, 0xb1, 0xa7, 0x13, 0x10, 0x8a, 0xf0, 0x4a, 0x1c, 0x8e, 0x38, 0x56, 0x72,
	0x3a, 0x01, 0xfe, 0x26, 0x58, 0xb7, 0x6e, 0xed, 0x50, 0x8a, 0xa8, 0xf5, 0x49, 0xd4, 0xbe, 0x07,
	0x5b, 0xcf, 0xc3, 0x28, 0x3f, 0x4c, 0xd2, 0x8f, 0xe5, 0x48, 0x70, 0xfe, 0x80, 0xa7, 0x51, 0x32,
	0xc0, 0xe2, 0x4a, 0x2b, 0xa8, 0x69, 0xc5, 0x71, 0x8e, 0x86, 0xc3, 0x47, 0xd3, 0x31, 0x57, 0x95,
	0x14, 0xfd, 0xec, 0xdf, 0x06, 0x5f, 0x0d, 0xc1, 0xc7, 0x69, 0xd8, 0x2f, 0xe4, 0x5d, 0x46, 0x79,
	0x15, 0x2d, 0x62, 0x95, 0xa0, 0xa8, 0xf7, 0xa2, 0x51, 0x94, 0x77, 0xb7, 0x90, 0xd3, 0xa2, 0x09,
	0x4c, 0xe1, 0x2f, 0x64, 0xf3, 0x15, 0x89, 0x29, 0xea, 0xd1, 0x7f, 0x03, 0x96, 0x63, 0xce, 0x07,
	0x07, 0xe3, 0x81, 0xaa, 0x31, 0x77, 0xd1, 0xb3, 0x36, 0x51, 0xcc, 0xf9, 0x41, 0xf1, 0x90, 0x75,
	0xb7, 0xad, 0x39, 0xaf, 0xb9, 0x02, 0xc2, 0x23, 0xc6, 0x03, 0x8b, 0x6e, 0xdd, 0x1e, 0xca, 0x93,
	0x0f, 0xfe, 0x2d, 0x58, 0xc3, 0x82, 0x6d, 0x92, 0x9a, 0x5a, 0xc9, 0x6b, 0xb2, 0x56, 0xe2, 0xd2,
	0xd9, 0x7d, 0xe8, 0x18, 0x05, 0x0c, 0xb2, 0x7a, 0x35, 0xe9, 0xaf, 0xe9, 0x6e, 0x57, 0x27, 0x19,
	0x1f, 0xe0, 0x1c, 0x6b, 0x05, 0xf8, 0x9b, 0xdd, 0x15, 0x90, 0x58, 0x24, 0x7a, 0x32, 0x91, 0xdf,
	0xb6, 0x8a, 0xcd, 0x5e, 0x4d, 0xb1, 0x99, 0x96, 0x9a, 0xd9, 0xcf, 0x97, 0x60, 0xee, 0x1b, 0x01,
	0x81, 0xef, 0x03, 0x1c, 0x17, 0xb1, 0x94, 0x21, 0x0a, 0x98, 0x22, 0xa0, 0x0e, 0xb2, 0xbb, 0xf1,
	0xd3, 0x24, 0x20, 0x7c, 0x5f, 0x13, 0x38, 0x5c, 0x85, 0x4e, 0x94, 0x65, 0x13, 0x7e, 0x20, 0xda,
	0xd5, 0x96, 0x5d, 0x13, 0xaa, 0xa0, 0x03, 0xce, 0x03, 0x1d, 0x4b, 0x25, 0xe8, 0xb8, 0xa3, 0xda,
	0x65, 0xc2, 0xb9, 0x64, 0x05, 0x1f, 0x96, 0x94, 0x1f, 0x0c, 0xc3, 0x38, 0x20, 0x3c, 0x42, 0x33,
	0x7c, 0x42, 0xcd, 0x96, 0xa5, 0x66, 0x9a, 0xe0, 0x42, 0xcd, 0xca, 0x19, 0x50, 0xb3, 0x5a, 0x0b,
	0x35, 0x6b, 0xf5, 0x50, 0xb3, 0x5e, 0x0b, 0x35, 0xbe, 0x0d, 0x35, 0x59, 0x1e, 0xe6, 0x93, 0x0c,
	0xe1, 0xa2, 0x1d, 0xa8, 0x27, 0x02, 0x41, 0x9b, 0x16, 0x04, 0x5d, 0x2f, 0x22, 0x15, 0xdd, 0x29,
	0x21, 0x81, 0x50, 0x84, 0xcf, 0x87, 0x61, 0xce, 0xb3, 0x3c, 0xd0, 0xd6, 0x4b, 0x34, 0x70, 0xc9,
	0xfe, 0x1d, 0xd8, 0xe8, 0x4f, 0xd2, 0x94, 0xc7, 0x92, 0xc6, 0x07, 0xd2, 0xf9, 0x57, 0x50, 0x8d,
	0xaa, 0x26, 0x21, 0x3b, 0x4f, 0xf2, 0x70, 0xb8, 0x1f, 0x66, 0x27, 0x2a, 0x90, 0xba, 0x52, 0xb6,
	0x43, 0x16, 0x93, 0x1c, 0x49, 0xd8, 0x5d, 0xb1, 0x6e, 0x23, 0x6b, 0x89, 0x4e, 0x78, 0x07, 0x9c,
	0x8f, 0x24, 0x02, 0xf5, 0x2c, 0x5e, 0x4d, 0xd7, 0xbc, 0xe2, 0x55, 0x7c, 0x20, 0x79, 0x5f, 0x23,
	0xbc, 0x84, 0xee, 0xbf, 0x03, 0x9b, 0x92, 0x96, 0x0c, 0x87, 0xbc, 0x9f, 0xf3, 0x81, 0xd2, 0xe3,
	0x2a, 0xf2, 0x57, 0xb6, 0x9d, 0x02, 0xe6, 0xd7, 0x4e, 0x05, 0xf3, 0x5b, 0xb0, 0x26, 0x66, 0xcc,
	0x61, 0x92, 0x3e, 0xe0, 0xa9, 0xea, 0x71, 0x5d, 0xea, 0xe5, 0xd2, 0xc5, 0xdc, 0xde, 0x2b, 0x80,
	0xff, 0x86, 0x04, 0xfe, 0xe2, 0x19, 0x67, 0x5c, 0x1a, 0x1d, 0x47, 0xf1, 0x83, 0x34, 0xea, 0xf3,
	0xee, 0x8e, 0x9a, 0x71, 0x86, 0x54, 0x93, 0x1a, 0x5e, 0x3f, 0x77, 0x6a, 0x60, 0xa7, 0xa7, 0x86,
	0xef, 0x9c, 0x91, 0x1a, 0xde, 0x38, 0x3b, 0x35, 0xfc, 0xc6, 0x2c, 0xa9, 0xe1, 0xbb, 0x34, 0x35,
	0xbc, 0x43, 0x8f, 0x72, 0xde, 0xb4, 0x80, 0x4d, 0x1f, 0x9f, 0x20, 0xb0, 0x19, 0x36, 0xf6, 0x0f,
	0x1e, 0x2c, 0x5b, 0x8d, 0x62, 0xe6, 0x62, 0x33, 0xd9, 0x57, 0x19, 0x42, 0x6d, 0xb9, 0x56, 0xa2,
	0x78, 0x4b, 0xa3, 0x78, 0xdd, 0xa6, 0xca, 0x41, 0xf7, 0x76, 0x19, 0xdd, 0xeb, 0x36, 0x99, 0x62,
	0x1b, 0x6c, 0xe1, 0xb3, 0xbd, 0x9c, 0x53, 0x9a, 0x9a, 0xe5, 0xdc, 0x1b, 0xb0, 0xac, 0xf1, 0x1b,
	0xf1, 0xb7, 0x89, 0xc1, 0x62, 0x13, 0xc5, 0x9c, 0xd4, 0x84, 0x47, 0x72, 0x57, 0x27, 0x8d, 0x70,
	0xc9, 0x42, 0x73, 0xb9, 0x59, 0x90, 0x87, 0xb9, 0xd2, 0x2c, 0x4a, 0x62, 0x09, 0x74, 0x34, 0x98,
	0x6a, 0x48, 0x7e, 0x70, 0x12, 0x66, 0x5c, 0x55, 0x48, 0x08, 0x45, 0x43, 0xe8, 0x2e, 0xcd, 0xbd,
	0x94, 0x24, 0x39, 0xcc, 0x9c, 0x6e, 0x15, 0x1c, 0x9a, 0xc4, 0x3e, 0x84, 0x8d, 0x3d, 0x95, 0xd6,
	0xc4, 0xf0, 0x15, 0x1b, 0x63, 0x37, 0xa3, 0x1a, 0x8c, 0x6c, 0x52, 0x8c, 0x64, 0xd7, 0x70, 0x4f,
	0xa1, 0x07, 0xde, 0xe9, 0xc6, 0x7e, 0x5b, 0xad, 0xf5, 0x35, 0xc3, 0x9b, 0x72, 0xe6, 0x89, 0xdf,
	0x2a, 0xc7, 0x2f, 0xa9, 0xf0, 0xc2, 0xec, 0xae, 0x1b, 0xd9, 0xcf, 0x70, 0xaf, 0x47, 0x55, 0xfb,
	0x9a, 0x36, 0x2c, 0xc6, 0xb2, 0x39, 0xcb, 0xb2, 0x27, 0x6a, 0x57, 0x68, 0xa9, 0x50, 0x73, 0x92,
	0x41, 0x79, 0x70, 0x76, 0x54, 0x16, 0x2d, 0x4b, 0xda, 0xb1, 0x5f, 0x34, 0x61, 0xcd, 0xed, 0x5b,
	0x72, 0xbd, 0xbd, 0x6c, 0x68, 0x96, 0x96, 0x0d, 0x6f, 0xc3, 0xfc, 0x00, 0x6b, 0xe4, 0xea, 0x72,
	0xc0, 0xb6, 0x49, 0xca, 0xd2, 0xf1, 0x18, 0x50, 0xa8, 0x96, 0x62, 0xac, 0xb3, 0x19, 0x57, 0x0b,
	0x0e, 0x54, 0xb7, 0xd5, 0x6a, 0xc1, 0x41, 0x69, 0x9d, 0x03, 0x31, 0xbd, 0xcd, 0xd3, 0x1c, 0x88,
	0x99, 0xad, 0x1e, 0xc5, 0x17, 0x4e, 0x43, 0x71, 0xc6, 0x60, 0x4d, 0xc5, 0x93, 0xd6, 0xba, 0x14,
	0x54, 0xff, 0xdc, 0x04, 0xbf, 0x6c, 0x1c, 0x1e, 0x2d, 0xc8, 0x8c, 0x29, 0xc7, 0x5a, 0xce, 0x17,
	0x8b, 0xa6, 0xd3, 0x67, 0x60, 0x56, 0x3a, 0x32, 0x9e, 0x5d, 0xb2, 0xff, 0x3d, 0x58, 0x8f, 0x93,
	0x74, 0x64, 0xe7, 0x4f, 0x39, 0x7f, 0xca, 0x0d, 0x82, 0x3b, 0xec, 0xe7, 0x13, 0x9b, 0x5b, 0x4e,
	0xef, 0x72, 0x83, 0xd0, 0x54, 0xae, 0x83, 0xd4, 0xaa, 0x4d, 0xfa, 0xd8, 0xa2, 0x89, 0xa5, 0x41,
	0x14, 0xf7, 0x87, 0x93, 0x01, 0xbf, 0xaf, 0x16, 0x7b, 0xa2, 0x15, 0x3d, 0xbd, 0x18, 0x54, 0x35,
	0xb9, 0x4b, 0xc5, 0x85, 0xd2, 0x52, 0x91, 0x7d, 0x21, 0x26, 0xab, 0xb9, 0x33, 0xb1, 0xa3, 0x6f,
	0x6a, 0xd0, 0x82, 0x32, 0x21, 0x29, 0xcf, 0x37, 0x75, 0x28, 0x8a, 0x1c, 0x2b, 0x9b, 0xcd, 0xc6,
	0x41, 0x4e, 0xa9, 0x12, 0x9d, 0x7d, 0x08, 0x97, 0xcd, 0x3a, 0x9f, 0xbe, 0xd6, 0x8d, 0x6f, 0x91,
	0x88, 0x72, 0x03, 0xae, 0xf2, 0x81, 0x4d, 0x60, 0xd9, 0xba, 0xf2, 0x21, 0xb0, 0x58, 0x5f, 0xf9,
	0x20, 0xfa, 0xda, 0xc4, 0x92, 0xc6, 0xb7, 0xc1, 0xd7, 0x0c, 0xae, 0xce, 0x15, 0x2d, 0xec, 0x47,
	0xb4, 0x0c, 0x69, 0x2b, 0x70, 0x3e, 0xbd, 0xff, 0xd7, 0x83, 0x8e, 0xb9, 0x68, 0xf0, 0x72, 0x89,
	0x70, 0x0b, 0xe6, 0xc5, 0x3e, 0xf4, 0xee, 0x41, 0x51, 0xa8, 0x92, 0x4f, 0xaf, 0x3e, 0x21, 0xfa,
	0xdf, 0x85, 0x15, 0x54, 0xc7, 0xb8, 0x66, 0x01, 0x8d, 0x71, 0xa8, 0xf2, 0x0d, 0xee, 0x19, 0x3c,
	0x25, 0xb1, 0xff, 0xf6, 0x60, 0x4b, 0xdb, 0x6d, 0x17, 0x59, 0xbf, 0xed, 0x4e, 0xb0, 0x8e, 0xa8,
	0x16, 0xea, 0x0f, 0x3d, 0x17, 0x69, 0xa9, 0x96, 0xfd, 0x9d, 0x87, 0x50, 0xa5, 0x6d, 0xbe, 0x17,
	0x65, 0xb9, 0x03, 0xf8, 0xde, 0x59, 0xe9, 0xa8, 0x59, 0x4e, 0x47, 0x96, 0xb3, 0x5a, 0xf5, 0xce,
	0x9a, 0xab, 0xa9, 0x27, 0xb7, 0x2d, 0x25, 0x23, 0x85, 0x94, 0xb6, 0x96, 0xef, 0xda, 0x59, 0xec,
	0x9a, 0xbb, 0xc0, 0x3b, 0xc7, 0x91, 0x63, 0x39, 0x97, 0xfd, 0x95, 0x07, 0x4b, 0xe4, 0xe6, 0x8e,
	0x30, 0x55, 0xdd, 0xdc, 0xa1, 0xe8, 0x42, 0x48, 0x44, 0xe9, 0xa6, 0x7b, 0x9c, 0xac, 0xc6, 0xa9,
	0x65, 0x8d, 0xd3, 0x2d, 0x58, 0x53, 0xdd, 0x4d, 0x24, 0xca, 0xfc, 0x55, 0xa2, 0xe3, 0xe8, 0xb8,
	0x57, 0x81, 0xe4, 0xa6, 0x1f, 0x69, 0x54, 0x25, 0x42, 0x9a, 0x59, 0xa5, 0x35, 0x68, 0x85, 0x7d,
	0x79, 0x88, 0xb3, 0x18, 0x88, 0x9f, 0x58, 0x5b, 0x91, 0x02, 0x8d, 0x92, 0x6d, 0x55, 0x5b, 0x71,
	0xe8, 0xec, 0xf7, 0xa1, 0x47, 0x4a, 0x21, 0xae, 0xb6, 0x17, 0x39, 0xf6, 0xf8, 0x17, 0x0f, 0xd6,
	0xcb, 0x57, 0xd1, 0xc4, 0x86, 0x5a, 0x10, 0xe9, 0x44, 0xd4, 0x84, 0x12, 0x74, 0x9a, 0x89, 0xd6,
	0xb2, 0x26, 0xda, 0x75, 0xb9, 0xd5, 0xb0, 0x0a, 0xbc, 0x84, 0x52, 0x77, 0x8b, 0x42, 0x60, 0x0d,
	0xbe, 0xcc, 0xf8, 0x65, 0x5e, 0x62, 0x8d, 0x4d, 0x65, 0xff, 0xe3, 0xc1, 0xb6, 0xd4, 0xbd, 0x50,
	0x5c, 0xd8, 0x44, 0xc0, 0x64, 0xd7, 0xb5, 0x61, 0xf7, 0xeb, 0xb0, 0xa1, 0x6a, 0x3e, 0xd9, 0xe7,
	0x33, 0xf3, 0xee, 0xf9, 0x0c, 0x83, 0x4b, 0xf2, 0x58, 0x38, 0x91, 0xf7, 0x0b, 0xe4, 0x5d, 0x26,
	0x8b, 0x56, 0x7b, 0x86, 0xf3, 0x95, 0x07, 0x97, 0x02, 0xfe, 0x0c, 0x4d, 0x79, 0x45, 0x50, 0xa2,
	0xef, 0x5a, 0x28, 0x75, 0x5a, 0xf4, 0xae, 0x85, 0x52, 0xc7, 0x0a, 0x89, 0x39, 0x37, 0x24, 0x6c,
	0x37, 0xb5, 0xab, 0xdc, 0xb4, 0x27, 0x31, 0x5a, 0x21, 0xea, 0x9e, 0xc6, 0x68, 0xe5, 0xbe, 0x05,
	0x0b, 0x8e, 0x4e, 0x60, 0x45, 0x9e, 0xb4, 0x68, 0x2b, 0xdf, 0xb3, 0xa1, 0x68, 0xc7, 0xba, 0xab,
	0x59, 0x31, 0xfe, 0x33, 0xa0, 0xd1, 0x46, 0xc5, 0x25, 0x4d, 0x89, 0x4a, 0x6e, 0x00, 0x51, 0x52,
	0x55, 0x08, 0xe5, 0x74, 0x53, 0x57, 0x84, 0x02, 0xa2, 0xd1, 0xae, 0x1d, 0xd0, 0x1a, 0x8d, 0x6c,
	0x3a, 0x45, 0x23, 0x4b, 0x95, 0x33, 0xd0, 0x48, 0xa1, 0x4b, 0xd3, 0xa0, 0xcb, 0x29, 0xca, 0x94,
	0x50, 0x67, 0xae, 0x1a, 0x75, 0x6a, 0x6f, 0x39, 0x55, 0xa1, 0x91, 0xd1, 0xf6, 0x22, 0x68, 0xf4,
	0xc7, 0xb0, 0x58, 0x5c, 0x52, 0xc5, 0x4b, 0x28, 0x61, 0x76, 0x62, 0x5d, 0x42, 0x51, 0xcf, 0xe7,
	0x28, 0xdb, 0xd6, 0xcc, 0x67, 0xf6, 0xe7, 0x9e, 0x48, 0x74, 0x5a, 0x79, 0x73, 0x0b, 0x76, 0x3e,
	0xc5, 0x5c, 0xe6, 0xe8, 0x2b, 0x18, 0xec, 0x24, 0xa7, 0xf8, 0x2e, 0x74, 0xf7, 0xed, 0x3f, 0x3c,
	0x58, 0x2f, 0x49, 0x3e, 0xd5, 0xe0, 0x62, 0xfe, 0x14, 0xf1, 0xa6, 0x9e, 0x6a, 0x87, 0xb9, 0x6e,
	0xed, 0xb3, 0xa9, 0x2e, 0x7f, 0xaa, 0x9d, 0x84, 0x7c, 0x38, 0x03, 0xac, 0xae, 0x03, 0x88, 0xb7,
	0x3d, 0x94, 0xfb, 0x40, 0xb9, 0xec, 0x23, 0x14, 0xab, 0x46, 0xb6, 0x68, 0xd7, 0xc8, 0xd8, 0x2f,
	0x3d, 0x39, 0xa2, 0x38, 0x85, 0x8d, 0x11, 0x9e, 0x6b, 0x44, 0xdd, 0x9d, 0x88, 0x4a, 0xe3, 0xae,
	0x03, 0xe0, 0x50, 0xdf, 0x7f, 0x1e, 0xeb, 0x92, 0x3b, 0xa1, 0x9c, 0x7e, 0x97, 0x83, 0xfd, 0x0c,
	0x0b, 0x11, 0x5a, 0xa9, 0x8a, 0x4d, 0xf4, 0x05, 0xeb, 0x04, 0x67, 0xa8, 0xc7, 0x3e, 0x52, 0xa5,
	0x0e, 0xad, 0xc2, 0x5b, 0xd0, 0x11, 0x03, 0x7d, 0x97, 0xc0, 0x1b, 0xbd, 0xb2, 0x2d, 0x78, 0x02,
	0xc3, 0xc1, 0x6e, 0x88, 0xfe, 0xcf, 0x4c, 0xfc, 0x94, 0xb6, 0xbd, 0xbb, 0xb0, 0xaa, 0x5f, 0xa0,
	0x58, 0x6e, 0xdb, 0xe8, 0x59, 0x1f, 0xde, 0xea, 0xec, 0xf4, 0x7d, 0x55, 0x5d, 0x2a, 0xf6, 0x26,
	0xb2, 0x54, 0x44, 0x32, 0xa9, 0x26, 0xb8, 0x30, 0xc8, 0x7e, 0xee, 0xc1, 0x06, 0xdd, 0xcf, 0x15,
	0x52, 0xde, 0x76, 0xa6, 0xd8, 0x36, 0x3d, 0x12, 0x78, 0xf5, 0x73, 0xec, 0x57, 0x72, 0xef, 0xef,
	0x88, 0x3e, 0xc3, 0x96, 0x59, 0xa7, 0x99, 0x9e, 0x4e, 0x73, 0xb5, 0xd3, 0xa9, 0x74, 0x97, 0xe8,
	0x16, 0xac, 0x45, 0xd9, 0x6e, 0x9a, 0xf2, 0x30, 0xcd, 0xf6, 0x87, 0x3c, 0x4c, 0xf9, 0x40, 0x6d,
	0xd6, 0x4b, 0x74, 0x11, 0x6c, 0x42, 0x83, 0x7d, 0x79, 0xd6, 0xa6, 0x72, 0x24, 0x25, 0x9d, 0x36,
	0xf9, 0xb0, 0xf4, 0x12, 0x66, 0x27, 0x42, 0x53, 0x9e, 0x75, 0x3b, 0x78, 0x04, 0x4d, 0x28, 0x6c,
	0x47, 0x24, 0xd9, 0x67, 0xc4, 0x49, 0xa5, 0x48, 0xda, 0x17, 0x3b, 0x97, 0xf1, 0x70, 0x4a, 0x79,
	0x7e, 0xd3, 0x0e, 0xa5, 0x53, 0x86, 0x51, 0xc5, 0xd2, 0x0f, 0x30, 0x5e, 0xb1, 0x88, 0xf8, 0x53,
	0xf4, 0x4f, 0x45, 0xc9, 0xb0, 0x6a, 0xfe, 0xb3, 0x37, 0x55, 0x1c, 0x93, 0xae, 0xda, 0xe1, 0x1e,
	0x71, 0x38, 0xfb, 0x48, 0xac, 0x88, 0xc8, 0x67, 0x06, 0xb2, 0x1c, 0x9a, 0xa4, 0xd6, 0x75, 0x5b,
	0x43, 0x29, 0x85, 0xec, 0xff, 0x79, 0xb0, 0x21, 0xbb, 0x4a, 0x03, 0x8a, 0x7b, 0xde, 0x0c, 0x2e,
	0x15, 0x27, 0x79, 0xf4, 0x42, 0x17, 0xa5, 0x99, 0xd3, 0xa5, 0x66, 0xfd, 0xe9, 0x52, 0xab, 0xf6,
	0x74, 0x69, 0xce, 0x3e, 0x5d, 0x52, 0xc1, 0xd7, 0xae, 0x09, 0x3e, 0xfb, 0x0a, 0x90, 0x29, 0xe3,
	0x1c, 0x84, 0xd3, 0xcc, 0x29, 0xe3, 0x08, 0x12, 0x39, 0x4f, 0x40, 0xef, 0xa9, 0x43, 0x41, 0x8b,
	0xc6, 0x7e, 0xe1, 0xe1, 0xf0, 0x48, 0xf3, 0x11, 0x8e, 0xbe, 0x9e, 0xea, 0xa9, 0xf6, 0xd3, 0x1c,
	0xf5, 0x93, 0x0f, 0x73, 0x4f, 0xd3, 0x64, 0xa4, 0x2c, 0xc6, 0xdf, 0xac, 0xaf, 0x86, 0x9d, 0xa8,
	0x74, 0xc7, 0x8e, 0xb9, 0xe2, 0xbe, 0x65, 0xc5, 0x98, 0x9d, 0x77, 0xd9, 0xf7, 0xef, 0x1e, 0x2c,
	0xd1, 0xaf, 0x24, 0x76, 0xf4, 0x87, 0x1e, 0xf6, 0x9d, 0x49, 0x4d, 0x22, 0x65, 0x86, 0x66, 0x4d,
	0x99, 0xa1, 0x55, 0x73, 0xa3, 0x6b, 0xae, 0xe6, 0x5e, 0x5b, 0xdb, 0xdd, 0xb4, 0xaa, 0xd7, 0xb9,
	0xfb, 0x9e, 0x12, 0xdd, 0xad, 0xb2, 0x2c, 0x94, 0xab, 0x2c, 0xff, 0xe6, 0x81, 0xaf, 0xec, 0xa3,
	0x9b, 0xa2, 0x73, 0x99, 0xf9, 0x4a, 0xaa, 0x2c, 0x57, 0xa1, 0x53, 0xa8, 0x7d, 0xa0, 0x2c, 0x35,
	0x84, 0x33, 0x56, 0x1c, 0x35, 0x1f, 0x79, 0xb0, 0x5f, 0x7b, 0x88, 0x58, 0xca, 0xae, 0x57, 0x57,
	0x47, 0x31, 0x8a, 0xb6, 0x5c, 0x45, 0x1d, 0x87, 0xcd, 0x9d, 0xe6, 0x30, 0xeb, 0xe6, 0x1e, 0xeb,
	0x2b, 0xec, 0xa4, 0xda, 0xd6, 0x60, 0x67, 0x79, 0xa0, 0xce, 0x1b, 0xc6, 0xbf, 0xf6, 0xc0, 0x2f,
	0x7f, 0x09, 0x74, 0x8e, 0x1d, 0x83, 0x65, 0x75, 0xd3, 0xb5, 0x5a, 0xed, 0x27, 0x5a, 0xd6, 0x7e,
	0xa2, 0xea, 0x1e, 0xea, 0x4c, 0x55, 0x0c, 0xeb, 0xce, 0xaa, 0xad, 0xf5, 0x85, 0x76, 0x0d, 0x7f,
	0xe3, 0xc1, 0xb2, 0xf5, 0x45, 0x95, 0x2c, 0x01, 0x1f, 0x94, 0x02, 0xdd, 0x26, 0x9e, 0xe1, 0x83,
	0xba, 0x4a, 0x0e, 0x16, 0x8a, 0x0f, 0xdc, 0x99, 0xda, 0x2e, 0x0a, 0xc5, 0x6e, 0xcb, 0x3b, 0xff,
	0x78, 0x03, 0x16, 0xd4, 0x47, 0xa5, 0xfe, 0x0f, 0xf1, 0x73, 0x22, 0x01, 0x54, 0xf4, 0xae, 0x74,
	0xd5, 0x17, 0x9e, 0xbd, 0x55, 0xfd, 0xa9, 0x58, 0x16, 0x1d, 0xc7, 0x8f, 0x5e, 0xb0, 0x86, 0xff,
	0xbb, 0xb0, 0x29, 0x7b, 0x3b, 0xf7, 0x7d, 0xab, 0x3f, 0xf2, 0xac, 0x92, 0xf0, 0x11, 0x7e, 0x9e,
	0x12, 0xe6, 0xdc, 0xbe, 0x37, 0x5b, 0xf9, 0x95, 0x67, 0x55, 0xff, 0x8f, 0x61, 0xfd, 0x27, 0x13,
	0x9e, 0xda, 0x17, 0x20, 0xb7, 0xf4, 0x0a, 0xc0, 0xba, 0x71, 0xd9, 0xeb, 0xd2, 0xe3, 0x25, 0xda,
	0xc2, 0x1a, 0xfe, 0x7d, 0x58, 0x45, 0x41, 0xe4, 0xee, 0xe2, 0x6b, 0x46, 0x4c, 0xe9, 0x62, 0x63,
	0xef, 0x1a, 0x95, 0x55, 0x6a, 0x66, 0x0d, 0xff, 0x77, 0x60, 0x19, 0x05, 0x9a, 0x4b, 0x8b, 0x46,
	0x5c, 0x41, 0xeb, 0x6d, 0x52, 0x29, 0x05, 0x95, 0x35, 0xfc, 0x7d, 0xb8, 0x6c, 0x75, 0xde, 0x9b,
	0xaa, 0x5d, 0xe4, 0x2c, 0x42, 0x76, 0x61, 0xc3, 0x11, 0x22, 0x2f, 0x07, 0xcf, 0x20, 0xe2, 0x0f,
	0xa1, 0x8b, 0x22, 0xaa, 0xee, 0xc2, 0x1a, 0x0f, 0x54, 0x5d, 0xdf, 0xed, 0xdd, 0xa0, 0x22, 0x2b,
	0x18, 0x58, 0xc3, 0x7f, 0x02, 0xd7, 0xeb, 0xa4, 0x2b, 0x5d, 0x2f, 0xfe, 0x8e, 0x01, 0xec, 0xd4,
	0xbf, 0x43, 0x39, 0xf5, 0xe2, 0x6f, 0xd1, 0x13, 0xc1, 0xf9, 0x4e, 0xad, 0xfa, 0x4b, 0xeb, 0xd3,
	0x02, 0xd9, 0xfa, 0x72, 0x88, 0x04, 0x32, 0xa5, 0xdb, 0x81, 0x4c, 0x5b, 0x58, 0xc3, 0xff, 0x04,
	0x36, 0x89, 0xa0, 0xc3, 0x24, 0x55, 0xdf, 0xf1, 0x94, 0x64, 0x49, 0x7a, 0x95, 0x2c, 0xd9, 0xc2,
	0x1a, 0xfe, 0x03, 0xd8, 0xb2, 0x65, 0xe9, 0x6f, 0x63, 0xba, 0xae, 0xb4, 0xa2, 0xa5, 0xd7, 0x2b,
	0xcb, 0x2b, 0xda, 0x58, 0xc3, 0x7f, 0x1f, 0xd6, 0xa5, 0xa3, 0xd4, 0x94, 0x41, 0x70, 0x2c, 0xdf,
	0x95, 0xab, 0xf2, 0x50, 0x31, 0xa1, 0xf4, 0x69, 0x33, 0x09, 0xe4, 0x82, 0x66, 0x07, 0xb2, 0x3e,
	0x91, 0x37, 0xee, 0xb5, 0x8e, 0xc4, 0x89, 0x4b, 0x28, 0xdd, 0x76, 0x09, 0x6d, 0x41, 0x9c, 0xd8,
	0x2e, 0x09, 0xda, 0x9b, 0xaa, 0xc2, 0xc3, 0xcb, 0x08, 0xfc, 0xa0, 0xf0, 0x08, 0x3d, 0xb0, 0xab,
	0xf8, 0xe8, 0xfc, 0x54, 0xf4, 0xb4, 0x8f, 0xfb, 0x2a, 0x3f, 0x3c, 0xaf, 0xea, 0xff, 0xa9, 0x82,
	0x19, 0xaa, 0x52, 0xb0, 0xf7, 0xd9, 0x83, 0x97, 0x32, 0xe4, 0x3d, 0x58, 0x95, 0xca, 0x98, 0x73,
	0x80, 0xd2, 0xa7, 0xd4, 0x55, 0x4a, 0x68, 0x07, 0xd0, 0x23, 0x98, 0x8a, 0x0f, 0xaa, 0xab, 0xfa,
	0x1e, 0xc0, 0x96, 0xec, 0x5b, 0x3a, 0x82, 0xa8, 0xfb, 0xa8, 0xba, 0x4a, 0xca, 0x67, 0x2a, 0xcc,
	0x35, 0xd3, 0xde, 0x54, 0xdd, 0x7a, 0xb9, 0x62, 0xfc, 0x60, 0x9d, 0x43, 0xf5, 0xac, 0x9b, 0x0a,
	0x56, 0x13, 0x6b, 0xf8, 0x3f, 0x51, 0x31, 0x42, 0xe4, 0x99, 0xa3, 0xa3, 0x97, 0x13, 0x59, 0xa5,
	0x62, 0x72, 0x01, 0x79, 0x87, 0x70, 0x45, 0x01, 0x56, 0xa9, 0xce, 0x5c, 0xfb, 0xa7, 0x03, 0x55,
	0xae, 0xfb, 0x04, 0xb6, 0x8b, 0xc1, 0x2b, 0x4b, 0x3a, 0xe5, 0x2f, 0x07, 0xaa, 0x64, 0xdd, 0x87,
	0x1b, 0x32, 0x97, 0x5b, 0x15, 0x74, 0xa1, 0xb0, 0x1e, 0x8f, 0x0d, 0x92, 0xd9, 0x8b, 0x42, 0x7c,
	0xef, 0xb2, 0x95, 0xd6, 0x0b, 0x32, 0x8e, 0xc3, 0xeb, 0xb5, 0x02, 0x8b, 0x93, 0x8d, 0x19, 0x45,
	0x06, 0xc0, 0x6a, 0x45, 0x0a, 0x5a, 0xd4, 0x0f, 0xe3, 0x7c, 0x46, 0x99, 0xa7, 0xd9, 0xad, 0x4e,
	0x25, 0x66, 0x13, 0xf8, 0x10, 0xbe, 0x53, 0x2b, 0xf0, 0x60, 0x3c, 0xc8, 0x1f, 0x8e, 0xa6, 0x22,
	0xed, 0xcd, 0x26, 0xd4, 0x9d, 0x6a, 0x66, 0x98, 0xeb, 0xfe, 0x0c, 0xa2, 0x6a, 0x8c, 0x77, 0xd5,
	0x32, 0x8b, 0x56, 0x50, 0x48, 0xf6, 0xd5, 0xd4, 0xde, 0x96, 0x95, 0x74, 0x35, 0x9d, 0x35, 0xfc,
	0xef, 0xc3, 0x8a, 0x52, 0xa4, 0xa8, 0x95, 0xbb, 0x7f, 0x27, 0x71, 0x5a, 0xf6, 0xd0, 0x35, 0x4e,
	0x92, 0x3d, 0x0a, 0x9a, 0x9d, 0x3d, 0x0a, 0x2a, 0x66, 0x8f, 0x6d, 0xab, 0xf3, 0x9e, 0xd4, 0x48,
	0x16, 0x77, 0x67, 0x11, 0xf4, 0x63, 0xb5, 0x24, 0xc3, 0x82, 0x99, 0x29, 0x86, 0x6e, 0xda, 0x22,
	0xd4, 0xba, 0x63, 0xcb, 0x15, 0xa2, 0x97, 0x1b, 0x9f, 0x80, 0xaf, 0xc5, 0x98, 0x5b, 0x44, 0x57,
	0xec, 0x7c, 0xa8, 0x1b, 0x7a, 0xf5, 0xd7, 0xaa, 0x28, 0x6c, 0x9b, 0xc2, 0x68, 0xe9, 0xef, 0x36,
	0xaa, 0x1c, 0x7a, 0x08, 0x2b, 0xa8, 0xc3, 0x45, 0xdf, 0x7f, 0xa4, 0xd6, 0x2b, 0x9a, 0xae, 0x7c,
	0x62, 0x02, 0x91, 0x16, 0x04, 0x7b, 0x57, 0xa8, 0x2c, 0xd2, 0xc0, 0x1a, 0x66, 0x2f, 0x63, 0x95,
	0xde, 0xaa, 0xfe, 0x06, 0xa4, 0xca, 0x1e, 0x3a, 0x34, 0xa4, 0xd0, 0x43, 0x86, 0xc6, 0x50, 0xed,
	0xa1, 0x31, 0x74, 0xd6, 0xf0, 0xef, 0x41, 0xaf, 0x42, 0xcc, 0xde, 0xf4, 0x01, 0x56, 0x97, 0x66,
	0x95, 0xf6, 0x69, 0xb1, 0xda, 0x70, 0xa4, 0xc9, 0x42, 0xdf, 0x8c, 0xc2, 0x74, 0xa2, 0xa5, 0x1b,
	0xd3, 0x8a, 0xbf, 0x0e, 0xa9, 0xf2, 0xce, 0x11, 0x74, 0xad, 0xd9, 0x4f, 0x45, 0xd4, 0xff, 0x01,
	0xc8, 0x19, 0x6b, 0x16, 0x2a, 0xa4, 0xf2, 0x8f, 0x48, 0xaa, 0xb3, 0xc4, 0x6b, 0x72, 0x57, 0x63,
	0xaa, 0x18, 0x7b, 0xc5, 0xc3, 0xdd, 0x03, 0x1a, 0x36, 0x84, 0xc3, 0x0e, 0x1b, 0xd2, 0x80, 0x59,
	0xe2, 0x5a, 0xad, 0x40, 0xf4, 0xf3, 0xec, 0x22, 0x3f, 0x53, 0x41, 0x60, 0x89, 0x7c, 0xc0, 0x5f,
	0x56, 0xde, 0x93, 0x79, 0xfc, 0x87, 0xa7, 0x77, 0xff, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x74, 0x6d,
	0x36, 0x6a, 0x0c, 0x4a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FinanceClient is the client API for Finance service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FinanceClient interface {
	//存款操作1
	CreateDepositAsset(ctx context.Context, in *DepositAsset, opts ...grpc.CallOption) (*types.UnsignTx, error)
	//取款操作
	CreateWithdrawlAsset(ctx context.Context, in *WithdrawlAsset, opts ...grpc.CallOption) (*types.UnsignTx, error)
	//合约内转账
	CreateTransferCoins(ctx context.Context, in *TransferCoins, opts ...grpc.CallOption) (*types.UnsignTx, error)
	//查询合约子账户资产1
	//查询用户指定合约下token symbol资产的信息1
	QueryAccountAsset(ctx context.Context, in *ReqAccountAsset, opts ...grpc.CallOption) (*ReplyAccountAsset, error)
	//查询用户所有合约下，所有token symbol资产的信息1
	QueryUserAssets(ctx context.Context, in *ReqFinanceUserAssets, opts ...grpc.CallOption) (*ReplyFinanceUserAssets, error)
	//查询出入金记录1
	QueryDWRecord(ctx context.Context, in *ReqDWRecord, opts ...grpc.CallOption) (*ReplyDWRecord, error)
	//以token symbol为条件过滤出入金记录 1
	QueryDWRecordBySymbol(ctx context.Context, in *ReqDWRecord, opts ...grpc.CallOption) (*ReplyDWRecord, error)
	//通过Addr为条件过滤出入金记录1
	QueryDWRecordByAddr(ctx context.Context, in *ReqDWRecord, opts ...grpc.CallOption) (*ReplyDWRecord, error)
	//查询合约内转账记录
	QueryTransferCoinsRecord(ctx context.Context, in *ReqTransferCoinsRecord, opts ...grpc.CallOption) (*ReplyTransferCoinsRecord, error)
	QueryTransferCoinsRecordByAddr(ctx context.Context, in *ReqTransferCoinsRecord, opts ...grpc.CallOption) (*ReplyTransferCoinsRecord, error)
	QueryTransferCoinsRecordBySymbol(ctx context.Context, in *ReqTransferCoinsRecord, opts ...grpc.CallOption) (*ReplyTransferCoinsRecord, error)
	//添加授信Token
	CreateAddCreditToken(ctx context.Context, in *AddCreditToken, opts ...grpc.CallOption) (*types.UnsignTx, error)
	//查看具体授信
	QueryCreditDetail(ctx context.Context, in *ReqCreditDetail, opts ...grpc.CallOption) (*ReplyCreditDetail, error)
	//为资金方查询授信
	QueryCreditForFunder(ctx context.Context, in *ReqCreditFunder, opts ...grpc.CallOption) (*ReplyCreditFunder, error)
	//为核心企业查询授信
	QueryCreditForCoreFirm(ctx context.Context, in *ReqCreditCoreFirm, opts ...grpc.CallOption) (*ReplyCreditCoreFirm, error)
	//创建白条信息
	CreateFinanceBill(ctx context.Context, in *CreateBill, opts ...grpc.CallOption) (*types.UnsignTx, error)
	//查询具体白条信息
	QueryBillInfo(ctx context.Context, in *ReqBillInfo, opts ...grpc.CallOption) (*ReplyBillInfo, error)
	//查询和借款人相关的Bill信息
	QueryBorrowerBill(ctx context.Context, in *ReqBorrowerBill, opts ...grpc.CallOption) (*ReplyBorrowerBill, error)
	//ReleaseBill发行白条之后能查看到相应的还款信息
	QueryBorrowerBillByStatus(ctx context.Context, in *ReqBorrowerBill, opts ...grpc.CallOption) (*ReplyBorrowerBill, error)
	//发行白条
	CreateReleaseBill(ctx context.Context, in *ReleaseBill, opts ...grpc.CallOption) (*types.UnsignTx, error)
	//撤销发布白条
	CreateUnReleaseBill(ctx context.Context, in *UnReleaseBill, opts ...grpc.CallOption) (*types.UnsignTx, error)
	//查询已发行未发布的白条列表，RBNP：Released but not published 没有写用不到
	QueryBorrowerBillRBNP(ctx context.Context, in *ReqBorrowerBill, opts ...grpc.CallOption) (*ReplyBorrowerBill, error)
	//拆分白条操作
	CreateSplitBill(ctx context.Context, in *SplitBill, opts ...grpc.CallOption) (*types.UnsignTx, error)
	CreateUnSplitBill(ctx context.Context, in *UnSplitBill, opts ...grpc.CallOption) (*types.UnsignTx, error)
	CreateConfirmSplitBill(ctx context.Context, in *ConfirmSplitBill, opts ...grpc.CallOption) (*types.UnsignTx, error)
	//查询拆分白条信息,通过txHash、SplitAddr、ToAddr
	QuerySplitBillByTxHash(ctx context.Context, in *ReqSplitBillList, opts ...grpc.CallOption) (*ReplySplitBillList, error)
	QuerySplitBillBySplitAddr(ctx context.Context, in *ReqSplitBillList, opts ...grpc.CallOption) (*ReplySplitBillList, error)
	QuerySplitBillByToAddr(ctx context.Context, in *ReqSplitBillList, opts ...grpc.CallOption) (*ReplySplitBillList, error)
	//申请融资
	CreateApplyForFinancing(ctx context.Context, in *ApplyForFinancing, opts ...grpc.CallOption) (*types.UnsignTx, error)
	//撤销融资申请
	CreateUnApplyForFinancing(ctx context.Context, in *UnApplyForFinancing, opts ...grpc.CallOption) (*types.UnsignTx, error)
	//根据申请哈息请求融资申请列表
	QueryApplyFinancingListByTxHash(ctx context.Context, in *ReqApplyList, opts ...grpc.CallOption) (*ReplyApplyList, error)
	//根据授信人请求融资申请列表
	QueryApplyFinancingListByCreditor(ctx context.Context, in *ReqApplyList, opts ...grpc.CallOption) (*ReplyApplyList, error)
	//根据申请人请求融资申请列表
	QueryApplyFinancingListByApplicant(ctx context.Context, in *ReqApplyList, opts ...grpc.CallOption) (*ReplyApplyList, error)
	//根据白条ID请求融资申请列表
	QueryApplyFinancingListByBillID(ctx context.Context, in *ReqApplyList, opts ...grpc.CallOption) (*ReplyApplyList, error)
	//根据授信标识请求融资申请列表
	QueryApplyFinancingListByDpdtSmybol(ctx context.Context, in *ReqApplyList, opts ...grpc.CallOption) (*ReplyApplyList, error)
	//确认融资
	CreateConfirmFinancing(ctx context.Context, in *ConfirmFinancing, opts ...grpc.CallOption) (*types.UnsignTx, error)
	//查询token当前价值 根据token的数量查看token当前的价值
	QueryTokenValue(ctx context.Context, in *ReqTokenValue, opts ...grpc.CallOption) (*ReplyTokenValue, error)
	//白条持有人兑现
	CreateCashBill(ctx context.Context, in *CashBill, opts ...grpc.CallOption) (*types.UnsignTx, error)
	//查询票据兑现列表
	QueryCashList(ctx context.Context, in *ReqCashList, opts ...grpc.CallOption) (*ReplyCashList, error)
	//以tokenOwner为条件过滤票据兑现列表
	QueryCashListByTokenOwner(ctx context.Context, in *ReqCashList, opts ...grpc.CallOption) (*ReplyCashList, error)
	//查询指定白条的兑现记录:inAmount, outValue
	QueryBillCashRecord(ctx context.Context, in *ReqCashRecord, opts ...grpc.CallOption) (*ReplyCashRecord, error)
	//查询票据的还款信息 这个可以查到想要的信息，根据兑现列表进行还款信息查询
	QueryBillRepayInfo(ctx context.Context, in *ReqBillRepayInfo, opts ...grpc.CallOption) (*ReplyBillRepayInfo, error)
	//还款
	CreateRepayBill(ctx context.Context, in *RepayBill, opts ...grpc.CallOption) (*types.UnsignTx, error)
	//只有发布的白条可以进行这个查询，查询对应白条的还款信息，包括：当前期数，总期数，当前期应还款额，正常还款额度，截至还款日期, 当前还款是否包含逾期还款, 逾期日息;
	QueryRepayInfo(ctx context.Context, in *ReqBillRepayInfo, opts ...grpc.CallOption) (*ReplyBillRepayInfo, error)
	//查询指定白条的还款记录 这个可以查到想要的信息
	QueryBillRepayRecord(ctx context.Context, in *ReqRepayRecord, opts ...grpc.CallOption) (*ReplyRepayRecord, error)
	//举报失信人
	CreateReportBroken(ctx context.Context, in *ReportBroken, opts ...grpc.CallOption) (*types.UnsignTx, error)
	//查询黑名单列表，对外开放;逾期已还款的用户将不会出现在黑名单列表中
	QueryBillBrokenList(ctx context.Context, in *ReqBrokenList, opts ...grpc.CallOption) (*ReplyBrokenList, error)
	//通过手机号查询黑名单列表
	QueryBillBrokenListByPhone(ctx context.Context, in *ReqBrokenList, opts ...grpc.CallOption) (*ReplyBrokenList, error)
	//通过账户地址查询黑名单列表
	QueryBillBrokenListByAddr(ctx context.Context, in *ReqBrokenList, opts ...grpc.CallOption) (*ReplyBrokenList, error)
	//白条交付操作相关
	CreateDeliverBill(ctx context.Context, in *DeliverBill, opts ...grpc.CallOption) (*types.UnsignTx, error)
	CreateConfirmDeliverBill(ctx context.Context, in *ConfirmDeliverBill, opts ...grpc.CallOption) (*types.UnsignTx, error)
	CreateUnDeliverBill(ctx context.Context, in *UnDeliverBill, opts ...grpc.CallOption) (*types.UnsignTx, error)
	//根据Hash查询交付条目
	QueryDeliverListByDeliverID(ctx context.Context, in *ReqDeliverList, opts ...grpc.CallOption) (*ReplyDeliverList, error)
	//根据交付人地址查询交付条目
	QueryDeliverListByDeliverAddr(ctx context.Context, in *ReqDeliverList, opts ...grpc.CallOption) (*ReplyDeliverList, error)
	//根据被交付人地址查询交付条目
	QueryDeliverListByPeerAddr(ctx context.Context, in *ReqDeliverList, opts ...grpc.CallOption) (*ReplyDeliverList, error)
}

type financeClient struct {
	cc grpc.ClientConnInterface
}

func NewFinanceClient(cc grpc.ClientConnInterface) FinanceClient {
	return &financeClient{cc}
}

func (c *financeClient) CreateDepositAsset(ctx context.Context, in *DepositAsset, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.finance/CreateDepositAsset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) CreateWithdrawlAsset(ctx context.Context, in *WithdrawlAsset, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.finance/CreateWithdrawlAsset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) CreateTransferCoins(ctx context.Context, in *TransferCoins, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.finance/CreateTransferCoins", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryAccountAsset(ctx context.Context, in *ReqAccountAsset, opts ...grpc.CallOption) (*ReplyAccountAsset, error) {
	out := new(ReplyAccountAsset)
	err := c.cc.Invoke(ctx, "/types.finance/QueryAccountAsset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryUserAssets(ctx context.Context, in *ReqFinanceUserAssets, opts ...grpc.CallOption) (*ReplyFinanceUserAssets, error) {
	out := new(ReplyFinanceUserAssets)
	err := c.cc.Invoke(ctx, "/types.finance/QueryUserAssets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryDWRecord(ctx context.Context, in *ReqDWRecord, opts ...grpc.CallOption) (*ReplyDWRecord, error) {
	out := new(ReplyDWRecord)
	err := c.cc.Invoke(ctx, "/types.finance/QueryDWRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryDWRecordBySymbol(ctx context.Context, in *ReqDWRecord, opts ...grpc.CallOption) (*ReplyDWRecord, error) {
	out := new(ReplyDWRecord)
	err := c.cc.Invoke(ctx, "/types.finance/QueryDWRecordBySymbol", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryDWRecordByAddr(ctx context.Context, in *ReqDWRecord, opts ...grpc.CallOption) (*ReplyDWRecord, error) {
	out := new(ReplyDWRecord)
	err := c.cc.Invoke(ctx, "/types.finance/QueryDWRecordByAddr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryTransferCoinsRecord(ctx context.Context, in *ReqTransferCoinsRecord, opts ...grpc.CallOption) (*ReplyTransferCoinsRecord, error) {
	out := new(ReplyTransferCoinsRecord)
	err := c.cc.Invoke(ctx, "/types.finance/QueryTransferCoinsRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryTransferCoinsRecordByAddr(ctx context.Context, in *ReqTransferCoinsRecord, opts ...grpc.CallOption) (*ReplyTransferCoinsRecord, error) {
	out := new(ReplyTransferCoinsRecord)
	err := c.cc.Invoke(ctx, "/types.finance/QueryTransferCoinsRecordByAddr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryTransferCoinsRecordBySymbol(ctx context.Context, in *ReqTransferCoinsRecord, opts ...grpc.CallOption) (*ReplyTransferCoinsRecord, error) {
	out := new(ReplyTransferCoinsRecord)
	err := c.cc.Invoke(ctx, "/types.finance/QueryTransferCoinsRecordBySymbol", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) CreateAddCreditToken(ctx context.Context, in *AddCreditToken, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.finance/CreateAddCreditToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryCreditDetail(ctx context.Context, in *ReqCreditDetail, opts ...grpc.CallOption) (*ReplyCreditDetail, error) {
	out := new(ReplyCreditDetail)
	err := c.cc.Invoke(ctx, "/types.finance/QueryCreditDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryCreditForFunder(ctx context.Context, in *ReqCreditFunder, opts ...grpc.CallOption) (*ReplyCreditFunder, error) {
	out := new(ReplyCreditFunder)
	err := c.cc.Invoke(ctx, "/types.finance/QueryCreditForFunder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryCreditForCoreFirm(ctx context.Context, in *ReqCreditCoreFirm, opts ...grpc.CallOption) (*ReplyCreditCoreFirm, error) {
	out := new(ReplyCreditCoreFirm)
	err := c.cc.Invoke(ctx, "/types.finance/QueryCreditForCoreFirm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) CreateFinanceBill(ctx context.Context, in *CreateBill, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.finance/CreateFinanceBill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryBillInfo(ctx context.Context, in *ReqBillInfo, opts ...grpc.CallOption) (*ReplyBillInfo, error) {
	out := new(ReplyBillInfo)
	err := c.cc.Invoke(ctx, "/types.finance/QueryBillInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryBorrowerBill(ctx context.Context, in *ReqBorrowerBill, opts ...grpc.CallOption) (*ReplyBorrowerBill, error) {
	out := new(ReplyBorrowerBill)
	err := c.cc.Invoke(ctx, "/types.finance/QueryBorrowerBill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryBorrowerBillByStatus(ctx context.Context, in *ReqBorrowerBill, opts ...grpc.CallOption) (*ReplyBorrowerBill, error) {
	out := new(ReplyBorrowerBill)
	err := c.cc.Invoke(ctx, "/types.finance/QueryBorrowerBillByStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) CreateReleaseBill(ctx context.Context, in *ReleaseBill, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.finance/CreateReleaseBill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) CreateUnReleaseBill(ctx context.Context, in *UnReleaseBill, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.finance/CreateUnReleaseBill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryBorrowerBillRBNP(ctx context.Context, in *ReqBorrowerBill, opts ...grpc.CallOption) (*ReplyBorrowerBill, error) {
	out := new(ReplyBorrowerBill)
	err := c.cc.Invoke(ctx, "/types.finance/QueryBorrowerBillRBNP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) CreateSplitBill(ctx context.Context, in *SplitBill, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.finance/CreateSplitBill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) CreateUnSplitBill(ctx context.Context, in *UnSplitBill, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.finance/CreateUnSplitBill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) CreateConfirmSplitBill(ctx context.Context, in *ConfirmSplitBill, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.finance/CreateConfirmSplitBill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QuerySplitBillByTxHash(ctx context.Context, in *ReqSplitBillList, opts ...grpc.CallOption) (*ReplySplitBillList, error) {
	out := new(ReplySplitBillList)
	err := c.cc.Invoke(ctx, "/types.finance/QuerySplitBillByTxHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QuerySplitBillBySplitAddr(ctx context.Context, in *ReqSplitBillList, opts ...grpc.CallOption) (*ReplySplitBillList, error) {
	out := new(ReplySplitBillList)
	err := c.cc.Invoke(ctx, "/types.finance/QuerySplitBillBySplitAddr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QuerySplitBillByToAddr(ctx context.Context, in *ReqSplitBillList, opts ...grpc.CallOption) (*ReplySplitBillList, error) {
	out := new(ReplySplitBillList)
	err := c.cc.Invoke(ctx, "/types.finance/QuerySplitBillByToAddr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) CreateApplyForFinancing(ctx context.Context, in *ApplyForFinancing, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.finance/CreateApplyForFinancing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) CreateUnApplyForFinancing(ctx context.Context, in *UnApplyForFinancing, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.finance/CreateUnApplyForFinancing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryApplyFinancingListByTxHash(ctx context.Context, in *ReqApplyList, opts ...grpc.CallOption) (*ReplyApplyList, error) {
	out := new(ReplyApplyList)
	err := c.cc.Invoke(ctx, "/types.finance/QueryApplyFinancingListByTxHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryApplyFinancingListByCreditor(ctx context.Context, in *ReqApplyList, opts ...grpc.CallOption) (*ReplyApplyList, error) {
	out := new(ReplyApplyList)
	err := c.cc.Invoke(ctx, "/types.finance/QueryApplyFinancingListByCreditor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryApplyFinancingListByApplicant(ctx context.Context, in *ReqApplyList, opts ...grpc.CallOption) (*ReplyApplyList, error) {
	out := new(ReplyApplyList)
	err := c.cc.Invoke(ctx, "/types.finance/QueryApplyFinancingListByApplicant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryApplyFinancingListByBillID(ctx context.Context, in *ReqApplyList, opts ...grpc.CallOption) (*ReplyApplyList, error) {
	out := new(ReplyApplyList)
	err := c.cc.Invoke(ctx, "/types.finance/QueryApplyFinancingListByBillID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryApplyFinancingListByDpdtSmybol(ctx context.Context, in *ReqApplyList, opts ...grpc.CallOption) (*ReplyApplyList, error) {
	out := new(ReplyApplyList)
	err := c.cc.Invoke(ctx, "/types.finance/QueryApplyFinancingListByDpdtSmybol", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) CreateConfirmFinancing(ctx context.Context, in *ConfirmFinancing, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.finance/CreateConfirmFinancing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryTokenValue(ctx context.Context, in *ReqTokenValue, opts ...grpc.CallOption) (*ReplyTokenValue, error) {
	out := new(ReplyTokenValue)
	err := c.cc.Invoke(ctx, "/types.finance/QueryTokenValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) CreateCashBill(ctx context.Context, in *CashBill, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.finance/CreateCashBill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryCashList(ctx context.Context, in *ReqCashList, opts ...grpc.CallOption) (*ReplyCashList, error) {
	out := new(ReplyCashList)
	err := c.cc.Invoke(ctx, "/types.finance/QueryCashList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryCashListByTokenOwner(ctx context.Context, in *ReqCashList, opts ...grpc.CallOption) (*ReplyCashList, error) {
	out := new(ReplyCashList)
	err := c.cc.Invoke(ctx, "/types.finance/QueryCashListByTokenOwner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryBillCashRecord(ctx context.Context, in *ReqCashRecord, opts ...grpc.CallOption) (*ReplyCashRecord, error) {
	out := new(ReplyCashRecord)
	err := c.cc.Invoke(ctx, "/types.finance/QueryBillCashRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryBillRepayInfo(ctx context.Context, in *ReqBillRepayInfo, opts ...grpc.CallOption) (*ReplyBillRepayInfo, error) {
	out := new(ReplyBillRepayInfo)
	err := c.cc.Invoke(ctx, "/types.finance/QueryBillRepayInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) CreateRepayBill(ctx context.Context, in *RepayBill, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.finance/CreateRepayBill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryRepayInfo(ctx context.Context, in *ReqBillRepayInfo, opts ...grpc.CallOption) (*ReplyBillRepayInfo, error) {
	out := new(ReplyBillRepayInfo)
	err := c.cc.Invoke(ctx, "/types.finance/QueryRepayInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryBillRepayRecord(ctx context.Context, in *ReqRepayRecord, opts ...grpc.CallOption) (*ReplyRepayRecord, error) {
	out := new(ReplyRepayRecord)
	err := c.cc.Invoke(ctx, "/types.finance/QueryBillRepayRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) CreateReportBroken(ctx context.Context, in *ReportBroken, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.finance/CreateReportBroken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryBillBrokenList(ctx context.Context, in *ReqBrokenList, opts ...grpc.CallOption) (*ReplyBrokenList, error) {
	out := new(ReplyBrokenList)
	err := c.cc.Invoke(ctx, "/types.finance/QueryBillBrokenList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryBillBrokenListByPhone(ctx context.Context, in *ReqBrokenList, opts ...grpc.CallOption) (*ReplyBrokenList, error) {
	out := new(ReplyBrokenList)
	err := c.cc.Invoke(ctx, "/types.finance/QueryBillBrokenListByPhone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryBillBrokenListByAddr(ctx context.Context, in *ReqBrokenList, opts ...grpc.CallOption) (*ReplyBrokenList, error) {
	out := new(ReplyBrokenList)
	err := c.cc.Invoke(ctx, "/types.finance/QueryBillBrokenListByAddr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) CreateDeliverBill(ctx context.Context, in *DeliverBill, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.finance/CreateDeliverBill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) CreateConfirmDeliverBill(ctx context.Context, in *ConfirmDeliverBill, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.finance/CreateConfirmDeliverBill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) CreateUnDeliverBill(ctx context.Context, in *UnDeliverBill, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.finance/CreateUnDeliverBill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryDeliverListByDeliverID(ctx context.Context, in *ReqDeliverList, opts ...grpc.CallOption) (*ReplyDeliverList, error) {
	out := new(ReplyDeliverList)
	err := c.cc.Invoke(ctx, "/types.finance/QueryDeliverListByDeliverID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryDeliverListByDeliverAddr(ctx context.Context, in *ReqDeliverList, opts ...grpc.CallOption) (*ReplyDeliverList, error) {
	out := new(ReplyDeliverList)
	err := c.cc.Invoke(ctx, "/types.finance/QueryDeliverListByDeliverAddr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeClient) QueryDeliverListByPeerAddr(ctx context.Context, in *ReqDeliverList, opts ...grpc.CallOption) (*ReplyDeliverList, error) {
	out := new(ReplyDeliverList)
	err := c.cc.Invoke(ctx, "/types.finance/QueryDeliverListByPeerAddr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FinanceServer is the server API for Finance service.
type FinanceServer interface {
	//存款操作1
	CreateDepositAsset(context.Context, *DepositAsset) (*types.UnsignTx, error)
	//取款操作
	CreateWithdrawlAsset(context.Context, *WithdrawlAsset) (*types.UnsignTx, error)
	//合约内转账
	CreateTransferCoins(context.Context, *TransferCoins) (*types.UnsignTx, error)
	//查询合约子账户资产1
	//查询用户指定合约下token symbol资产的信息1
	QueryAccountAsset(context.Context, *ReqAccountAsset) (*ReplyAccountAsset, error)
	//查询用户所有合约下，所有token symbol资产的信息1
	QueryUserAssets(context.Context, *ReqFinanceUserAssets) (*ReplyFinanceUserAssets, error)
	//查询出入金记录1
	QueryDWRecord(context.Context, *ReqDWRecord) (*ReplyDWRecord, error)
	//以token symbol为条件过滤出入金记录 1
	QueryDWRecordBySymbol(context.Context, *ReqDWRecord) (*ReplyDWRecord, error)
	//通过Addr为条件过滤出入金记录1
	QueryDWRecordByAddr(context.Context, *ReqDWRecord) (*ReplyDWRecord, error)
	//查询合约内转账记录
	QueryTransferCoinsRecord(context.Context, *ReqTransferCoinsRecord) (*ReplyTransferCoinsRecord, error)
	QueryTransferCoinsRecordByAddr(context.Context, *ReqTransferCoinsRecord) (*ReplyTransferCoinsRecord, error)
	QueryTransferCoinsRecordBySymbol(context.Context, *ReqTransferCoinsRecord) (*ReplyTransferCoinsRecord, error)
	//添加授信Token
	CreateAddCreditToken(context.Context, *AddCreditToken) (*types.UnsignTx, error)
	//查看具体授信
	QueryCreditDetail(context.Context, *ReqCreditDetail) (*ReplyCreditDetail, error)
	//为资金方查询授信
	QueryCreditForFunder(context.Context, *ReqCreditFunder) (*ReplyCreditFunder, error)
	//为核心企业查询授信
	QueryCreditForCoreFirm(context.Context, *ReqCreditCoreFirm) (*ReplyCreditCoreFirm, error)
	//创建白条信息
	CreateFinanceBill(context.Context, *CreateBill) (*types.UnsignTx, error)
	//查询具体白条信息
	QueryBillInfo(context.Context, *ReqBillInfo) (*ReplyBillInfo, error)
	//查询和借款人相关的Bill信息
	QueryBorrowerBill(context.Context, *ReqBorrowerBill) (*ReplyBorrowerBill, error)
	//ReleaseBill发行白条之后能查看到相应的还款信息
	QueryBorrowerBillByStatus(context.Context, *ReqBorrowerBill) (*ReplyBorrowerBill, error)
	//发行白条
	CreateReleaseBill(context.Context, *ReleaseBill) (*types.UnsignTx, error)
	//撤销发布白条
	CreateUnReleaseBill(context.Context, *UnReleaseBill) (*types.UnsignTx, error)
	//查询已发行未发布的白条列表，RBNP：Released but not published 没有写用不到
	QueryBorrowerBillRBNP(context.Context, *ReqBorrowerBill) (*ReplyBorrowerBill, error)
	//拆分白条操作
	CreateSplitBill(context.Context, *SplitBill) (*types.UnsignTx, error)
	CreateUnSplitBill(context.Context, *UnSplitBill) (*types.UnsignTx, error)
	CreateConfirmSplitBill(context.Context, *ConfirmSplitBill) (*types.UnsignTx, error)
	//查询拆分白条信息,通过txHash、SplitAddr、ToAddr
	QuerySplitBillByTxHash(context.Context, *ReqSplitBillList) (*ReplySplitBillList, error)
	QuerySplitBillBySplitAddr(context.Context, *ReqSplitBillList) (*ReplySplitBillList, error)
	QuerySplitBillByToAddr(context.Context, *ReqSplitBillList) (*ReplySplitBillList, error)
	//申请融资
	CreateApplyForFinancing(context.Context, *ApplyForFinancing) (*types.UnsignTx, error)
	//撤销融资申请
	CreateUnApplyForFinancing(context.Context, *UnApplyForFinancing) (*types.UnsignTx, error)
	//根据申请哈息请求融资申请列表
	QueryApplyFinancingListByTxHash(context.Context, *ReqApplyList) (*ReplyApplyList, error)
	//根据授信人请求融资申请列表
	QueryApplyFinancingListByCreditor(context.Context, *ReqApplyList) (*ReplyApplyList, error)
	//根据申请人请求融资申请列表
	QueryApplyFinancingListByApplicant(context.Context, *ReqApplyList) (*ReplyApplyList, error)
	//根据白条ID请求融资申请列表
	QueryApplyFinancingListByBillID(context.Context, *ReqApplyList) (*ReplyApplyList, error)
	//根据授信标识请求融资申请列表
	QueryApplyFinancingListByDpdtSmybol(context.Context, *ReqApplyList) (*ReplyApplyList, error)
	//确认融资
	CreateConfirmFinancing(context.Context, *ConfirmFinancing) (*types.UnsignTx, error)
	//查询token当前价值 根据token的数量查看token当前的价值
	QueryTokenValue(context.Context, *ReqTokenValue) (*ReplyTokenValue, error)
	//白条持有人兑现
	CreateCashBill(context.Context, *CashBill) (*types.UnsignTx, error)
	//查询票据兑现列表
	QueryCashList(context.Context, *ReqCashList) (*ReplyCashList, error)
	//以tokenOwner为条件过滤票据兑现列表
	QueryCashListByTokenOwner(context.Context, *ReqCashList) (*ReplyCashList, error)
	//查询指定白条的兑现记录:inAmount, outValue
	QueryBillCashRecord(context.Context, *ReqCashRecord) (*ReplyCashRecord, error)
	//查询票据的还款信息 这个可以查到想要的信息，根据兑现列表进行还款信息查询
	QueryBillRepayInfo(context.Context, *ReqBillRepayInfo) (*ReplyBillRepayInfo, error)
	//还款
	CreateRepayBill(context.Context, *RepayBill) (*types.UnsignTx, error)
	//只有发布的白条可以进行这个查询，查询对应白条的还款信息，包括：当前期数，总期数，当前期应还款额，正常还款额度，截至还款日期, 当前还款是否包含逾期还款, 逾期日息;
	QueryRepayInfo(context.Context, *ReqBillRepayInfo) (*ReplyBillRepayInfo, error)
	//查询指定白条的还款记录 这个可以查到想要的信息
	QueryBillRepayRecord(context.Context, *ReqRepayRecord) (*ReplyRepayRecord, error)
	//举报失信人
	CreateReportBroken(context.Context, *ReportBroken) (*types.UnsignTx, error)
	//查询黑名单列表，对外开放;逾期已还款的用户将不会出现在黑名单列表中
	QueryBillBrokenList(context.Context, *ReqBrokenList) (*ReplyBrokenList, error)
	//通过手机号查询黑名单列表
	QueryBillBrokenListByPhone(context.Context, *ReqBrokenList) (*ReplyBrokenList, error)
	//通过账户地址查询黑名单列表
	QueryBillBrokenListByAddr(context.Context, *ReqBrokenList) (*ReplyBrokenList, error)
	//白条交付操作相关
	CreateDeliverBill(context.Context, *DeliverBill) (*types.UnsignTx, error)
	CreateConfirmDeliverBill(context.Context, *ConfirmDeliverBill) (*types.UnsignTx, error)
	CreateUnDeliverBill(context.Context, *UnDeliverBill) (*types.UnsignTx, error)
	//根据Hash查询交付条目
	QueryDeliverListByDeliverID(context.Context, *ReqDeliverList) (*ReplyDeliverList, error)
	//根据交付人地址查询交付条目
	QueryDeliverListByDeliverAddr(context.Context, *ReqDeliverList) (*ReplyDeliverList, error)
	//根据被交付人地址查询交付条目
	QueryDeliverListByPeerAddr(context.Context, *ReqDeliverList) (*ReplyDeliverList, error)
}

// UnimplementedFinanceServer can be embedded to have forward compatible implementations.
type UnimplementedFinanceServer struct {
}

func (*UnimplementedFinanceServer) CreateDepositAsset(ctx context.Context, req *DepositAsset) (*types.UnsignTx, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDepositAsset not implemented")
}
func (*UnimplementedFinanceServer) CreateWithdrawlAsset(ctx context.Context, req *WithdrawlAsset) (*types.UnsignTx, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWithdrawlAsset not implemented")
}
func (*UnimplementedFinanceServer) CreateTransferCoins(ctx context.Context, req *TransferCoins) (*types.UnsignTx, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTransferCoins not implemented")
}
func (*UnimplementedFinanceServer) QueryAccountAsset(ctx context.Context, req *ReqAccountAsset) (*ReplyAccountAsset, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryAccountAsset not implemented")
}
func (*UnimplementedFinanceServer) QueryUserAssets(ctx context.Context, req *ReqFinanceUserAssets) (*ReplyFinanceUserAssets, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryUserAssets not implemented")
}
func (*UnimplementedFinanceServer) QueryDWRecord(ctx context.Context, req *ReqDWRecord) (*ReplyDWRecord, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryDWRecord not implemented")
}
func (*UnimplementedFinanceServer) QueryDWRecordBySymbol(ctx context.Context, req *ReqDWRecord) (*ReplyDWRecord, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryDWRecordBySymbol not implemented")
}
func (*UnimplementedFinanceServer) QueryDWRecordByAddr(ctx context.Context, req *ReqDWRecord) (*ReplyDWRecord, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryDWRecordByAddr not implemented")
}
func (*UnimplementedFinanceServer) QueryTransferCoinsRecord(ctx context.Context, req *ReqTransferCoinsRecord) (*ReplyTransferCoinsRecord, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryTransferCoinsRecord not implemented")
}
func (*UnimplementedFinanceServer) QueryTransferCoinsRecordByAddr(ctx context.Context, req *ReqTransferCoinsRecord) (*ReplyTransferCoinsRecord, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryTransferCoinsRecordByAddr not implemented")
}
func (*UnimplementedFinanceServer) QueryTransferCoinsRecordBySymbol(ctx context.Context, req *ReqTransferCoinsRecord) (*ReplyTransferCoinsRecord, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryTransferCoinsRecordBySymbol not implemented")
}
func (*UnimplementedFinanceServer) CreateAddCreditToken(ctx context.Context, req *AddCreditToken) (*types.UnsignTx, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAddCreditToken not implemented")
}
func (*UnimplementedFinanceServer) QueryCreditDetail(ctx context.Context, req *ReqCreditDetail) (*ReplyCreditDetail, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryCreditDetail not implemented")
}
func (*UnimplementedFinanceServer) QueryCreditForFunder(ctx context.Context, req *ReqCreditFunder) (*ReplyCreditFunder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryCreditForFunder not implemented")
}
func (*UnimplementedFinanceServer) QueryCreditForCoreFirm(ctx context.Context, req *ReqCreditCoreFirm) (*ReplyCreditCoreFirm, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryCreditForCoreFirm not implemented")
}
func (*UnimplementedFinanceServer) CreateFinanceBill(ctx context.Context, req *CreateBill) (*types.UnsignTx, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFinanceBill not implemented")
}
func (*UnimplementedFinanceServer) QueryBillInfo(ctx context.Context, req *ReqBillInfo) (*ReplyBillInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryBillInfo not implemented")
}
func (*UnimplementedFinanceServer) QueryBorrowerBill(ctx context.Context, req *ReqBorrowerBill) (*ReplyBorrowerBill, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryBorrowerBill not implemented")
}
func (*UnimplementedFinanceServer) QueryBorrowerBillByStatus(ctx context.Context, req *ReqBorrowerBill) (*ReplyBorrowerBill, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryBorrowerBillByStatus not implemented")
}
func (*UnimplementedFinanceServer) CreateReleaseBill(ctx context.Context, req *ReleaseBill) (*types.UnsignTx, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateReleaseBill not implemented")
}
func (*UnimplementedFinanceServer) CreateUnReleaseBill(ctx context.Context, req *UnReleaseBill) (*types.UnsignTx, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUnReleaseBill not implemented")
}
func (*UnimplementedFinanceServer) QueryBorrowerBillRBNP(ctx context.Context, req *ReqBorrowerBill) (*ReplyBorrowerBill, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryBorrowerBillRBNP not implemented")
}
func (*UnimplementedFinanceServer) CreateSplitBill(ctx context.Context, req *SplitBill) (*types.UnsignTx, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSplitBill not implemented")
}
func (*UnimplementedFinanceServer) CreateUnSplitBill(ctx context.Context, req *UnSplitBill) (*types.UnsignTx, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUnSplitBill not implemented")
}
func (*UnimplementedFinanceServer) CreateConfirmSplitBill(ctx context.Context, req *ConfirmSplitBill) (*types.UnsignTx, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateConfirmSplitBill not implemented")
}
func (*UnimplementedFinanceServer) QuerySplitBillByTxHash(ctx context.Context, req *ReqSplitBillList) (*ReplySplitBillList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QuerySplitBillByTxHash not implemented")
}
func (*UnimplementedFinanceServer) QuerySplitBillBySplitAddr(ctx context.Context, req *ReqSplitBillList) (*ReplySplitBillList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QuerySplitBillBySplitAddr not implemented")
}
func (*UnimplementedFinanceServer) QuerySplitBillByToAddr(ctx context.Context, req *ReqSplitBillList) (*ReplySplitBillList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QuerySplitBillByToAddr not implemented")
}
func (*UnimplementedFinanceServer) CreateApplyForFinancing(ctx context.Context, req *ApplyForFinancing) (*types.UnsignTx, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateApplyForFinancing not implemented")
}
func (*UnimplementedFinanceServer) CreateUnApplyForFinancing(ctx context.Context, req *UnApplyForFinancing) (*types.UnsignTx, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUnApplyForFinancing not implemented")
}
func (*UnimplementedFinanceServer) QueryApplyFinancingListByTxHash(ctx context.Context, req *ReqApplyList) (*ReplyApplyList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryApplyFinancingListByTxHash not implemented")
}
func (*UnimplementedFinanceServer) QueryApplyFinancingListByCreditor(ctx context.Context, req *ReqApplyList) (*ReplyApplyList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryApplyFinancingListByCreditor not implemented")
}
func (*UnimplementedFinanceServer) QueryApplyFinancingListByApplicant(ctx context.Context, req *ReqApplyList) (*ReplyApplyList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryApplyFinancingListByApplicant not implemented")
}
func (*UnimplementedFinanceServer) QueryApplyFinancingListByBillID(ctx context.Context, req *ReqApplyList) (*ReplyApplyList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryApplyFinancingListByBillID not implemented")
}
func (*UnimplementedFinanceServer) QueryApplyFinancingListByDpdtSmybol(ctx context.Context, req *ReqApplyList) (*ReplyApplyList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryApplyFinancingListByDpdtSmybol not implemented")
}
func (*UnimplementedFinanceServer) CreateConfirmFinancing(ctx context.Context, req *ConfirmFinancing) (*types.UnsignTx, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateConfirmFinancing not implemented")
}
func (*UnimplementedFinanceServer) QueryTokenValue(ctx context.Context, req *ReqTokenValue) (*ReplyTokenValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryTokenValue not implemented")
}
func (*UnimplementedFinanceServer) CreateCashBill(ctx context.Context, req *CashBill) (*types.UnsignTx, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCashBill not implemented")
}
func (*UnimplementedFinanceServer) QueryCashList(ctx context.Context, req *ReqCashList) (*ReplyCashList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryCashList not implemented")
}
func (*UnimplementedFinanceServer) QueryCashListByTokenOwner(ctx context.Context, req *ReqCashList) (*ReplyCashList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryCashListByTokenOwner not implemented")
}
func (*UnimplementedFinanceServer) QueryBillCashRecord(ctx context.Context, req *ReqCashRecord) (*ReplyCashRecord, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryBillCashRecord not implemented")
}
func (*UnimplementedFinanceServer) QueryBillRepayInfo(ctx context.Context, req *ReqBillRepayInfo) (*ReplyBillRepayInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryBillRepayInfo not implemented")
}
func (*UnimplementedFinanceServer) CreateRepayBill(ctx context.Context, req *RepayBill) (*types.UnsignTx, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRepayBill not implemented")
}
func (*UnimplementedFinanceServer) QueryRepayInfo(ctx context.Context, req *ReqBillRepayInfo) (*ReplyBillRepayInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryRepayInfo not implemented")
}
func (*UnimplementedFinanceServer) QueryBillRepayRecord(ctx context.Context, req *ReqRepayRecord) (*ReplyRepayRecord, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryBillRepayRecord not implemented")
}
func (*UnimplementedFinanceServer) CreateReportBroken(ctx context.Context, req *ReportBroken) (*types.UnsignTx, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateReportBroken not implemented")
}
func (*UnimplementedFinanceServer) QueryBillBrokenList(ctx context.Context, req *ReqBrokenList) (*ReplyBrokenList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryBillBrokenList not implemented")
}
func (*UnimplementedFinanceServer) QueryBillBrokenListByPhone(ctx context.Context, req *ReqBrokenList) (*ReplyBrokenList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryBillBrokenListByPhone not implemented")
}
func (*UnimplementedFinanceServer) QueryBillBrokenListByAddr(ctx context.Context, req *ReqBrokenList) (*ReplyBrokenList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryBillBrokenListByAddr not implemented")
}
func (*UnimplementedFinanceServer) CreateDeliverBill(ctx context.Context, req *DeliverBill) (*types.UnsignTx, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDeliverBill not implemented")
}
func (*UnimplementedFinanceServer) CreateConfirmDeliverBill(ctx context.Context, req *ConfirmDeliverBill) (*types.UnsignTx, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateConfirmDeliverBill not implemented")
}
func (*UnimplementedFinanceServer) CreateUnDeliverBill(ctx context.Context, req *UnDeliverBill) (*types.UnsignTx, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUnDeliverBill not implemented")
}
func (*UnimplementedFinanceServer) QueryDeliverListByDeliverID(ctx context.Context, req *ReqDeliverList) (*ReplyDeliverList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryDeliverListByDeliverID not implemented")
}
func (*UnimplementedFinanceServer) QueryDeliverListByDeliverAddr(ctx context.Context, req *ReqDeliverList) (*ReplyDeliverList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryDeliverListByDeliverAddr not implemented")
}
func (*UnimplementedFinanceServer) QueryDeliverListByPeerAddr(ctx context.Context, req *ReqDeliverList) (*ReplyDeliverList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryDeliverListByPeerAddr not implemented")
}

func RegisterFinanceServer(s *grpc.Server, srv FinanceServer) {
	s.RegisterService(&_Finance_serviceDesc, srv)
}

func _Finance_CreateDepositAsset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DepositAsset)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).CreateDepositAsset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/CreateDepositAsset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).CreateDepositAsset(ctx, req.(*DepositAsset))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_CreateWithdrawlAsset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithdrawlAsset)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).CreateWithdrawlAsset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/CreateWithdrawlAsset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).CreateWithdrawlAsset(ctx, req.(*WithdrawlAsset))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_CreateTransferCoins_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferCoins)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).CreateTransferCoins(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/CreateTransferCoins",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).CreateTransferCoins(ctx, req.(*TransferCoins))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryAccountAsset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqAccountAsset)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryAccountAsset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryAccountAsset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryAccountAsset(ctx, req.(*ReqAccountAsset))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryUserAssets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFinanceUserAssets)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryUserAssets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryUserAssets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryUserAssets(ctx, req.(*ReqFinanceUserAssets))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryDWRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqDWRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryDWRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryDWRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryDWRecord(ctx, req.(*ReqDWRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryDWRecordBySymbol_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqDWRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryDWRecordBySymbol(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryDWRecordBySymbol",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryDWRecordBySymbol(ctx, req.(*ReqDWRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryDWRecordByAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqDWRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryDWRecordByAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryDWRecordByAddr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryDWRecordByAddr(ctx, req.(*ReqDWRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryTransferCoinsRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqTransferCoinsRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryTransferCoinsRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryTransferCoinsRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryTransferCoinsRecord(ctx, req.(*ReqTransferCoinsRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryTransferCoinsRecordByAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqTransferCoinsRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryTransferCoinsRecordByAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryTransferCoinsRecordByAddr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryTransferCoinsRecordByAddr(ctx, req.(*ReqTransferCoinsRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryTransferCoinsRecordBySymbol_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqTransferCoinsRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryTransferCoinsRecordBySymbol(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryTransferCoinsRecordBySymbol",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryTransferCoinsRecordBySymbol(ctx, req.(*ReqTransferCoinsRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_CreateAddCreditToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCreditToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).CreateAddCreditToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/CreateAddCreditToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).CreateAddCreditToken(ctx, req.(*AddCreditToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryCreditDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreditDetail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryCreditDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryCreditDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryCreditDetail(ctx, req.(*ReqCreditDetail))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryCreditForFunder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreditFunder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryCreditForFunder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryCreditForFunder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryCreditForFunder(ctx, req.(*ReqCreditFunder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryCreditForCoreFirm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreditCoreFirm)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryCreditForCoreFirm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryCreditForCoreFirm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryCreditForCoreFirm(ctx, req.(*ReqCreditCoreFirm))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_CreateFinanceBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).CreateFinanceBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/CreateFinanceBill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).CreateFinanceBill(ctx, req.(*CreateBill))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryBillInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBillInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryBillInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryBillInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryBillInfo(ctx, req.(*ReqBillInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryBorrowerBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBorrowerBill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryBorrowerBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryBorrowerBill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryBorrowerBill(ctx, req.(*ReqBorrowerBill))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryBorrowerBillByStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBorrowerBill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryBorrowerBillByStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryBorrowerBillByStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryBorrowerBillByStatus(ctx, req.(*ReqBorrowerBill))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_CreateReleaseBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseBill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).CreateReleaseBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/CreateReleaseBill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).CreateReleaseBill(ctx, req.(*ReleaseBill))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_CreateUnReleaseBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnReleaseBill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).CreateUnReleaseBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/CreateUnReleaseBill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).CreateUnReleaseBill(ctx, req.(*UnReleaseBill))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryBorrowerBillRBNP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBorrowerBill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryBorrowerBillRBNP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryBorrowerBillRBNP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryBorrowerBillRBNP(ctx, req.(*ReqBorrowerBill))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_CreateSplitBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SplitBill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).CreateSplitBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/CreateSplitBill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).CreateSplitBill(ctx, req.(*SplitBill))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_CreateUnSplitBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnSplitBill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).CreateUnSplitBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/CreateUnSplitBill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).CreateUnSplitBill(ctx, req.(*UnSplitBill))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_CreateConfirmSplitBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmSplitBill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).CreateConfirmSplitBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/CreateConfirmSplitBill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).CreateConfirmSplitBill(ctx, req.(*ConfirmSplitBill))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QuerySplitBillByTxHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSplitBillList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QuerySplitBillByTxHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QuerySplitBillByTxHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QuerySplitBillByTxHash(ctx, req.(*ReqSplitBillList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QuerySplitBillBySplitAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSplitBillList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QuerySplitBillBySplitAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QuerySplitBillBySplitAddr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QuerySplitBillBySplitAddr(ctx, req.(*ReqSplitBillList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QuerySplitBillByToAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSplitBillList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QuerySplitBillByToAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QuerySplitBillByToAddr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QuerySplitBillByToAddr(ctx, req.(*ReqSplitBillList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_CreateApplyForFinancing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyForFinancing)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).CreateApplyForFinancing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/CreateApplyForFinancing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).CreateApplyForFinancing(ctx, req.(*ApplyForFinancing))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_CreateUnApplyForFinancing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnApplyForFinancing)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).CreateUnApplyForFinancing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/CreateUnApplyForFinancing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).CreateUnApplyForFinancing(ctx, req.(*UnApplyForFinancing))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryApplyFinancingListByTxHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqApplyList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryApplyFinancingListByTxHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryApplyFinancingListByTxHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryApplyFinancingListByTxHash(ctx, req.(*ReqApplyList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryApplyFinancingListByCreditor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqApplyList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryApplyFinancingListByCreditor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryApplyFinancingListByCreditor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryApplyFinancingListByCreditor(ctx, req.(*ReqApplyList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryApplyFinancingListByApplicant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqApplyList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryApplyFinancingListByApplicant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryApplyFinancingListByApplicant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryApplyFinancingListByApplicant(ctx, req.(*ReqApplyList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryApplyFinancingListByBillID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqApplyList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryApplyFinancingListByBillID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryApplyFinancingListByBillID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryApplyFinancingListByBillID(ctx, req.(*ReqApplyList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryApplyFinancingListByDpdtSmybol_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqApplyList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryApplyFinancingListByDpdtSmybol(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryApplyFinancingListByDpdtSmybol",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryApplyFinancingListByDpdtSmybol(ctx, req.(*ReqApplyList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_CreateConfirmFinancing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmFinancing)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).CreateConfirmFinancing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/CreateConfirmFinancing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).CreateConfirmFinancing(ctx, req.(*ConfirmFinancing))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryTokenValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqTokenValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryTokenValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryTokenValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryTokenValue(ctx, req.(*ReqTokenValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_CreateCashBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CashBill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).CreateCashBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/CreateCashBill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).CreateCashBill(ctx, req.(*CashBill))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryCashList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCashList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryCashList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryCashList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryCashList(ctx, req.(*ReqCashList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryCashListByTokenOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCashList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryCashListByTokenOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryCashListByTokenOwner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryCashListByTokenOwner(ctx, req.(*ReqCashList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryBillCashRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCashRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryBillCashRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryBillCashRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryBillCashRecord(ctx, req.(*ReqCashRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryBillRepayInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBillRepayInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryBillRepayInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryBillRepayInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryBillRepayInfo(ctx, req.(*ReqBillRepayInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_CreateRepayBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RepayBill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).CreateRepayBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/CreateRepayBill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).CreateRepayBill(ctx, req.(*RepayBill))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryRepayInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBillRepayInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryRepayInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryRepayInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryRepayInfo(ctx, req.(*ReqBillRepayInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryBillRepayRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqRepayRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryBillRepayRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryBillRepayRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryBillRepayRecord(ctx, req.(*ReqRepayRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_CreateReportBroken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportBroken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).CreateReportBroken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/CreateReportBroken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).CreateReportBroken(ctx, req.(*ReportBroken))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryBillBrokenList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBrokenList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryBillBrokenList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryBillBrokenList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryBillBrokenList(ctx, req.(*ReqBrokenList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryBillBrokenListByPhone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBrokenList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryBillBrokenListByPhone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryBillBrokenListByPhone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryBillBrokenListByPhone(ctx, req.(*ReqBrokenList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryBillBrokenListByAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBrokenList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryBillBrokenListByAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryBillBrokenListByAddr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryBillBrokenListByAddr(ctx, req.(*ReqBrokenList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_CreateDeliverBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeliverBill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).CreateDeliverBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/CreateDeliverBill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).CreateDeliverBill(ctx, req.(*DeliverBill))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_CreateConfirmDeliverBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmDeliverBill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).CreateConfirmDeliverBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/CreateConfirmDeliverBill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).CreateConfirmDeliverBill(ctx, req.(*ConfirmDeliverBill))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_CreateUnDeliverBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnDeliverBill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).CreateUnDeliverBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/CreateUnDeliverBill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).CreateUnDeliverBill(ctx, req.(*UnDeliverBill))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryDeliverListByDeliverID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqDeliverList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryDeliverListByDeliverID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryDeliverListByDeliverID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryDeliverListByDeliverID(ctx, req.(*ReqDeliverList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryDeliverListByDeliverAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqDeliverList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryDeliverListByDeliverAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryDeliverListByDeliverAddr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryDeliverListByDeliverAddr(ctx, req.(*ReqDeliverList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finance_QueryDeliverListByPeerAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqDeliverList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServer).QueryDeliverListByPeerAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.finance/QueryDeliverListByPeerAddr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServer).QueryDeliverListByPeerAddr(ctx, req.(*ReqDeliverList))
	}
	return interceptor(ctx, in, info, handler)
}

var _Finance_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.finance",
	HandlerType: (*FinanceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDepositAsset",
			Handler:    _Finance_CreateDepositAsset_Handler,
		},
		{
			MethodName: "CreateWithdrawlAsset",
			Handler:    _Finance_CreateWithdrawlAsset_Handler,
		},
		{
			MethodName: "CreateTransferCoins",
			Handler:    _Finance_CreateTransferCoins_Handler,
		},
		{
			MethodName: "QueryAccountAsset",
			Handler:    _Finance_QueryAccountAsset_Handler,
		},
		{
			MethodName: "QueryUserAssets",
			Handler:    _Finance_QueryUserAssets_Handler,
		},
		{
			MethodName: "QueryDWRecord",
			Handler:    _Finance_QueryDWRecord_Handler,
		},
		{
			MethodName: "QueryDWRecordBySymbol",
			Handler:    _Finance_QueryDWRecordBySymbol_Handler,
		},
		{
			MethodName: "QueryDWRecordByAddr",
			Handler:    _Finance_QueryDWRecordByAddr_Handler,
		},
		{
			MethodName: "QueryTransferCoinsRecord",
			Handler:    _Finance_QueryTransferCoinsRecord_Handler,
		},
		{
			MethodName: "QueryTransferCoinsRecordByAddr",
			Handler:    _Finance_QueryTransferCoinsRecordByAddr_Handler,
		},
		{
			MethodName: "QueryTransferCoinsRecordBySymbol",
			Handler:    _Finance_QueryTransferCoinsRecordBySymbol_Handler,
		},
		{
			MethodName: "CreateAddCreditToken",
			Handler:    _Finance_CreateAddCreditToken_Handler,
		},
		{
			MethodName: "QueryCreditDetail",
			Handler:    _Finance_QueryCreditDetail_Handler,
		},
		{
			MethodName: "QueryCreditForFunder",
			Handler:    _Finance_QueryCreditForFunder_Handler,
		},
		{
			MethodName: "QueryCreditForCoreFirm",
			Handler:    _Finance_QueryCreditForCoreFirm_Handler,
		},
		{
			MethodName: "CreateFinanceBill",
			Handler:    _Finance_CreateFinanceBill_Handler,
		},
		{
			MethodName: "QueryBillInfo",
			Handler:    _Finance_QueryBillInfo_Handler,
		},
		{
			MethodName: "QueryBorrowerBill",
			Handler:    _Finance_QueryBorrowerBill_Handler,
		},
		{
			MethodName: "QueryBorrowerBillByStatus",
			Handler:    _Finance_QueryBorrowerBillByStatus_Handler,
		},
		{
			MethodName: "CreateReleaseBill",
			Handler:    _Finance_CreateReleaseBill_Handler,
		},
		{
			MethodName: "CreateUnReleaseBill",
			Handler:    _Finance_CreateUnReleaseBill_Handler,
		},
		{
			MethodName: "QueryBorrowerBillRBNP",
			Handler:    _Finance_QueryBorrowerBillRBNP_Handler,
		},
		{
			MethodName: "CreateSplitBill",
			Handler:    _Finance_CreateSplitBill_Handler,
		},
		{
			MethodName: "CreateUnSplitBill",
			Handler:    _Finance_CreateUnSplitBill_Handler,
		},
		{
			MethodName: "CreateConfirmSplitBill",
			Handler:    _Finance_CreateConfirmSplitBill_Handler,
		},
		{
			MethodName: "QuerySplitBillByTxHash",
			Handler:    _Finance_QuerySplitBillByTxHash_Handler,
		},
		{
			MethodName: "QuerySplitBillBySplitAddr",
			Handler:    _Finance_QuerySplitBillBySplitAddr_Handler,
		},
		{
			MethodName: "QuerySplitBillByToAddr",
			Handler:    _Finance_QuerySplitBillByToAddr_Handler,
		},
		{
			MethodName: "CreateApplyForFinancing",
			Handler:    _Finance_CreateApplyForFinancing_Handler,
		},
		{
			MethodName: "CreateUnApplyForFinancing",
			Handler:    _Finance_CreateUnApplyForFinancing_Handler,
		},
		{
			MethodName: "QueryApplyFinancingListByTxHash",
			Handler:    _Finance_QueryApplyFinancingListByTxHash_Handler,
		},
		{
			MethodName: "QueryApplyFinancingListByCreditor",
			Handler:    _Finance_QueryApplyFinancingListByCreditor_Handler,
		},
		{
			MethodName: "QueryApplyFinancingListByApplicant",
			Handler:    _Finance_QueryApplyFinancingListByApplicant_Handler,
		},
		{
			MethodName: "QueryApplyFinancingListByBillID",
			Handler:    _Finance_QueryApplyFinancingListByBillID_Handler,
		},
		{
			MethodName: "QueryApplyFinancingListByDpdtSmybol",
			Handler:    _Finance_QueryApplyFinancingListByDpdtSmybol_Handler,
		},
		{
			MethodName: "CreateConfirmFinancing",
			Handler:    _Finance_CreateConfirmFinancing_Handler,
		},
		{
			MethodName: "QueryTokenValue",
			Handler:    _Finance_QueryTokenValue_Handler,
		},
		{
			MethodName: "CreateCashBill",
			Handler:    _Finance_CreateCashBill_Handler,
		},
		{
			MethodName: "QueryCashList",
			Handler:    _Finance_QueryCashList_Handler,
		},
		{
			MethodName: "QueryCashListByTokenOwner",
			Handler:    _Finance_QueryCashListByTokenOwner_Handler,
		},
		{
			MethodName: "QueryBillCashRecord",
			Handler:    _Finance_QueryBillCashRecord_Handler,
		},
		{
			MethodName: "QueryBillRepayInfo",
			Handler:    _Finance_QueryBillRepayInfo_Handler,
		},
		{
			MethodName: "CreateRepayBill",
			Handler:    _Finance_CreateRepayBill_Handler,
		},
		{
			MethodName: "QueryRepayInfo",
			Handler:    _Finance_QueryRepayInfo_Handler,
		},
		{
			MethodName: "QueryBillRepayRecord",
			Handler:    _Finance_QueryBillRepayRecord_Handler,
		},
		{
			MethodName: "CreateReportBroken",
			Handler:    _Finance_CreateReportBroken_Handler,
		},
		{
			MethodName: "QueryBillBrokenList",
			Handler:    _Finance_QueryBillBrokenList_Handler,
		},
		{
			MethodName: "QueryBillBrokenListByPhone",
			Handler:    _Finance_QueryBillBrokenListByPhone_Handler,
		},
		{
			MethodName: "QueryBillBrokenListByAddr",
			Handler:    _Finance_QueryBillBrokenListByAddr_Handler,
		},
		{
			MethodName: "CreateDeliverBill",
			Handler:    _Finance_CreateDeliverBill_Handler,
		},
		{
			MethodName: "CreateConfirmDeliverBill",
			Handler:    _Finance_CreateConfirmDeliverBill_Handler,
		},
		{
			MethodName: "CreateUnDeliverBill",
			Handler:    _Finance_CreateUnDeliverBill_Handler,
		},
		{
			MethodName: "QueryDeliverListByDeliverID",
			Handler:    _Finance_QueryDeliverListByDeliverID_Handler,
		},
		{
			MethodName: "QueryDeliverListByDeliverAddr",
			Handler:    _Finance_QueryDeliverListByDeliverAddr_Handler,
		},
		{
			MethodName: "QueryDeliverListByPeerAddr",
			Handler:    _Finance_QueryDeliverListByPeerAddr_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "finance.proto",
}
