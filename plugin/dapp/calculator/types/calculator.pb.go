// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: calculator.proto

package types

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// calculator 合约交易行为总类型
type CalculatorAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*CalculatorAction_Add
	//	*CalculatorAction_Sub
	//	*CalculatorAction_Mul
	//	*CalculatorAction_Div
	Value isCalculatorAction_Value `protobuf_oneof:"value"`
	Ty    int32                    `protobuf:"varint,5,opt,name=ty,proto3" json:"ty,omitempty"`
}

func (x *CalculatorAction) Reset() {
	*x = CalculatorAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculatorAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculatorAction) ProtoMessage() {}

func (x *CalculatorAction) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculatorAction.ProtoReflect.Descriptor instead.
func (*CalculatorAction) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{0}
}

func (m *CalculatorAction) GetValue() isCalculatorAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *CalculatorAction) GetAdd() *Add {
	if x, ok := x.GetValue().(*CalculatorAction_Add); ok {
		return x.Add
	}
	return nil
}

func (x *CalculatorAction) GetSub() *Subtract {
	if x, ok := x.GetValue().(*CalculatorAction_Sub); ok {
		return x.Sub
	}
	return nil
}

func (x *CalculatorAction) GetMul() *Multiply {
	if x, ok := x.GetValue().(*CalculatorAction_Mul); ok {
		return x.Mul
	}
	return nil
}

func (x *CalculatorAction) GetDiv() *Divide {
	if x, ok := x.GetValue().(*CalculatorAction_Div); ok {
		return x.Div
	}
	return nil
}

func (x *CalculatorAction) GetTy() int32 {
	if x != nil {
		return x.Ty
	}
	return 0
}

type isCalculatorAction_Value interface {
	isCalculatorAction_Value()
}

type CalculatorAction_Add struct {
	Add *Add `protobuf:"bytes,1,opt,name=add,proto3,oneof"`
}

type CalculatorAction_Sub struct {
	Sub *Subtract `protobuf:"bytes,2,opt,name=sub,proto3,oneof"`
}

type CalculatorAction_Mul struct {
	Mul *Multiply `protobuf:"bytes,3,opt,name=mul,proto3,oneof"`
}

type CalculatorAction_Div struct {
	Div *Divide `protobuf:"bytes,4,opt,name=div,proto3,oneof"`
}

func (*CalculatorAction_Add) isCalculatorAction_Value() {}

func (*CalculatorAction_Sub) isCalculatorAction_Value() {}

func (*CalculatorAction_Mul) isCalculatorAction_Value() {}

func (*CalculatorAction_Div) isCalculatorAction_Value() {}

type Add struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Summand int32 `protobuf:"varint,1,opt,name=summand,proto3" json:"summand,omitempty"` //被加数
	Addend  int32 `protobuf:"varint,2,opt,name=addend,proto3" json:"addend,omitempty"`   //加数
}

func (x *Add) Reset() {
	*x = Add{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Add) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Add) ProtoMessage() {}

func (x *Add) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Add.ProtoReflect.Descriptor instead.
func (*Add) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{1}
}

func (x *Add) GetSummand() int32 {
	if x != nil {
		return x.Summand
	}
	return 0
}

func (x *Add) GetAddend() int32 {
	if x != nil {
		return x.Addend
	}
	return 0
}

type AddLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sum int32 `protobuf:"varint,1,opt,name=sum,proto3" json:"sum,omitempty"` //和
}

func (x *AddLog) Reset() {
	*x = AddLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLog) ProtoMessage() {}

func (x *AddLog) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLog.ProtoReflect.Descriptor instead.
func (*AddLog) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{2}
}

func (x *AddLog) GetSum() int32 {
	if x != nil {
		return x.Sum
	}
	return 0
}

type Subtract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Minuend    int32 `protobuf:"varint,1,opt,name=minuend,proto3" json:"minuend,omitempty"`       //被减数
	Subtrahend int32 `protobuf:"varint,2,opt,name=subtrahend,proto3" json:"subtrahend,omitempty"` //减数
}

func (x *Subtract) Reset() {
	*x = Subtract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subtract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subtract) ProtoMessage() {}

func (x *Subtract) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subtract.ProtoReflect.Descriptor instead.
func (*Subtract) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{3}
}

func (x *Subtract) GetMinuend() int32 {
	if x != nil {
		return x.Minuend
	}
	return 0
}

func (x *Subtract) GetSubtrahend() int32 {
	if x != nil {
		return x.Subtrahend
	}
	return 0
}

type SubLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Remainder int32 `protobuf:"varint,1,opt,name=remainder,proto3" json:"remainder,omitempty"` //差
}

func (x *SubLog) Reset() {
	*x = SubLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubLog) ProtoMessage() {}

func (x *SubLog) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubLog.ProtoReflect.Descriptor instead.
func (*SubLog) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{4}
}

func (x *SubLog) GetRemainder() int32 {
	if x != nil {
		return x.Remainder
	}
	return 0
}

type Multiply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Faciend    int32 `protobuf:"varint,1,opt,name=faciend,proto3" json:"faciend,omitempty"`       //被乘数
	Multiplier int32 `protobuf:"varint,2,opt,name=multiplier,proto3" json:"multiplier,omitempty"` //乘数
}

func (x *Multiply) Reset() {
	*x = Multiply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Multiply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Multiply) ProtoMessage() {}

func (x *Multiply) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Multiply.ProtoReflect.Descriptor instead.
func (*Multiply) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{5}
}

func (x *Multiply) GetFaciend() int32 {
	if x != nil {
		return x.Faciend
	}
	return 0
}

func (x *Multiply) GetMultiplier() int32 {
	if x != nil {
		return x.Multiplier
	}
	return 0
}

type MultiplyLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product int32 `protobuf:"varint,1,opt,name=product,proto3" json:"product,omitempty"` //积
}

func (x *MultiplyLog) Reset() {
	*x = MultiplyLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiplyLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiplyLog) ProtoMessage() {}

func (x *MultiplyLog) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiplyLog.ProtoReflect.Descriptor instead.
func (*MultiplyLog) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{6}
}

func (x *MultiplyLog) GetProduct() int32 {
	if x != nil {
		return x.Product
	}
	return 0
}

type Divide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dividend int32 `protobuf:"varint,1,opt,name=dividend,proto3" json:"dividend,omitempty"` //被除数
	Divisor  int32 `protobuf:"varint,2,opt,name=divisor,proto3" json:"divisor,omitempty"`   //除数
}

func (x *Divide) Reset() {
	*x = Divide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Divide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Divide) ProtoMessage() {}

func (x *Divide) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Divide.ProtoReflect.Descriptor instead.
func (*Divide) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{7}
}

func (x *Divide) GetDividend() int32 {
	if x != nil {
		return x.Dividend
	}
	return 0
}

func (x *Divide) GetDivisor() int32 {
	if x != nil {
		return x.Divisor
	}
	return 0
}

type DivideLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quotient int32 `protobuf:"varint,1,opt,name=quotient,proto3" json:"quotient,omitempty"` //商
	Remain   int32 `protobuf:"varint,2,opt,name=remain,proto3" json:"remain,omitempty"`     //余数
}

func (x *DivideLog) Reset() {
	*x = DivideLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DivideLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DivideLog) ProtoMessage() {}

func (x *DivideLog) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DivideLog.ProtoReflect.Descriptor instead.
func (*DivideLog) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{8}
}

func (x *DivideLog) GetQuotient() int32 {
	if x != nil {
		return x.Quotient
	}
	return 0
}

func (x *DivideLog) GetRemain() int32 {
	if x != nil {
		return x.Remain
	}
	return 0
}

type ReqQueryCalcCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *ReqQueryCalcCount) Reset() {
	*x = ReqQueryCalcCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqQueryCalcCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqQueryCalcCount) ProtoMessage() {}

func (x *ReqQueryCalcCount) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqQueryCalcCount.ProtoReflect.Descriptor instead.
func (*ReqQueryCalcCount) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{9}
}

func (x *ReqQueryCalcCount) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type ReplyQueryCalcCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ReplyQueryCalcCount) Reset() {
	*x = ReplyQueryCalcCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyQueryCalcCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyQueryCalcCount) ProtoMessage() {}

func (x *ReplyQueryCalcCount) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyQueryCalcCount.ProtoReflect.Descriptor instead.
func (*ReplyQueryCalcCount) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{10}
}

func (x *ReplyQueryCalcCount) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_calculator_proto protoreflect.FileDescriptor

var file_calculator_proto_rawDesc = []byte{
	0x0a, 0x10, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x22, 0xcc,
	0x01, 0x0a, 0x10, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x03, 0x61, 0x64, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x64,
	0x64, 0x48, 0x00, 0x52, 0x03, 0x61, 0x64, 0x64, 0x12, 0x28, 0x0a, 0x03, 0x73, 0x75, 0x62, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x53, 0x75, 0x62, 0x74, 0x72, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x03, 0x73,
	0x75, 0x62, 0x12, 0x28, 0x0a, 0x03, 0x6d, 0x75, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x03, 0x6d, 0x75, 0x6c, 0x12, 0x26, 0x0a, 0x03,
	0x64, 0x69, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x48, 0x00, 0x52,
	0x03, 0x64, 0x69, 0x76, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x74, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a,
	0x03, 0x41, 0x64, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x64, 0x64, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x61, 0x64, 0x64, 0x65, 0x6e, 0x64, 0x22, 0x1a, 0x0a, 0x06, 0x41, 0x64, 0x64, 0x4c, 0x6f, 0x67,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73,
	0x75, 0x6d, 0x22, 0x44, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x75, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x6d, 0x69, 0x6e, 0x75, 0x65, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x74,
	0x72, 0x61, 0x68, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x75,
	0x62, 0x74, 0x72, 0x61, 0x68, 0x65, 0x6e, 0x64, 0x22, 0x26, 0x0a, 0x06, 0x53, 0x75, 0x62, 0x4c,
	0x6f, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x65, 0x72,
	0x22, 0x44, 0x0a, 0x08, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x61, 0x63, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x66,
	0x61, 0x63, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x22, 0x27, 0x0a, 0x0b, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x79, 0x4c, 0x6f, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22,
	0x3e, 0x0a, 0x06, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x76,
	0x69, 0x64, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x76,
	0x69, 0x64, 0x65, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x76, 0x69, 0x73, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x69, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x22,
	0x3f, 0x0a, 0x09, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x71, 0x75, 0x6f, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x71, 0x75, 0x6f, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x22, 0x2b, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x6c, 0x63,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2b, 0x0a,
	0x13, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x6c, 0x63, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0x60, 0x0a, 0x0a, 0x63, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x61, 0x6c, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x63, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x43, 0x61, 0x6c, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x61, 0x6c, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_calculator_proto_rawDescOnce sync.Once
	file_calculator_proto_rawDescData = file_calculator_proto_rawDesc
)

func file_calculator_proto_rawDescGZIP() []byte {
	file_calculator_proto_rawDescOnce.Do(func() {
		file_calculator_proto_rawDescData = protoimpl.X.CompressGZIP(file_calculator_proto_rawDescData)
	})
	return file_calculator_proto_rawDescData
}

var file_calculator_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_calculator_proto_goTypes = []interface{}{
	(*CalculatorAction)(nil),    // 0: calculator.CalculatorAction
	(*Add)(nil),                 // 1: calculator.Add
	(*AddLog)(nil),              // 2: calculator.AddLog
	(*Subtract)(nil),            // 3: calculator.Subtract
	(*SubLog)(nil),              // 4: calculator.SubLog
	(*Multiply)(nil),            // 5: calculator.Multiply
	(*MultiplyLog)(nil),         // 6: calculator.MultiplyLog
	(*Divide)(nil),              // 7: calculator.Divide
	(*DivideLog)(nil),           // 8: calculator.DivideLog
	(*ReqQueryCalcCount)(nil),   // 9: calculator.ReqQueryCalcCount
	(*ReplyQueryCalcCount)(nil), // 10: calculator.ReplyQueryCalcCount
}
var file_calculator_proto_depIdxs = []int32{
	1,  // 0: calculator.CalculatorAction.add:type_name -> calculator.Add
	3,  // 1: calculator.CalculatorAction.sub:type_name -> calculator.Subtract
	5,  // 2: calculator.CalculatorAction.mul:type_name -> calculator.Multiply
	7,  // 3: calculator.CalculatorAction.div:type_name -> calculator.Divide
	9,  // 4: calculator.calculator.QueryCalcCount:input_type -> calculator.ReqQueryCalcCount
	10, // 5: calculator.calculator.QueryCalcCount:output_type -> calculator.ReplyQueryCalcCount
	5,  // [5:6] is the sub-list for method output_type
	4,  // [4:5] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_calculator_proto_init() }
func file_calculator_proto_init() {
	if File_calculator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_calculator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculatorAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Add); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subtract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Multiply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiplyLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Divide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DivideLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqQueryCalcCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyQueryCalcCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_calculator_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*CalculatorAction_Add)(nil),
		(*CalculatorAction_Sub)(nil),
		(*CalculatorAction_Mul)(nil),
		(*CalculatorAction_Div)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_calculator_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_calculator_proto_goTypes,
		DependencyIndexes: file_calculator_proto_depIdxs,
		MessageInfos:      file_calculator_proto_msgTypes,
	}.Build()
	File_calculator_proto = out.File
	file_calculator_proto_rawDesc = nil
	file_calculator_proto_goTypes = nil
	file_calculator_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CalculatorClient is the client API for Calculator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculatorClient interface {
	QueryCalcCount(ctx context.Context, in *ReqQueryCalcCount, opts ...grpc.CallOption) (*ReplyQueryCalcCount, error)
}

type calculatorClient struct {
	cc grpc.ClientConnInterface
}

func NewCalculatorClient(cc grpc.ClientConnInterface) CalculatorClient {
	return &calculatorClient{cc}
}

func (c *calculatorClient) QueryCalcCount(ctx context.Context, in *ReqQueryCalcCount, opts ...grpc.CallOption) (*ReplyQueryCalcCount, error) {
	out := new(ReplyQueryCalcCount)
	err := c.cc.Invoke(ctx, "/calculator.calculator/QueryCalcCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalculatorServer is the server API for Calculator service.
type CalculatorServer interface {
	QueryCalcCount(context.Context, *ReqQueryCalcCount) (*ReplyQueryCalcCount, error)
}

// UnimplementedCalculatorServer can be embedded to have forward compatible implementations.
type UnimplementedCalculatorServer struct {
}

func (*UnimplementedCalculatorServer) QueryCalcCount(context.Context, *ReqQueryCalcCount) (*ReplyQueryCalcCount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryCalcCount not implemented")
}

func RegisterCalculatorServer(s *grpc.Server, srv CalculatorServer) {
	s.RegisterService(&_Calculator_serviceDesc, srv)
}

func _Calculator_QueryCalcCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqQueryCalcCount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServer).QueryCalcCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.calculator/QueryCalcCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServer).QueryCalcCount(ctx, req.(*ReqQueryCalcCount))
	}
	return interceptor(ctx, in, info, handler)
}

var _Calculator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.calculator",
	HandlerType: (*CalculatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryCalcCount",
			Handler:    _Calculator_QueryCalcCount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "calculator.proto",
}
